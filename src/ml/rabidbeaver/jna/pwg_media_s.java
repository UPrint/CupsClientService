package ml.rabidbeaver.jna;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:12</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class pwg_media_s extends Structure {
	/**
	 * PWG 5101.1 "self describing" name<br>
	 * C type : const char*
	 */
	public Pointer pwg;
	/**
	 * PWG 5101.1 "self describing" name<br>
	 * C type : const char*
	 */
	public Pointer legacy;
	/**
	 * PWG 5101.1 "self describing" name<br>
	 * C type : const char*
	 */
	public Pointer ppd;
	/** Width in 2540ths */
	public int width;
	/** Width in 2540ths */
	public int length;
	public pwg_media_s() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("pwg", "legacy", "ppd", "width", "length");
	}
	/**
	 * @param pwg PWG 5101.1 "self describing" name<br>
	 * C type : const char*<br>
	 * @param legacy PWG 5101.1 "self describing" name<br>
	 * C type : const char*<br>
	 * @param ppd PWG 5101.1 "self describing" name<br>
	 * C type : const char*<br>
	 * @param width Width in 2540ths<br>
	 * @param length Width in 2540ths
	 */
	public pwg_media_s(Pointer pwg, Pointer legacy, Pointer ppd, int width, int length) {
		super();
		this.pwg = pwg;
		this.legacy = legacy;
		this.ppd = ppd;
		this.width = width;
		this.length = length;
	}
	public pwg_media_s(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends pwg_media_s implements Structure.ByReference {
		
	};
	public static class ByValue extends pwg_media_s implements Structure.ByValue {
		
	};
}
