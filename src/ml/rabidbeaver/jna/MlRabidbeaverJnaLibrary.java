package ml.rabidbeaver.jna;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.sun.jna.Callback;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.NativeLongByReference;
import com.sun.jna.ptr.PointerByReference;
import java.nio.ByteBuffer;
import java.nio.IntBuffer;
/**
 * JNA Wrapper for library <b>ml.rabidbeaver.jna</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface MlRabidbeaverJnaLibrary extends Library {
	public static final String JNA_LIBRARY_NAME = "ml.rabidbeaver.jna";
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(MlRabidbeaverJnaLibrary.JNA_LIBRARY_NAME);
	public static final MlRabidbeaverJnaLibrary INSTANCE = (MlRabidbeaverJnaLibrary)Native.loadLibrary(MlRabidbeaverJnaLibrary.JNA_LIBRARY_NAME, MlRabidbeaverJnaLibrary.class);
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:10</i><br>
	 * enum values
	 */
	public static interface http_auth_e {
		/**
		 * No authentication in use<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:3</i>
		 */
		public static final int HTTP_AUTH_NONE = 0;
		/**
		 * Basic authentication in use<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:4</i>
		 */
		public static final int HTTP_AUTH_BASIC = 1;
		/**
		 * Digest authentication in use<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:5</i>
		 */
		public static final int HTTP_AUTH_MD5 = 2;
		/**
		 * MD5-session authentication in use<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:6</i>
		 */
		public static final int HTTP_AUTH_MD5_SESS = 3;
		/**
		 * Digest authentication in use for body<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:7</i>
		 */
		public static final int HTTP_AUTH_MD5_INT = 4;
		/**
		 * MD5-session authentication in use for body<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:8</i>
		 */
		public static final int HTTP_AUTH_MD5_SESS_INT = 5;
		/**
		 * GSSAPI authentication in use @since CUPS 1.3/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:9</i>
		 */
		public static final int HTTP_AUTH_NEGOTIATE = 6;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:15</i><br>
	 * enum values
	 */
	public static interface http_encoding_e {
		/**
		 * Data is sent with Content-Length<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:12</i>
		 */
		public static final int HTTP_ENCODING_LENGTH = 0;
		/**
		 * Data is chunked<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:13</i>
		 */
		public static final int HTTP_ENCODING_CHUNKED = 1;
		/**
		 * Sending HTTP fields<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:14</i>
		 */
		public static final int HTTP_ENCODING_FIELDS = 2;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:21</i><br>
	 * enum values
	 */
	public static interface http_encryption_e {
		/**
		 * Encrypt if requested (TLS upgrade)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:17</i>
		 */
		public static final int HTTP_ENCRYPTION_IF_REQUESTED = 0;
		/**
		 * Never encrypt<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:18</i>
		 */
		public static final int HTTP_ENCRYPTION_NEVER = 1;
		/**
		 * Encryption is required (TLS upgrade)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:19</i>
		 */
		public static final int HTTP_ENCRYPTION_REQUIRED = 2;
		/**
		 * Always encrypt (SSL)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:20</i>
		 */
		public static final int HTTP_ENCRYPTION_ALWAYS = 3;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:55</i><br>
	 * enum values
	 */
	public static interface http_field_e {
		/**
		 * Unknown field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:23</i>
		 */
		public static final int HTTP_FIELD_UNKNOWN = -1;
		/**
		 * Accept-Language field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:24</i>
		 */
		public static final int HTTP_FIELD_ACCEPT_LANGUAGE = 0;
		/**
		 * Accept-Ranges field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:25</i>
		 */
		public static final int HTTP_FIELD_ACCEPT_RANGES = 1;
		/**
		 * Authorization field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:26</i>
		 */
		public static final int HTTP_FIELD_AUTHORIZATION = 2;
		/**
		 * Connection field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:27</i>
		 */
		public static final int HTTP_FIELD_CONNECTION = 3;
		/**
		 * Content-Encoding field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:28</i>
		 */
		public static final int HTTP_FIELD_CONTENT_ENCODING = 4;
		/**
		 * Content-Language field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:29</i>
		 */
		public static final int HTTP_FIELD_CONTENT_LANGUAGE = 5;
		/**
		 * Content-Length field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:30</i>
		 */
		public static final int HTTP_FIELD_CONTENT_LENGTH = 6;
		/**
		 * Content-Location field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:31</i>
		 */
		public static final int HTTP_FIELD_CONTENT_LOCATION = 7;
		/**
		 * Content-MD5 field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:32</i>
		 */
		public static final int HTTP_FIELD_CONTENT_MD5 = 8;
		/**
		 * Content-Range field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:33</i>
		 */
		public static final int HTTP_FIELD_CONTENT_RANGE = 9;
		/**
		 * Content-Type field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:34</i>
		 */
		public static final int HTTP_FIELD_CONTENT_TYPE = 10;
		/**
		 * Content-Version field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:35</i>
		 */
		public static final int HTTP_FIELD_CONTENT_VERSION = 11;
		/**
		 * Date field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:36</i>
		 */
		public static final int HTTP_FIELD_DATE = 12;
		/**
		 * Host field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:37</i>
		 */
		public static final int HTTP_FIELD_HOST = 13;
		/**
		 * If-Modified-Since field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:38</i>
		 */
		public static final int HTTP_FIELD_IF_MODIFIED_SINCE = 14;
		/**
		 * If-Unmodified-Since field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:39</i>
		 */
		public static final int HTTP_FIELD_IF_UNMODIFIED_SINCE = 15;
		/**
		 * Keep-Alive field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:40</i>
		 */
		public static final int HTTP_FIELD_KEEP_ALIVE = 16;
		/**
		 * Last-Modified field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:41</i>
		 */
		public static final int HTTP_FIELD_LAST_MODIFIED = 17;
		/**
		 * Link field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:42</i>
		 */
		public static final int HTTP_FIELD_LINK = 18;
		/**
		 * Location field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:43</i>
		 */
		public static final int HTTP_FIELD_LOCATION = 19;
		/**
		 * Range field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:44</i>
		 */
		public static final int HTTP_FIELD_RANGE = 20;
		/**
		 * Referer field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:45</i>
		 */
		public static final int HTTP_FIELD_REFERER = 21;
		/**
		 * Retry-After field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:46</i>
		 */
		public static final int HTTP_FIELD_RETRY_AFTER = 22;
		/**
		 * Transfer-Encoding field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:47</i>
		 */
		public static final int HTTP_FIELD_TRANSFER_ENCODING = 23;
		/**
		 * Upgrade field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:48</i>
		 */
		public static final int HTTP_FIELD_UPGRADE = 24;
		/**
		 * User-Agent field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:49</i>
		 */
		public static final int HTTP_FIELD_USER_AGENT = 25;
		/**
		 * WWW-Authenticate field<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:50</i>
		 */
		public static final int HTTP_FIELD_WWW_AUTHENTICATE = 26;
		/**
		 * Accepting-Encoding field @since CUPS 1.7/OS X 10.9@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:51</i>
		 */
		public static final int HTTP_FIELD_ACCEPT_ENCODING = 27;
		/**
		 * Allow field @since CUPS 1.7/OS X 10.9@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:52</i>
		 */
		public static final int HTTP_FIELD_ALLOW = 28;
		/**
		 * Server field @since CUPS 1.7/OS X 10.9@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:53</i>
		 */
		public static final int HTTP_FIELD_SERVER = 29;
		/**
		 * Maximum field index<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:54</i>
		 */
		public static final int HTTP_FIELD_MAX = 30;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:59</i><br>
	 * enum values
	 */
	public static interface http_keepalive_e {
		/**
		 * No keep alive support<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:57</i>
		 */
		public static final int HTTP_KEEPALIVE_OFF = 0;
		/**
		 * Use keep alive<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:58</i>
		 */
		public static final int HTTP_KEEPALIVE_ON = 1;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:78</i><br>
	 * enum values
	 */
	public static interface http_state_e {
		/**
		 * Error on socket<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:61</i>
		 */
		public static final int HTTP_STATE_ERROR = -1;
		/**
		 * Waiting for command<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:62</i>
		 */
		public static final int HTTP_STATE_WAITING = 0;
		/**
		 * OPTIONS command, waiting for blank line<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:63</i>
		 */
		public static final int HTTP_STATE_OPTIONS = 1;
		/**
		 * GET command, waiting for blank line<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:64</i>
		 */
		public static final int HTTP_STATE_GET = 2;
		/**
		 * GET command, sending data<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:65</i>
		 */
		public static final int HTTP_STATE_GET_SEND = 3;
		/**
		 * HEAD command, waiting for blank line<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:66</i>
		 */
		public static final int HTTP_STATE_HEAD = 4;
		/**
		 * POST command, waiting for blank line<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:67</i>
		 */
		public static final int HTTP_STATE_POST = 5;
		/**
		 * POST command, receiving data<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:68</i>
		 */
		public static final int HTTP_STATE_POST_RECV = 6;
		/**
		 * POST command, sending data<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:69</i>
		 */
		public static final int HTTP_STATE_POST_SEND = 7;
		/**
		 * PUT command, waiting for blank line<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:70</i>
		 */
		public static final int HTTP_STATE_PUT = 8;
		/**
		 * PUT command, receiving data<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:71</i>
		 */
		public static final int HTTP_STATE_PUT_RECV = 9;
		/**
		 * DELETE command, waiting for blank line<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:72</i>
		 */
		public static final int HTTP_STATE_DELETE = 10;
		/**
		 * TRACE command, waiting for blank line<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:73</i>
		 */
		public static final int HTTP_STATE_TRACE = 11;
		/**
		 * CONNECT command, waiting for blank line<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:74</i>
		 */
		public static final int HTTP_STATE_CONNECT = 12;
		/**
		 * Command complete, sending status<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:75</i>
		 */
		public static final int HTTP_STATE_STATUS = 13;
		/**
		 * Unknown request method, waiting for blank line @since CUPS 1.7/OS X 10.9@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:76</i>
		 */
		public static final int HTTP_STATE_UNKNOWN_METHOD = 14;
		/**
		 * Unknown request method, waiting for blank line @since CUPS 1.7/OS X 10.9@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:77</i>
		 */
		public static final int HTTP_STATE_UNKNOWN_VERSION = 15;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:127</i><br>
	 * enum values
	 */
	public static interface http_status_e {
		/**
		 * An error response from httpXxxx()<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:82</i>
		 */
		public static final int HTTP_STATUS_ERROR = -1;
		/**
		 * No Expect value @since CUPS 1.7/OS X 10.9@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:83</i>
		 */
		public static final int HTTP_STATUS_NONE = 0;
		/**
		 * Everything OK, keep going...<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:84</i>
		 */
		public static final int HTTP_STATUS_CONTINUE = 100;
		/**
		 * HTTP upgrade to TLS/SSL<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:85</i>
		 */
		public static final int HTTP_STATUS_SWITCHING_PROTOCOLS = 101;
		/**
		 * OPTIONS/GET/HEAD/POST/TRACE command was successful<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:86</i>
		 */
		public static final int HTTP_STATUS_OK = 200;
		/**
		 * PUT command was successful<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:87</i>
		 */
		public static final int HTTP_STATUS_CREATED = 201;
		/**
		 * DELETE command was successful<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:88</i>
		 */
		public static final int HTTP_STATUS_ACCEPTED = 202;
		/**
		 * Information isn't authoritative<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:89</i>
		 */
		public static final int HTTP_STATUS_NOT_AUTHORITATIVE = 203;
		/**
		 * Successful command, no new data<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:90</i>
		 */
		public static final int HTTP_STATUS_NO_CONTENT = 204;
		/**
		 * Content was reset/recreated<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:91</i>
		 */
		public static final int HTTP_STATUS_RESET_CONTENT = 205;
		/**
		 * Only a partial file was recieved/sent<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:92</i>
		 */
		public static final int HTTP_STATUS_PARTIAL_CONTENT = 206;
		/**
		 * Multiple files match request<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:93</i>
		 */
		public static final int HTTP_STATUS_MULTIPLE_CHOICES = 300;
		/**
		 * Document has moved permanently<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:94</i>
		 */
		public static final int HTTP_STATUS_MOVED_PERMANENTLY = 301;
		/**
		 * Document has moved temporarily<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:95</i>
		 */
		public static final int HTTP_STATUS_MOVED_TEMPORARILY = 302;
		/**
		 * See this other link...<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:96</i>
		 */
		public static final int HTTP_STATUS_SEE_OTHER = 303;
		/**
		 * File not modified<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:97</i>
		 */
		public static final int HTTP_STATUS_NOT_MODIFIED = 304;
		/**
		 * Must use a proxy to access this URI<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:98</i>
		 */
		public static final int HTTP_STATUS_USE_PROXY = 305;
		/**
		 * Bad request<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:99</i>
		 */
		public static final int HTTP_STATUS_BAD_REQUEST = 400;
		/**
		 * Unauthorized to access host<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:100</i>
		 */
		public static final int HTTP_STATUS_UNAUTHORIZED = 401;
		/**
		 * Payment required<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:101</i>
		 */
		public static final int HTTP_STATUS_PAYMENT_REQUIRED = 402;
		/**
		 * Forbidden to access this URI<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:102</i>
		 */
		public static final int HTTP_STATUS_FORBIDDEN = 403;
		/**
		 * URI was not found<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:103</i>
		 */
		public static final int HTTP_STATUS_NOT_FOUND = 404;
		/**
		 * Method is not allowed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:104</i>
		 */
		public static final int HTTP_STATUS_METHOD_NOT_ALLOWED = 405;
		/**
		 * Not Acceptable<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:105</i>
		 */
		public static final int HTTP_STATUS_NOT_ACCEPTABLE = 406;
		/**
		 * Proxy Authentication is Required<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:106</i>
		 */
		public static final int HTTP_STATUS_PROXY_AUTHENTICATION = 407;
		/**
		 * Request timed out<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:107</i>
		 */
		public static final int HTTP_STATUS_REQUEST_TIMEOUT = 408;
		/**
		 * Request is self-conflicting<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:108</i>
		 */
		public static final int HTTP_STATUS_CONFLICT = 409;
		/**
		 * Server has gone away<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:109</i>
		 */
		public static final int HTTP_STATUS_GONE = 410;
		/**
		 * A content length or encoding is required<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:110</i>
		 */
		public static final int HTTP_STATUS_LENGTH_REQUIRED = 411;
		/**
		 * Precondition failed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:111</i>
		 */
		public static final int HTTP_STATUS_PRECONDITION = 412;
		/**
		 * Request entity too large<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:112</i>
		 */
		public static final int HTTP_STATUS_REQUEST_TOO_LARGE = 413;
		/**
		 * URI too long<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:113</i>
		 */
		public static final int HTTP_STATUS_URI_TOO_LONG = 414;
		/**
		 * The requested media type is unsupported<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:114</i>
		 */
		public static final int HTTP_STATUS_UNSUPPORTED_MEDIATYPE = 415;
		/**
		 * The requested range is not satisfiable<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:115</i>
		 */
		public static final int HTTP_STATUS_REQUESTED_RANGE = 416;
		/**
		 * The expectation given in an Expect header field was not met<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:116</i>
		 */
		public static final int HTTP_STATUS_EXPECTATION_FAILED = 417;
		/**
		 * Upgrade to SSL/TLS required<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:117</i>
		 */
		public static final int HTTP_STATUS_UPGRADE_REQUIRED = 426;
		/**
		 * Internal server error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:118</i>
		 */
		public static final int HTTP_STATUS_SERVER_ERROR = 500;
		/**
		 * Feature not implemented<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:119</i>
		 */
		public static final int HTTP_STATUS_NOT_IMPLEMENTED = 501;
		/**
		 * Bad gateway<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:120</i>
		 */
		public static final int HTTP_STATUS_BAD_GATEWAY = 502;
		/**
		 * Service is unavailable<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:121</i>
		 */
		public static final int HTTP_STATUS_SERVICE_UNAVAILABLE = 503;
		/**
		 * Gateway connection timed out<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:122</i>
		 */
		public static final int HTTP_STATUS_GATEWAY_TIMEOUT = 504;
		/**
		 * HTTP version not supported<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:123</i>
		 */
		public static final int HTTP_STATUS_NOT_SUPPORTED = 505;
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:124</i> */
		public static final int HTTP_STATUS_CUPS_AUTHORIZATION_CANCELED = 1000;
		/**
		 * Error negotiating a secure connection @since CUPS 1.5/OS X 10.7@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:125</i>
		 */
		public static final int HTTP_STATUS_CUPS_PKI_ERROR = 1001;
		/**
		 * Web interface is disabled @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:126</i>
		 */
		public static final int HTTP_STATUS_CUPS_WEBIF_DISABLED = 1002;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:135</i><br>
	 * enum values
	 */
	public static interface http_trust_e {
		/**
		 * Credentials are OK/trusted<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:129</i>
		 */
		public static final int HTTP_TRUST_OK = 0;
		/**
		 * Credentials are invalid<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:130</i>
		 */
		public static final int HTTP_TRUST_INVALID = 1;
		/**
		 * Credentials have changed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:131</i>
		 */
		public static final int HTTP_TRUST_CHANGED = 2;
		/**
		 * Credentials are expired<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:132</i>
		 */
		public static final int HTTP_TRUST_EXPIRED = 3;
		/**
		 * Credentials have been renewed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:133</i>
		 */
		public static final int HTTP_TRUST_RENEWED = 4;
		/**
		 * Credentials are unknown/new<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:134</i>
		 */
		public static final int HTTP_TRUST_UNKNOWN = 5;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:149</i><br>
	 * enum values
	 */
	public static interface http_uri_status_e {
		/**
		 * URI buffer for httpAssembleURI is too small<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:137</i>
		 */
		public static final int HTTP_URI_STATUS_OVERFLOW = -8;
		/**
		 * Bad arguments to function (error)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:138</i>
		 */
		public static final int HTTP_URI_STATUS_BAD_ARGUMENTS = -7;
		/**
		 * Bad resource in URI (error)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:139</i>
		 */
		public static final int HTTP_URI_STATUS_BAD_RESOURCE = -6;
		/**
		 * Bad port number in URI (error)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:140</i>
		 */
		public static final int HTTP_URI_STATUS_BAD_PORT = -5;
		/**
		 * Bad hostname in URI (error)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:141</i>
		 */
		public static final int HTTP_URI_STATUS_BAD_HOSTNAME = -4;
		/**
		 * Bad username in URI (error)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:142</i>
		 */
		public static final int HTTP_URI_STATUS_BAD_USERNAME = -3;
		/**
		 * Bad scheme in URI (error)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:143</i>
		 */
		public static final int HTTP_URI_STATUS_BAD_SCHEME = -2;
		/**
		 * Bad/empty URI (error)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:144</i>
		 */
		public static final int HTTP_URI_STATUS_BAD_URI = -1;
		/**
		 * URI decoded OK<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:145</i>
		 */
		public static final int HTTP_URI_STATUS_OK = 0;
		/**
		 * Missing scheme in URI (warning)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:146</i>
		 */
		public static final int HTTP_URI_STATUS_MISSING_SCHEME = 1;
		/**
		 * Unknown scheme in URI (warning)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:147</i>
		 */
		public static final int HTTP_URI_STATUS_UNKNOWN_SCHEME = 2;
		/**
		 * Missing resource in URI (warning)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:148</i>
		 */
		public static final int HTTP_URI_STATUS_MISSING_RESOURCE = 3;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:159</i><br>
	 * enum values
	 */
	public static interface http_uri_coding_e {
		/**
		 * Don't en/decode anything<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:151</i>
		 */
		public static final int HTTP_URI_CODING_NONE = 0;
		/**
		 * En/decode the username portion<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:152</i>
		 */
		public static final int HTTP_URI_CODING_USERNAME = 1;
		/**
		 * En/decode the hostname portion<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:153</i>
		 */
		public static final int HTTP_URI_CODING_HOSTNAME = 2;
		/**
		 * En/decode the resource portion<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:154</i>
		 */
		public static final int HTTP_URI_CODING_RESOURCE = 4;
		/**
		 * En/decode all but the query<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:155</i>
		 */
		public static final int HTTP_URI_CODING_MOST = 7;
		/**
		 * En/decode the query portion<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:156</i>
		 */
		public static final int HTTP_URI_CODING_QUERY = 8;
		/**
		 * En/decode everything<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:157</i>
		 */
		public static final int HTTP_URI_CODING_ALL = 15;
		/**
		 * Use RFC 6874 address format<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:158</i>
		 */
		public static final int HTTP_URI_CODING_RFC6874 = 16;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:164</i><br>
	 * enum values
	 */
	public static interface http_version_e {
		/**
		 * HTTP/0.9<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:161</i>
		 */
		public static final int HTTP_VERSION_0_9 = 9;
		/**
		 * HTTP/1.0<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:162</i>
		 */
		public static final int HTTP_VERSION_1_0 = 100;
		/**
		 * HTTP/1.1<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:163</i>
		 */
		public static final int HTTP_VERSION_1_1 = 101;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:8</i><br>
	 * enum values
	 */
	public static interface ipp_dstate_e {
		/**
		 * Document is pending<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:3</i>
		 */
		public static final int IPP_DOCUMENT_PENDING = 3;
		/**
		 * Document is processing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:4</i>
		 */
		public static final int IPP_DOCUMENT_PROCESSING = 5;
		/**
		 * Document is canceled<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:5</i>
		 */
		public static final int IPP_DOCUMENT_CANCELED = 7;
		/**
		 * Document is aborted<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:6</i>
		 */
		public static final int IPP_DOCUMENT_ABORTED = 8;
		/**
		 * Document is completed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:7</i>
		 */
		public static final int IPP_DOCUMENT_COMPLETED = 9;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:102</i><br>
	 * enum values
	 */
	public static interface ipp_finishings_e {
		/**
		 * No finishing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:10</i>
		 */
		public static final int IPP_FINISHINGS_NONE = 3;
		/**
		 * Staple (any location)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:11</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE = 4;
		/**
		 * Punch (any location/count)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:12</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH = 5;
		/**
		 * Add cover<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:13</i>
		 */
		public static final int IPP_FINISHINGS_COVER = 6;
		/**
		 * Bind<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:14</i>
		 */
		public static final int IPP_FINISHINGS_BIND = 7;
		/**
		 * Staple interior<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:15</i>
		 */
		public static final int IPP_FINISHINGS_SADDLE_STITCH = 8;
		/**
		 * Stitch along any side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:16</i>
		 */
		public static final int IPP_FINISHINGS_EDGE_STITCH = 9;
		/**
		 * Fold (any type)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:17</i>
		 */
		public static final int IPP_FINISHINGS_FOLD = 10;
		/**
		 * Trim (any type)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:18</i>
		 */
		public static final int IPP_FINISHINGS_TRIM = 11;
		/**
		 * Bale (any type)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:19</i>
		 */
		public static final int IPP_FINISHINGS_BALE = 12;
		/**
		 * Fold to make booklet<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:20</i>
		 */
		public static final int IPP_FINISHINGS_BOOKLET_MAKER = 13;
		/**
		 * Offset for binding (any type)<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:21</i>
		 */
		public static final int IPP_FINISHINGS_JOG_OFFSET = 14;
		/**
		 * Apply protective liquid or powder coating<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:22</i>
		 */
		public static final int IPP_FINISHINGS_COAT = 15;
		/**
		 * Apply protective (solid) material<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:23</i>
		 */
		public static final int IPP_FINISHINGS_LAMINATE = 16;
		/**
		 * Staple top left corner<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:24</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_TOP_LEFT = 20;
		/**
		 * Staple bottom left corner<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:25</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_BOTTOM_LEFT = 21;
		/**
		 * Staple top right corner<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:26</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_TOP_RIGHT = 22;
		/**
		 * Staple bottom right corner<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:27</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_BOTTOM_RIGHT = 23;
		/**
		 * Stitch along left side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:28</i>
		 */
		public static final int IPP_FINISHINGS_EDGE_STITCH_LEFT = 24;
		/**
		 * Stitch along top edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:29</i>
		 */
		public static final int IPP_FINISHINGS_EDGE_STITCH_TOP = 25;
		/**
		 * Stitch along right side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:30</i>
		 */
		public static final int IPP_FINISHINGS_EDGE_STITCH_RIGHT = 26;
		/**
		 * Stitch along bottom edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:31</i>
		 */
		public static final int IPP_FINISHINGS_EDGE_STITCH_BOTTOM = 27;
		/**
		 * Two staples on left<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:32</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_DUAL_LEFT = 28;
		/**
		 * Two staples on top<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:33</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_DUAL_TOP = 29;
		/**
		 * Two staples on right<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:34</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_DUAL_RIGHT = 30;
		/**
		 * Two staples on bottom<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:35</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_DUAL_BOTTOM = 31;
		/**
		 * Three staples on left<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:36</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_TRIPLE_LEFT = 32;
		/**
		 * Three staples on top<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:37</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_TRIPLE_TOP = 33;
		/**
		 * Three staples on right<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:38</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_TRIPLE_RIGHT = 34;
		/**
		 * Three staples on bottom<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:39</i>
		 */
		public static final int IPP_FINISHINGS_STAPLE_TRIPLE_BOTTOM = 35;
		/**
		 * Bind on left<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:40</i>
		 */
		public static final int IPP_FINISHINGS_BIND_LEFT = 50;
		/**
		 * Bind on top<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:41</i>
		 */
		public static final int IPP_FINISHINGS_BIND_TOP = 51;
		/**
		 * Bind on right<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:42</i>
		 */
		public static final int IPP_FINISHINGS_BIND_RIGHT = 52;
		/**
		 * Bind on bottom<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:43</i>
		 */
		public static final int IPP_FINISHINGS_BIND_BOTTOM = 53;
		/**
		 * Trim output after each page<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:44</i>
		 */
		public static final int IPP_FINISHINGS_TRIM_AFTER_PAGES = 60;
		/**
		 * Trim output after each document<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:45</i>
		 */
		public static final int IPP_FINISHINGS_TRIM_AFTER_DOCUMENTS = 61;
		/**
		 * Trim output after each copy<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:46</i>
		 */
		public static final int IPP_FINISHINGS_TRIM_AFTER_COPIES = 62;
		/**
		 * Trim output after job<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:47</i>
		 */
		public static final int IPP_FINISHINGS_TRIM_AFTER_JOB = 63;
		/**
		 * Punch 1 hole top left<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:48</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_TOP_LEFT = 70;
		/**
		 * Punch 1 hole bottom left<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:49</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_BOTTOM_LEFT = 71;
		/**
		 * Punch 1 hole top right<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:50</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_TOP_RIGHT = 72;
		/**
		 * Punch 1 hole bottom right<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:51</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_BOTTOM_RIGHT = 73;
		/**
		 * Punch 2 holes left side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:52</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_DUAL_LEFT = 74;
		/**
		 * Punch 2 holes top edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:53</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_DUAL_TOP = 75;
		/**
		 * Punch 2 holes right side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:54</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_DUAL_RIGHT = 76;
		/**
		 * Punch 2 holes bottom edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:55</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_DUAL_BOTTOM = 77;
		/**
		 * Punch 3 holes left side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:56</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_TRIPLE_LEFT = 78;
		/**
		 * Punch 3 holes top edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:57</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_TRIPLE_TOP = 79;
		/**
		 * Punch 3 holes right side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:58</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_TRIPLE_RIGHT = 80;
		/**
		 * Punch 3 holes bottom edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:59</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_TRIPLE_BOTTOM = 81;
		/**
		 * Punch 4 holes left side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:60</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_QUAD_LEFT = 82;
		/**
		 * Punch 4 holes top edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:61</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_QUAD_TOP = 83;
		/**
		 * Punch 4 holes right side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:62</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_QUAD_RIGHT = 84;
		/**
		 * Punch 4 holes bottom edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:63</i>
		 */
		public static final int IPP_FINISHINGS_PUNCH_QUAD_BOTTOM = 85;
		/**
		 * Accordian-fold the paper vertically into four sections<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:64</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_ACCORDIAN = 90;
		/**
		 * Fold the top and bottom quarters of the paper towards the midline, then fold in half vertically<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:65</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_DOUBLE_GATE = 91;
		/**
		 * Fold the top and bottom quarters of the paper towards the midline<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:66</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_GATE = 92;
		/**
		 * Fold the paper in half vertically<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:67</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_HALF = 93;
		/**
		 * Fold the paper in half horizontally, then Z-fold the paper vertically<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:68</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_HALF_Z = 94;
		/**
		 * Fold the top quarter of the paper towards the midline<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:69</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_LEFT_GATE = 95;
		/**
		 * Fold the paper into three sections vertically; sometimes also known as a C fold<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:70</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_LETTER = 96;
		/**
		 * Fold the paper in half vertically two times, yielding four sections<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:71</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_PARALLEL = 97;
		/**
		 * Fold the paper in half horizontally and vertically; sometimes also called a cross fold<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:72</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_POSTER = 98;
		/**
		 * Fold the bottom quarter of the paper towards the midline<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:73</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_RIGHT_GATE = 99;
		/**
		 * Fold the paper vertically into three sections, forming a Z<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:74</i>
		 */
		public static final int IPP_FINISHINGS_FOLD_Z = 100;
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:75</i> */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_TOP_LEFT = 0x40000046;
		/**
		 * Punch 1 hole bottom left<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:76</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_BOTTOM_LEFT = (0x40000046 + 1);
		/**
		 * Punch 1 hole top right<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:77</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_TOP_RIGHT = (0x40000046 + 2);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:78</i> */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_BOTTOM_RIGHT = (0x40000046 + 3);
		/**
		 * Punch 2 holes left side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:79</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_DUAL_LEFT = (0x40000046 + 4);
		/**
		 * Punch 2 holes top edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:80</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_DUAL_TOP = (0x40000046 + 5);
		/**
		 * Punch 2 holes right side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:81</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_DUAL_RIGHT = (0x40000046 + 6);
		/**
		 * Punch 2 holes bottom edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:82</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_DUAL_BOTTOM = (0x40000046 + 7);
		/**
		 * Punch 3 holes left side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:83</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_TRIPLE_LEFT = (0x40000046 + 8);
		/**
		 * Punch 3 holes top edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:84</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_TRIPLE_TOP = (0x40000046 + 9);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:85</i> */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_TRIPLE_RIGHT = (0x40000046 + 10);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:86</i> */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_TRIPLE_BOTTOM = (0x40000046 + 11);
		/**
		 * Punch 4 holes left side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:87</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_QUAD_LEFT = (0x40000046 + 12);
		/**
		 * Punch 4 holes top edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:88</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_QUAD_TOP = (0x40000046 + 13);
		/**
		 * Punch 4 holes right side<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:89</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_QUAD_RIGHT = (0x40000046 + 14);
		/**
		 * Punch 4 holes bottom edge<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:90</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_PUNCH_QUAD_BOTTOM = (0x40000046 + 15);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:91</i> */
		public static final int IPP_FINISHINGS_CUPS_FOLD_ACCORDIAN = 0x4000005A;
		/**
		 * Fold the top and bottom quarters of the paper towards the midline, then fold in half vertically<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:92</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_DOUBLE_GATE = (0x4000005A + 1);
		/**
		 * Fold the top and bottom quarters of the paper towards the midline<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:93</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_GATE = (0x4000005A + 2);
		/**
		 * Fold the paper in half vertically<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:94</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_HALF = (0x4000005A + 3);
		/**
		 * Fold the paper in half horizontally, then Z-fold the paper vertically<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:95</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_HALF_Z = (0x4000005A + 4);
		/**
		 * Fold the top quarter of the paper towards the midline<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:96</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_LEFT_GATE = (0x4000005A + 5);
		/**
		 * Fold the paper into three sections vertically; sometimes also known as a C fold<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:97</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_LETTER = (0x4000005A + 6);
		/**
		 * Fold the paper in half vertically two times, yielding four sections<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:98</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_PARALLEL = (0x4000005A + 7);
		/**
		 * Fold the paper in half horizontally and vertically; sometimes also called a cross fold<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:99</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_POSTER = (0x4000005A + 8);
		/**
		 * Fold the bottom quarter of the paper towards the midline<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:100</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_RIGHT_GATE = (0x4000005A + 9);
		/**
		 * Fold the paper vertically into three sections, forming a Z<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:101</i>
		 */
		public static final int IPP_FINISHINGS_CUPS_FOLD_Z = (0x4000005A + 10);
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:109</i><br>
	 * enum values
	 */
	public static interface ipp_jcollate_e {
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:106</i> */
		public static final int IPP_JCOLLATE_UNCOLLATED_SHEETS = 3;
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:107</i> */
		public static final int IPP_JCOLLATE_COLLATED_DOCUMENTS = 4;
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:108</i> */
		public static final int IPP_JCOLLATE_UNCOLLATED_DOCUMENTS = 5;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:118</i><br>
	 * enum values
	 */
	public static interface ipp_jstate_e {
		/**
		 * Job is waiting to be printed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:111</i>
		 */
		public static final int IPP_JSTATE_PENDING = 3;
		/**
		 * Job is held for printing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:112</i>
		 */
		public static final int IPP_JSTATE_HELD = 4;
		/**
		 * Job is currently printing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:113</i>
		 */
		public static final int IPP_JSTATE_PROCESSING = 5;
		/**
		 * Job has been stopped<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:114</i>
		 */
		public static final int IPP_JSTATE_STOPPED = 6;
		/**
		 * Job has been canceled<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:115</i>
		 */
		public static final int IPP_JSTATE_CANCELED = 7;
		/**
		 * Job has aborted due to error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:116</i>
		 */
		public static final int IPP_JSTATE_ABORTED = 8;
		/**
		 * Job has completed successfully<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:117</i>
		 */
		public static final int IPP_JSTATE_COMPLETED = 9;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:198</i><br>
	 * enum values
	 */
	public static interface ipp_op_e {
		/**
		 * Invalid operation name for @link ippOpValue@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:120</i>
		 */
		public static final int IPP_OP_CUPS_INVALID = -1;
		/**
		 * No operation @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:121</i>
		 */
		public static final int IPP_OP_CUPS_NONE = 0;
		/**
		 * Print a single file<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:122</i>
		 */
		public static final int IPP_OP_PRINT_JOB = 0x0002;
		/**
		 * Print a single URL @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:123</i>
		 */
		public static final int IPP_OP_PRINT_URI = (0x0002 + 1);
		/**
		 * Validate job options<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:124</i>
		 */
		public static final int IPP_OP_VALIDATE_JOB = (0x0002 + 2);
		/**
		 * Create an empty print job<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:125</i>
		 */
		public static final int IPP_OP_CREATE_JOB = (0x0002 + 3);
		/**
		 * Add a file to a job<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:126</i>
		 */
		public static final int IPP_OP_SEND_DOCUMENT = (0x0002 + 4);
		/**
		 * Add a URL to a job @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:127</i>
		 */
		public static final int IPP_OP_SEND_URI = (0x0002 + 5);
		/**
		 * Cancel a job<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:128</i>
		 */
		public static final int IPP_OP_CANCEL_JOB = (0x0002 + 6);
		/**
		 * Get job attributes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:129</i>
		 */
		public static final int IPP_OP_GET_JOB_ATTRIBUTES = (0x0002 + 7);
		/**
		 * Get a list of jobs<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:130</i>
		 */
		public static final int IPP_OP_GET_JOBS = (0x0002 + 8);
		/**
		 * Get printer attributes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:131</i>
		 */
		public static final int IPP_OP_GET_PRINTER_ATTRIBUTES = (0x0002 + 9);
		/**
		 * Hold a job for printing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:132</i>
		 */
		public static final int IPP_OP_HOLD_JOB = (0x0002 + 10);
		/**
		 * Release a job for printing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:133</i>
		 */
		public static final int IPP_OP_RELEASE_JOB = (0x0002 + 11);
		/**
		 * Reprint a job<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:134</i>
		 */
		public static final int IPP_OP_RESTART_JOB = (0x0002 + 12);
		/**
		 * Stop a printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:135</i>
		 */
		public static final int IPP_OP_PAUSE_PRINTER = 0x0010;
		/**
		 * Start a printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:136</i>
		 */
		public static final int IPP_OP_RESUME_PRINTER = (0x0010 + 1);
		/**
		 * Cancel all jobs<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:137</i>
		 */
		public static final int IPP_OP_PURGE_JOBS = (0x0010 + 2);
		/**
		 * Set printer attributes @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:138</i>
		 */
		public static final int IPP_OP_SET_PRINTER_ATTRIBUTES = (0x0010 + 3);
		/**
		 * Set job attributes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:139</i>
		 */
		public static final int IPP_OP_SET_JOB_ATTRIBUTES = (0x0010 + 4);
		/**
		 * Get supported attribute values<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:140</i>
		 */
		public static final int IPP_OP_GET_PRINTER_SUPPORTED_VALUES = (0x0010 + 5);
		/**
		 * Create one or more printer subscriptions @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:141</i>
		 */
		public static final int IPP_OP_CREATE_PRINTER_SUBSCRIPTIONS = (0x0010 + 6);
		/**
		 * Create one of more job subscriptions @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:142</i>
		 */
		public static final int IPP_OP_CREATE_JOB_SUBSCRIPTIONS = (0x0010 + 7);
		/**
		 * Get subscription attributes @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:143</i>
		 */
		public static final int IPP_OP_GET_SUBSCRIPTION_ATTRIBUTES = (0x0010 + 8);
		/**
		 * Get list of subscriptions @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:144</i>
		 */
		public static final int IPP_OP_GET_SUBSCRIPTIONS = (0x0010 + 9);
		/**
		 * Renew a printer subscription @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:145</i>
		 */
		public static final int IPP_OP_RENEW_SUBSCRIPTION = (0x0010 + 10);
		/**
		 * Cancel a subscription @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:146</i>
		 */
		public static final int IPP_OP_CANCEL_SUBSCRIPTION = (0x0010 + 11);
		/**
		 * Get notification events @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:147</i>
		 */
		public static final int IPP_OP_GET_NOTIFICATIONS = (0x0010 + 12);
		/**
		 * Send notification events @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:148</i>
		 */
		public static final int IPP_OP_SEND_NOTIFICATIONS = (0x0010 + 13);
		/**
		 * Get resource attributes @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:149</i>
		 */
		public static final int IPP_OP_GET_RESOURCE_ATTRIBUTES = (0x0010 + 14);
		/**
		 * Get resource data @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:150</i>
		 */
		public static final int IPP_OP_GET_RESOURCE_DATA = (0x0010 + 15);
		/**
		 * Get list of resources @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:151</i>
		 */
		public static final int IPP_OP_GET_RESOURCES = (0x0010 + 16);
		/**
		 * Get printer support files @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:152</i>
		 */
		public static final int IPP_OP_GET_PRINT_SUPPORT_FILES = (0x0010 + 17);
		/**
		 * Start a printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:153</i>
		 */
		public static final int IPP_OP_ENABLE_PRINTER = (0x0010 + 18);
		/**
		 * Stop a printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:154</i>
		 */
		public static final int IPP_OP_DISABLE_PRINTER = (0x0010 + 19);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:155</i> */
		public static final int IPP_OP_PAUSE_PRINTER_AFTER_CURRENT_JOB = (0x0010 + 20);
		/**
		 * Hold new jobs @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:156</i>
		 */
		public static final int IPP_OP_HOLD_NEW_JOBS = (0x0010 + 21);
		/**
		 * Release new jobs @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:157</i>
		 */
		public static final int IPP_OP_RELEASE_HELD_NEW_JOBS = (0x0010 + 22);
		/**
		 * Stop a printer @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:158</i>
		 */
		public static final int IPP_OP_DEACTIVATE_PRINTER = (0x0010 + 23);
		/**
		 * Start a printer @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:159</i>
		 */
		public static final int IPP_OP_ACTIVATE_PRINTER = (0x0010 + 24);
		/**
		 * Restart a printer @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:160</i>
		 */
		public static final int IPP_OP_RESTART_PRINTER = (0x0010 + 25);
		/**
		 * Turn a printer off @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:161</i>
		 */
		public static final int IPP_OP_SHUTDOWN_PRINTER = (0x0010 + 26);
		/**
		 * Turn a printer on @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:162</i>
		 */
		public static final int IPP_OP_STARTUP_PRINTER = (0x0010 + 27);
		/**
		 * Reprint a job @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:163</i>
		 */
		public static final int IPP_OP_REPROCESS_JOB = (0x0010 + 28);
		/**
		 * Cancel the current job @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:164</i>
		 */
		public static final int IPP_OP_CANCEL_CURRENT_JOB = (0x0010 + 29);
		/**
		 * Suspend the current job @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:165</i>
		 */
		public static final int IPP_OP_SUSPEND_CURRENT_JOB = (0x0010 + 30);
		/**
		 * Resume the current job @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:166</i>
		 */
		public static final int IPP_OP_RESUME_JOB = (0x0010 + 31);
		/**
		 * Promote a job to print sooner @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:167</i>
		 */
		public static final int IPP_OP_PROMOTE_JOB = (0x0010 + 32);
		/**
		 * Schedule a job to print after another @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:168</i>
		 */
		public static final int IPP_OP_SCHEDULE_JOB_AFTER = (0x0010 + 33);
		/**
		 * Cancel-Document @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:169</i>
		 */
		public static final int IPP_OP_CANCEL_DOCUMENT = 0x0033;
		/**
		 * Get-Document-Attributes @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:170</i>
		 */
		public static final int IPP_OP_GET_DOCUMENT_ATTRIBUTES = (0x0033 + 1);
		/**
		 * Get-Documents @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:171</i>
		 */
		public static final int IPP_OP_GET_DOCUMENTS = (0x0033 + 2);
		/**
		 * Delete-Document @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:172</i>
		 */
		public static final int IPP_OP_DELETE_DOCUMENT = (0x0033 + 3);
		/**
		 * Set-Document-Attributes @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:173</i>
		 */
		public static final int IPP_OP_SET_DOCUMENT_ATTRIBUTES = (0x0033 + 4);
		/**
		 * Cancel-Jobs<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:174</i>
		 */
		public static final int IPP_OP_CANCEL_JOBS = (0x0033 + 5);
		/**
		 * Cancel-My-Jobs<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:175</i>
		 */
		public static final int IPP_OP_CANCEL_MY_JOBS = (0x0033 + 6);
		/**
		 * Resubmit-Job<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:176</i>
		 */
		public static final int IPP_OP_RESUBMIT_JOB = (0x0033 + 7);
		/**
		 * Close-Job<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:177</i>
		 */
		public static final int IPP_OP_CLOSE_JOB = (0x0033 + 8);
		/**
		 * Identify-Printer @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:178</i>
		 */
		public static final int IPP_OP_IDENTIFY_PRINTER = (0x0033 + 9);
		/**
		 * Validate-Document @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:179</i>
		 */
		public static final int IPP_OP_VALIDATE_DOCUMENT = (0x0033 + 10);
		/**
		 * Send-Hardcopy-Document @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:180</i>
		 */
		public static final int IPP_OP_SEND_HARDCOPY_DOCUMENT = (0x0033 + 11);
		/**
		 * Reserved @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:181</i>
		 */
		public static final int IPP_OP_PRIVATE = 0x4000;
		/**
		 * Get the default printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:182</i>
		 */
		public static final int IPP_OP_CUPS_GET_DEFAULT = (0x4000 + 1);
		/**
		 * Get a list of printers and/or classes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:183</i>
		 */
		public static final int IPP_OP_CUPS_GET_PRINTERS = (0x4000 + 2);
		/**
		 * Add or modify a printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:184</i>
		 */
		public static final int IPP_OP_CUPS_ADD_MODIFY_PRINTER = (0x4000 + 3);
		/**
		 * Delete a printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:185</i>
		 */
		public static final int IPP_OP_CUPS_DELETE_PRINTER = (0x4000 + 4);
		/**
		 * Get a list of classes @deprecated@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:186</i>
		 */
		public static final int IPP_OP_CUPS_GET_CLASSES = (0x4000 + 5);
		/**
		 * Add or modify a class<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:187</i>
		 */
		public static final int IPP_OP_CUPS_ADD_MODIFY_CLASS = (0x4000 + 6);
		/**
		 * Delete a class<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:188</i>
		 */
		public static final int IPP_OP_CUPS_DELETE_CLASS = (0x4000 + 7);
		/**
		 * Accept new jobs on a printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:189</i>
		 */
		public static final int IPP_OP_CUPS_ACCEPT_JOBS = (0x4000 + 8);
		/**
		 * Reject new jobs on a printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:190</i>
		 */
		public static final int IPP_OP_CUPS_REJECT_JOBS = (0x4000 + 9);
		/**
		 * Set the default printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:191</i>
		 */
		public static final int IPP_OP_CUPS_SET_DEFAULT = (0x4000 + 10);
		/**
		 * Get a list of supported devices<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:192</i>
		 */
		public static final int IPP_OP_CUPS_GET_DEVICES = (0x4000 + 11);
		/**
		 * Get a list of supported drivers<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:193</i>
		 */
		public static final int IPP_OP_CUPS_GET_PPDS = (0x4000 + 12);
		/**
		 * Move a job to a different printer<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:194</i>
		 */
		public static final int IPP_OP_CUPS_MOVE_JOB = (0x4000 + 13);
		/**
		 * Authenticate a job @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:195</i>
		 */
		public static final int IPP_OP_CUPS_AUTHENTICATE_JOB = (0x4000 + 14);
		/**
		 * Get a PPD file @since CUPS 1.3/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:196</i>
		 */
		public static final int IPP_OP_CUPS_GET_PPD = (0x4000 + 15);
		/**
		 * Get a document file @since CUPS 1.4/OS X 10.6@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:197</i>
		 */
		public static final int IPP_OP_CUPS_GET_DOCUMENT = 0x4027;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:205</i><br>
	 * enum values
	 */
	public static interface ipp_orient_e {
		/**
		 * No rotation<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:200</i>
		 */
		public static final int IPP_ORIENT_PORTRAIT = 3;
		/**
		 * 90 degrees counter-clockwise<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:201</i>
		 */
		public static final int IPP_ORIENT_LANDSCAPE = 4;
		/**
		 * 90 degrees clockwise<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:202</i>
		 */
		public static final int IPP_ORIENT_REVERSE_LANDSCAPE = 5;
		/**
		 * 180 degrees<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:203</i>
		 */
		public static final int IPP_ORIENT_REVERSE_PORTRAIT = 6;
		/**
		 * No rotation<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:204</i>
		 */
		public static final int IPP_ORIENT_NONE = 7;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:210</i><br>
	 * enum values
	 */
	public static interface ipp_pstate_e {
		/**
		 * Printer is idle<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:207</i>
		 */
		public static final int IPP_PSTATE_IDLE = 3;
		/**
		 * Printer is working<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:208</i>
		 */
		public static final int IPP_PSTATE_PROCESSING = 4;
		/**
		 * Printer is stopped<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:209</i>
		 */
		public static final int IPP_PSTATE_STOPPED = 5;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:215</i><br>
	 * enum values
	 */
	public static interface ipp_quality_e {
		/**
		 * Draft quality<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:212</i>
		 */
		public static final int IPP_QUALITY_DRAFT = 3;
		/**
		 * Normal quality<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:213</i>
		 */
		public static final int IPP_QUALITY_NORMAL = 4;
		/**
		 * High quality<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:214</i>
		 */
		public static final int IPP_QUALITY_HIGH = 5;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:219</i><br>
	 * enum values
	 */
	public static interface ipp_res_e {
		/**
		 * Pixels per inch<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:217</i>
		 */
		public static final int IPP_RES_PER_INCH = 3;
		/**
		 * Pixels per centimeter<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:218</i>
		 */
		public static final int IPP_RES_PER_CM = 4;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:226</i><br>
	 * enum values
	 */
	public static interface ipp_state_e {
		/**
		 * An error occurred<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:221</i>
		 */
		public static final int IPP_STATE_ERROR = -1;
		/**
		 * Nothing is happening/request completed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:222</i>
		 */
		public static final int IPP_STATE_IDLE = 0;
		/**
		 * The request header needs to be sent/received<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:223</i>
		 */
		public static final int IPP_STATE_HEADER = 1;
		/**
		 * One or more attributes need to be sent/received<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:224</i>
		 */
		public static final int IPP_STATE_ATTRIBUTE = 2;
		/**
		 * IPP request data needs to be sent/received<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:225</i>
		 */
		public static final int IPP_STATE_DATA = 3;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:291</i><br>
	 * enum values
	 */
	public static interface ipp_status_e {
		/**
		 * Invalid status name for @link ippErrorValue@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:228</i>
		 */
		public static final int IPP_STATUS_CUPS_INVALID = -1;
		/**
		 * successful-ok<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:229</i>
		 */
		public static final int IPP_STATUS_OK = 0x0000;
		/**
		 * successful-ok-ignored-or-substituted-attributes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:230</i>
		 */
		public static final int IPP_STATUS_OK_IGNORED_OR_SUBSTITUTED = (0x0000 + 1);
		/**
		 * successful-ok-conflicting-attributes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:231</i>
		 */
		public static final int IPP_STATUS_OK_CONFLICTING = (0x0000 + 2);
		/**
		 * successful-ok-ignored-subscriptions<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:232</i>
		 */
		public static final int IPP_STATUS_OK_IGNORED_SUBSCRIPTIONS = (0x0000 + 3);
		/**
		 * successful-ok-ignored-notifications @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:233</i>
		 */
		public static final int IPP_STATUS_OK_IGNORED_NOTIFICATIONS = (0x0000 + 4);
		/**
		 * successful-ok-too-many-events<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:234</i>
		 */
		public static final int IPP_STATUS_OK_TOO_MANY_EVENTS = (0x0000 + 5);
		/**
		 * successful-ok-but-cancel-subscription @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:235</i>
		 */
		public static final int IPP_STATUS_OK_BUT_CANCEL_SUBSCRIPTION = (0x0000 + 6);
		/**
		 * successful-ok-events-complete<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:236</i>
		 */
		public static final int IPP_STATUS_OK_EVENTS_COMPLETE = (0x0000 + 7);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:237</i> */
		public static final int IPP_STATUS_REDIRECTION_OTHER_SITE = 0x0200;
		/**
		 * cups-see-other<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:238</i>
		 */
		public static final int IPP_STATUS_CUPS_SEE_OTHER = 0x0280;
		/**
		 * client-error-bad-request<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:239</i>
		 */
		public static final int IPP_STATUS_ERROR_BAD_REQUEST = 0x0400;
		/**
		 * client-error-forbidden<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:240</i>
		 */
		public static final int IPP_STATUS_ERROR_FORBIDDEN = (0x0400 + 1);
		/**
		 * client-error-not-authenticated<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:241</i>
		 */
		public static final int IPP_STATUS_ERROR_NOT_AUTHENTICATED = (0x0400 + 2);
		/**
		 * client-error-not-authorized<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:242</i>
		 */
		public static final int IPP_STATUS_ERROR_NOT_AUTHORIZED = (0x0400 + 3);
		/**
		 * client-error-not-possible<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:243</i>
		 */
		public static final int IPP_STATUS_ERROR_NOT_POSSIBLE = (0x0400 + 4);
		/**
		 * client-error-timeout<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:244</i>
		 */
		public static final int IPP_STATUS_ERROR_TIMEOUT = (0x0400 + 5);
		/**
		 * client-error-not-found<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:245</i>
		 */
		public static final int IPP_STATUS_ERROR_NOT_FOUND = (0x0400 + 6);
		/**
		 * client-error-gone<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:246</i>
		 */
		public static final int IPP_STATUS_ERROR_GONE = (0x0400 + 7);
		/**
		 * client-error-request-entity-too-large<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:247</i>
		 */
		public static final int IPP_STATUS_ERROR_REQUEST_ENTITY = (0x0400 + 8);
		/**
		 * client-error-request-value-too-long<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:248</i>
		 */
		public static final int IPP_STATUS_ERROR_REQUEST_VALUE = (0x0400 + 9);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:249</i> */
		public static final int IPP_STATUS_ERROR_DOCUMENT_FORMAT_NOT_SUPPORTED = (0x0400 + 10);
		/**
		 * client-error-attributes-or-values-not-supported<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:250</i>
		 */
		public static final int IPP_STATUS_ERROR_ATTRIBUTES_OR_VALUES = (0x0400 + 11);
		/**
		 * client-error-uri-scheme-not-supported<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:251</i>
		 */
		public static final int IPP_STATUS_ERROR_URI_SCHEME = (0x0400 + 12);
		/**
		 * client-error-charset-not-supported<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:252</i>
		 */
		public static final int IPP_STATUS_ERROR_CHARSET = (0x0400 + 13);
		/**
		 * client-error-conflicting-attributes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:253</i>
		 */
		public static final int IPP_STATUS_ERROR_CONFLICTING = (0x0400 + 14);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:254</i> */
		public static final int IPP_STATUS_ERROR_COMPRESSION_NOT_SUPPORTED = (0x0400 + 15);
		/**
		 * client-error-compression-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:255</i>
		 */
		public static final int IPP_STATUS_ERROR_COMPRESSION_ERROR = (0x0400 + 16);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:256</i> */
		public static final int IPP_STATUS_ERROR_DOCUMENT_FORMAT_ERROR = (0x0400 + 17);
		/**
		 * client-error-document-access-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:257</i>
		 */
		public static final int IPP_STATUS_ERROR_DOCUMENT_ACCESS = (0x0400 + 18);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:258</i> */
		public static final int IPP_STATUS_ERROR_ATTRIBUTES_NOT_SETTABLE = (0x0400 + 19);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:259</i> */
		public static final int IPP_STATUS_ERROR_IGNORED_ALL_SUBSCRIPTIONS = (0x0400 + 20);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:260</i> */
		public static final int IPP_STATUS_ERROR_TOO_MANY_SUBSCRIPTIONS = (0x0400 + 21);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:261</i> */
		public static final int IPP_STATUS_ERROR_IGNORED_ALL_NOTIFICATIONS = (0x0400 + 22);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:262</i> */
		public static final int IPP_STATUS_ERROR_PRINT_SUPPORT_FILE_NOT_FOUND = (0x0400 + 23);
		/**
		 * client-error-document-password-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:263</i>
		 */
		public static final int IPP_STATUS_ERROR_DOCUMENT_PASSWORD = (0x0400 + 24);
		/**
		 * client-error-document-permission-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:264</i>
		 */
		public static final int IPP_STATUS_ERROR_DOCUMENT_PERMISSION = (0x0400 + 25);
		/**
		 * client-error-document-security-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:265</i>
		 */
		public static final int IPP_STATUS_ERROR_DOCUMENT_SECURITY = (0x0400 + 26);
		/**
		 * client-error-document-unprintable-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:266</i>
		 */
		public static final int IPP_STATUS_ERROR_DOCUMENT_UNPRINTABLE = (0x0400 + 27);
		/**
		 * client-error-account-info-needed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:267</i>
		 */
		public static final int IPP_STATUS_ERROR_ACCOUNT_INFO_NEEDED = (0x0400 + 28);
		/**
		 * client-error-account-closed<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:268</i>
		 */
		public static final int IPP_STATUS_ERROR_ACCOUNT_CLOSED = (0x0400 + 29);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:269</i> */
		public static final int IPP_STATUS_ERROR_ACCOUNT_LIMIT_REACHED = (0x0400 + 30);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:270</i> */
		public static final int IPP_STATUS_ERROR_ACCOUNT_AUTHORIZATION_FAILED = (0x0400 + 31);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:271</i> */
		public static final int IPP_STATUS_ERROR_CUPS_ACCOUNT_INFO_NEEDED = 0x049C;
		/**
		 * cups-error-account-closed @deprecate@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:272</i>
		 */
		public static final int IPP_STATUS_ERROR_CUPS_ACCOUNT_CLOSED = (0x049C + 1);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:273</i> */
		public static final int IPP_STATUS_ERROR_CUPS_ACCOUNT_LIMIT_REACHED = (0x049C + 2);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:274</i> */
		public static final int IPP_STATUS_ERROR_CUPS_ACCOUNT_AUTHORIZATION_FAILED = (0x049C + 3);
		/**
		 * server-error-internal-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:275</i>
		 */
		public static final int IPP_STATUS_ERROR_INTERNAL = 0x0500;
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:276</i> */
		public static final int IPP_STATUS_ERROR_OPERATION_NOT_SUPPORTED = (0x0500 + 1);
		/**
		 * server-error-service-unavailable<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:277</i>
		 */
		public static final int IPP_STATUS_ERROR_SERVICE_UNAVAILABLE = (0x0500 + 2);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:278</i> */
		public static final int IPP_STATUS_ERROR_VERSION_NOT_SUPPORTED = (0x0500 + 3);
		/**
		 * server-error-device-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:279</i>
		 */
		public static final int IPP_STATUS_ERROR_DEVICE = (0x0500 + 4);
		/**
		 * server-error-temporary-error<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:280</i>
		 */
		public static final int IPP_STATUS_ERROR_TEMPORARY = (0x0500 + 5);
		/**
		 * server-error-not-accepting-jobs<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:281</i>
		 */
		public static final int IPP_STATUS_ERROR_NOT_ACCEPTING_JOBS = (0x0500 + 6);
		/**
		 * server-error-busy<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:282</i>
		 */
		public static final int IPP_STATUS_ERROR_BUSY = (0x0500 + 7);
		/**
		 * server-error-job-canceled<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:283</i>
		 */
		public static final int IPP_STATUS_ERROR_JOB_CANCELED = (0x0500 + 8);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:284</i> */
		public static final int IPP_STATUS_ERROR_MULTIPLE_JOBS_NOT_SUPPORTED = (0x0500 + 9);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:285</i> */
		public static final int IPP_STATUS_ERROR_PRINTER_IS_DEACTIVATED = (0x0500 + 10);
		/**
		 * server-error-too-many-jobs<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:286</i>
		 */
		public static final int IPP_STATUS_ERROR_TOO_MANY_JOBS = (0x0500 + 11);
		/**
		 * server-error-too-many-documents<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:287</i>
		 */
		public static final int IPP_STATUS_ERROR_TOO_MANY_DOCUMENTS = (0x0500 + 12);
		/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:288</i> */
		public static final int IPP_STATUS_ERROR_CUPS_AUTHENTICATION_CANCELED = 0x1000;
		/**
		 * cups-pki-error - Error negotiating a secure connection @since CUPS 1.5/OS X 10.7@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:289</i>
		 */
		public static final int IPP_STATUS_ERROR_CUPS_PKI = (0x1000 + 1);
		/**
		 * cups-upgrade-required - TLS upgrade required<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:290</i>
		 */
		public static final int IPP_STATUS_ERROR_CUPS_UPGRADE_REQUIRED = (0x1000 + 2);
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:335</i><br>
	 * enum values
	 */
	public static interface ipp_tag_e {
		/**
		 * Invalid tag name for @link ippTagValue@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:293</i>
		 */
		public static final int IPP_TAG_CUPS_INVALID = -1;
		/**
		 * Zero tag - used for separators<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:294</i>
		 */
		public static final int IPP_TAG_ZERO = 0x00;
		/**
		 * Operation group<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:295</i>
		 */
		public static final int IPP_TAG_OPERATION = (0x00 + 1);
		/**
		 * Job group<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:296</i>
		 */
		public static final int IPP_TAG_JOB = (0x00 + 2);
		/**
		 * End-of-attributes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:297</i>
		 */
		public static final int IPP_TAG_END = (0x00 + 3);
		/**
		 * Printer group<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:298</i>
		 */
		public static final int IPP_TAG_PRINTER = (0x00 + 4);
		/**
		 * Unsupported attributes group<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:299</i>
		 */
		public static final int IPP_TAG_UNSUPPORTED_GROUP = (0x00 + 5);
		/**
		 * Subscription group<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:300</i>
		 */
		public static final int IPP_TAG_SUBSCRIPTION = (0x00 + 6);
		/**
		 * Event group<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:301</i>
		 */
		public static final int IPP_TAG_EVENT_NOTIFICATION = (0x00 + 7);
		/**
		 * Resource group @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:302</i>
		 */
		public static final int IPP_TAG_RESOURCE = (0x00 + 8);
		/**
		 * Document group<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:303</i>
		 */
		public static final int IPP_TAG_DOCUMENT = (0x00 + 9);
		/**
		 * Unsupported value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:304</i>
		 */
		public static final int IPP_TAG_UNSUPPORTED_VALUE = 0x10;
		/**
		 * Default value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:305</i>
		 */
		public static final int IPP_TAG_DEFAULT = (0x10 + 1);
		/**
		 * Unknown value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:306</i>
		 */
		public static final int IPP_TAG_UNKNOWN = (0x10 + 2);
		/**
		 * No-value value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:307</i>
		 */
		public static final int IPP_TAG_NOVALUE = (0x10 + 3);
		/**
		 * Not-settable value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:308</i>
		 */
		public static final int IPP_TAG_NOTSETTABLE = 0x15;
		/**
		 * Delete-attribute value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:309</i>
		 */
		public static final int IPP_TAG_DELETEATTR = (0x15 + 1);
		/**
		 * Admin-defined value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:310</i>
		 */
		public static final int IPP_TAG_ADMINDEFINE = (0x15 + 2);
		/**
		 * Integer value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:311</i>
		 */
		public static final int IPP_TAG_INTEGER = 0x21;
		/**
		 * Boolean value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:312</i>
		 */
		public static final int IPP_TAG_BOOLEAN = (0x21 + 1);
		/**
		 * Enumeration value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:313</i>
		 */
		public static final int IPP_TAG_ENUM = (0x21 + 2);
		/**
		 * Octet string value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:314</i>
		 */
		public static final int IPP_TAG_STRING = 0x30;
		/**
		 * Date/time value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:315</i>
		 */
		public static final int IPP_TAG_DATE = (0x30 + 1);
		/**
		 * Resolution value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:316</i>
		 */
		public static final int IPP_TAG_RESOLUTION = (0x30 + 2);
		/**
		 * Range value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:317</i>
		 */
		public static final int IPP_TAG_RANGE = (0x30 + 3);
		/**
		 * Beginning of collection value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:318</i>
		 */
		public static final int IPP_TAG_BEGIN_COLLECTION = (0x30 + 4);
		/**
		 * Text-with-language value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:319</i>
		 */
		public static final int IPP_TAG_TEXTLANG = (0x30 + 5);
		/**
		 * Name-with-language value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:320</i>
		 */
		public static final int IPP_TAG_NAMELANG = (0x30 + 6);
		/**
		 * End of collection value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:321</i>
		 */
		public static final int IPP_TAG_END_COLLECTION = (0x30 + 7);
		/**
		 * Text value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:322</i>
		 */
		public static final int IPP_TAG_TEXT = 0x41;
		/**
		 * Name value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:323</i>
		 */
		public static final int IPP_TAG_NAME = (0x41 + 1);
		/**
		 * Reserved for future string value @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:324</i>
		 */
		public static final int IPP_TAG_RESERVED_STRING = (0x41 + 2);
		/**
		 * Keyword value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:325</i>
		 */
		public static final int IPP_TAG_KEYWORD = (0x41 + 3);
		/**
		 * URI value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:326</i>
		 */
		public static final int IPP_TAG_URI = (0x41 + 4);
		/**
		 * URI scheme value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:327</i>
		 */
		public static final int IPP_TAG_URISCHEME = (0x41 + 5);
		/**
		 * Character set value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:328</i>
		 */
		public static final int IPP_TAG_CHARSET = (0x41 + 6);
		/**
		 * Language value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:329</i>
		 */
		public static final int IPP_TAG_LANGUAGE = (0x41 + 7);
		/**
		 * MIME media type value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:330</i>
		 */
		public static final int IPP_TAG_MIMETYPE = (0x41 + 8);
		/**
		 * Collection member name value<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:331</i>
		 */
		public static final int IPP_TAG_MEMBERNAME = (0x41 + 9);
		/**
		 * Extension point for 32-bit tags<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:332</i>
		 */
		public static final int IPP_TAG_EXTENSION = 0x7f;
		/**
		 * Mask for copied attribute values @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:333</i>
		 */
		public static final int IPP_TAG_CUPS_MASK = 0x7fffffff;
		/**
		 * Bitflag for copied/const attribute values @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:334</i>
		 */
		public static final int IPP_TAG_CUPS_CONST = 0x7fffffff - 1;
	};
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:47</i><br>
	 * enum values
	 */
	public static interface cups_encoding_e {
		/**
		 * Auto-detect the encoding @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:3</i>
		 */
		public static final int CUPS_AUTO_ENCODING = -1;
		/**
		 * US ASCII<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:4</i>
		 */
		public static final int CUPS_US_ASCII = 0;
		/**
		 * ISO-8859-1<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:5</i>
		 */
		public static final int CUPS_ISO8859_1 = 1;
		/**
		 * ISO-8859-2<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:6</i>
		 */
		public static final int CUPS_ISO8859_2 = 2;
		/**
		 * ISO-8859-3<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:7</i>
		 */
		public static final int CUPS_ISO8859_3 = 3;
		/**
		 * ISO-8859-4<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:8</i>
		 */
		public static final int CUPS_ISO8859_4 = 4;
		/**
		 * ISO-8859-5<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:9</i>
		 */
		public static final int CUPS_ISO8859_5 = 5;
		/**
		 * ISO-8859-6<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:10</i>
		 */
		public static final int CUPS_ISO8859_6 = 6;
		/**
		 * ISO-8859-7<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:11</i>
		 */
		public static final int CUPS_ISO8859_7 = 7;
		/**
		 * ISO-8859-8<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:12</i>
		 */
		public static final int CUPS_ISO8859_8 = 8;
		/**
		 * ISO-8859-9<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:13</i>
		 */
		public static final int CUPS_ISO8859_9 = 9;
		/**
		 * ISO-8859-10<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:14</i>
		 */
		public static final int CUPS_ISO8859_10 = 10;
		/**
		 * UTF-8<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:15</i>
		 */
		public static final int CUPS_UTF8 = 11;
		/**
		 * ISO-8859-13<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:16</i>
		 */
		public static final int CUPS_ISO8859_13 = 12;
		/**
		 * ISO-8859-14<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:17</i>
		 */
		public static final int CUPS_ISO8859_14 = 13;
		/**
		 * ISO-8859-15<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:18</i>
		 */
		public static final int CUPS_ISO8859_15 = 14;
		/**
		 * CP-874<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:19</i>
		 */
		public static final int CUPS_WINDOWS_874 = 15;
		/**
		 * CP-1250<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:20</i>
		 */
		public static final int CUPS_WINDOWS_1250 = 16;
		/**
		 * CP-1251<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:21</i>
		 */
		public static final int CUPS_WINDOWS_1251 = 17;
		/**
		 * CP-1252<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:22</i>
		 */
		public static final int CUPS_WINDOWS_1252 = 18;
		/**
		 * CP-1253<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:23</i>
		 */
		public static final int CUPS_WINDOWS_1253 = 19;
		/**
		 * CP-1254<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:24</i>
		 */
		public static final int CUPS_WINDOWS_1254 = 20;
		/**
		 * CP-1255<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:25</i>
		 */
		public static final int CUPS_WINDOWS_1255 = 21;
		/**
		 * CP-1256<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:26</i>
		 */
		public static final int CUPS_WINDOWS_1256 = 22;
		/**
		 * CP-1257<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:27</i>
		 */
		public static final int CUPS_WINDOWS_1257 = 23;
		/**
		 * CP-1258<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:28</i>
		 */
		public static final int CUPS_WINDOWS_1258 = 24;
		/**
		 * KOI-8-R<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:29</i>
		 */
		public static final int CUPS_KOI8_R = 25;
		/**
		 * KOI-8-U<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:30</i>
		 */
		public static final int CUPS_KOI8_U = 26;
		/**
		 * ISO-8859-11<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:31</i>
		 */
		public static final int CUPS_ISO8859_11 = 27;
		/**
		 * ISO-8859-16<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:32</i>
		 */
		public static final int CUPS_ISO8859_16 = 28;
		/**
		 * MacRoman<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:33</i>
		 */
		public static final int CUPS_MAC_ROMAN = 29;
		/**
		 * End of single-byte encodings @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:34</i>
		 */
		public static final int CUPS_ENCODING_SBCS_END = 63;
		/**
		 * Japanese JIS X0208-1990<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:35</i>
		 */
		public static final int CUPS_WINDOWS_932 = 64;
		/**
		 * Simplified Chinese GB 2312-80<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:36</i>
		 */
		public static final int CUPS_WINDOWS_936 = 65;
		/**
		 * Korean KS C5601-1992<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:37</i>
		 */
		public static final int CUPS_WINDOWS_949 = 66;
		/**
		 * Traditional Chinese Big Five<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:38</i>
		 */
		public static final int CUPS_WINDOWS_950 = 67;
		/**
		 * Korean Johab<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:39</i>
		 */
		public static final int CUPS_WINDOWS_1361 = 68;
		/**
		 * End of double-byte encodings @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:40</i>
		 */
		public static final int CUPS_ENCODING_DBCS_END = 127;
		/**
		 * EUC Simplified Chinese<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:41</i>
		 */
		public static final int CUPS_EUC_CN = 128;
		/**
		 * EUC Japanese<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:42</i>
		 */
		public static final int CUPS_EUC_JP = 129;
		/**
		 * EUC Korean<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:43</i>
		 */
		public static final int CUPS_EUC_KR = 130;
		/**
		 * EUC Traditional Chinese<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:44</i>
		 */
		public static final int CUPS_EUC_TW = 131;
		/**
		 * JIS X0213 aka Shift JIS<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:45</i>
		 */
		public static final int CUPS_JIS_X0213 = 132;
		/**
		 * End of variable-length encodings @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:46</i>
		 */
		public static final int CUPS_ENCODING_VBCS_END = 191;
	};
	/**
	 * Printer type/capability bit<br>
	 * constants<br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:49</i><br>
	 * enum values
	 */
	public static interface cups_ptype_e {
		/**
		 * Local printer or class<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:8</i>
		 */
		public static final int CUPS_PRINTER_LOCAL = 0x0000;
		/**
		 * Printer class<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:9</i>
		 */
		public static final int CUPS_PRINTER_CLASS = 0x0001;
		/**
		 * Remote printer or class<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:10</i>
		 */
		public static final int CUPS_PRINTER_REMOTE = 0x0002;
		/**
		 * Can do B&W printing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:11</i>
		 */
		public static final int CUPS_PRINTER_BW = 0x0004;
		/**
		 * Can do color printing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:12</i>
		 */
		public static final int CUPS_PRINTER_COLOR = 0x0008;
		/**
		 * Can do duplexing<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:13</i>
		 */
		public static final int CUPS_PRINTER_DUPLEX = 0x0010;
		/**
		 * Can staple output<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:14</i>
		 */
		public static final int CUPS_PRINTER_STAPLE = 0x0020;
		/**
		 * Can do copies<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:15</i>
		 */
		public static final int CUPS_PRINTER_COPIES = 0x0040;
		/**
		 * Can collage copies<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:16</i>
		 */
		public static final int CUPS_PRINTER_COLLATE = 0x0080;
		/**
		 * Can punch output<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:17</i>
		 */
		public static final int CUPS_PRINTER_PUNCH = 0x0100;
		/**
		 * Can cover output<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:18</i>
		 */
		public static final int CUPS_PRINTER_COVER = 0x0200;
		/**
		 * Can bind output<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:19</i>
		 */
		public static final int CUPS_PRINTER_BIND = 0x0400;
		/**
		 * Can sort output<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:20</i>
		 */
		public static final int CUPS_PRINTER_SORT = 0x0800;
		/**
		 * Can do Letter/Legal/A4<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:21</i>
		 */
		public static final int CUPS_PRINTER_SMALL = 0x1000;
		/**
		 * Can do Tabloid/B/C/A3/A2<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:22</i>
		 */
		public static final int CUPS_PRINTER_MEDIUM = 0x2000;
		/**
		 * Can do D/E/A1/A0<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:23</i>
		 */
		public static final int CUPS_PRINTER_LARGE = 0x4000;
		/**
		 * Can do variable sizes<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:24</i>
		 */
		public static final int CUPS_PRINTER_VARIABLE = 0x8000;
		/**
		 * Implicit class @private@<br>
		 * @since Deprecated@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:26</i>
		 */
		public static final int CUPS_PRINTER_IMPLICIT = 0x10000;
		/**
		 * Default printer on network<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:27</i>
		 */
		public static final int CUPS_PRINTER_DEFAULT = 0x20000;
		/**
		 * Fax queue<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:28</i>
		 */
		public static final int CUPS_PRINTER_FAX = 0x40000;
		/**
		 * Printer is rejecting jobs<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:29</i>
		 */
		public static final int CUPS_PRINTER_REJECTING = 0x80000;
		/**
		 * Delete printer<br>
		 * @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:31</i>
		 */
		public static final int CUPS_PRINTER_DELETE = 0x100000;
		/**
		 * Printer is not shared<br>
		 * @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:33</i>
		 */
		public static final int CUPS_PRINTER_NOT_SHARED = 0x200000;
		/**
		 * Printer requires authentication<br>
		 * @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:35</i>
		 */
		public static final int CUPS_PRINTER_AUTHENTICATED = 0x400000;
		/**
		 * Printer supports maintenance commands<br>
		 * @since CUPS 1.2/OS X 10.5@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:37</i>
		 */
		public static final int CUPS_PRINTER_COMMANDS = 0x800000;
		/**
		 * Printer was automatically discovered<br>
		 * and added @private@<br>
		 * @since Deprecated@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:40</i>
		 */
		public static final int CUPS_PRINTER_DISCOVERED = 0x1000000;
		/**
		 * Scanner-only device<br>
		 * @since CUPS 1.4/OS X 10.6@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:42</i>
		 */
		public static final int CUPS_PRINTER_SCANNER = 0x2000000;
		/**
		 * Printer with scanning capabilities<br>
		 * @since CUPS 1.4/OS X 10.6@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:44</i>
		 */
		public static final int CUPS_PRINTER_MFP = 0x4000000;
		/**
		 * ~(CLASS | REMOTE | IMPLICIT |<br>
		 * DEFAULT | FAX | REJECTING | DELETE |<br>
		 * NOT_SHARED | AUTHENTICATED |<br>
		 * COMMANDS | DISCOVERED) @private@<br>
		 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:48</i>
		 */
		public static final int CUPS_PRINTER_OPTIONS = 0x6fffc;
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h</i> */
	public static final int CUPS_FILE_NONE = (int)0;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h</i> */
	public static final int CUPS_FILE_GZIP = (int)1;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h</i> */
	public static final int HTTP_MAX_URI = (int)1024;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h</i> */
	public static final int HTTP_MAX_HOST = (int)256;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h</i> */
	public static final int HTTP_MAX_BUFFER = (int)2048;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h</i> */
	public static final int HTTP_MAX_VALUE = (int)256;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final String IPP_VERSION = (String)"\002\001";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_PORT = (int)631;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_CHARSET = (int)64;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_KEYWORD = (int)256;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_LANGUAGE = (int)64;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_LENGTH = (int)32767;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_MIMETYPE = (int)256;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_NAME = (int)256;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_OCTETSTRING = (int)1023;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_TEXT = (int)1024;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_URI = (int)1024;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_URISCHEME = (int)64;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int IPP_MAX_VALUES = (int)8;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h</i> */
	public static final int _IPP_PRIVATE_STRUCTURES = (int)0;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final double CUPS_VERSION = (double)2.0002;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_VERSION_MAJOR = (int)2;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_VERSION_MINOR = (int)0;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_VERSION_PATCH = (int)2;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_BC_FD = (int)3;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final long CUPS_DATE_ANY = (long)-1;
	/**
	 * define<br>
	 * Conversion Error : (const char*)0<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:0</i><br>
	 * (const char*)0
	 */
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FORMAT_AUTO = (String)"application/octet-stream";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FORMAT_COMMAND = (String)"application/vnd.cups-command";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FORMAT_JPEG = (String)"image/jpeg";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FORMAT_PDF = (String)"application/pdf";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FORMAT_POSTSCRIPT = (String)"application/postscript";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FORMAT_RAW = (String)"application/vnd.cups-raw";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FORMAT_TEXT = (String)"text/plain";
	/**
	 * define<br>
	 * Conversion Error : (http_t*)0<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:0</i><br>
	 * (http_t*)0
	 */
	/**
	 * define<br>
	 * Conversion Error : (const char*)0<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:0</i><br>
	 * (const char*)0
	 */
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_JOBID_ALL = (int)-1;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_JOBID_CURRENT = (int)0;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_TIMEOUT_DEFAULT = (int)0;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_WHICHJOBS_ALL = (int)-1;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_WHICHJOBS_ACTIVE = (int)0;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_WHICHJOBS_COMPLETED = (int)1;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_DEST_FLAGS_NONE = (int)0x00;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_DEST_FLAGS_UNCONNECTED = (int)0x01;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_DEST_FLAGS_MORE = (int)0x02;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_DEST_FLAGS_REMOVED = (int)0x04;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_DEST_FLAGS_ERROR = (int)0x08;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_DEST_FLAGS_RESOLVING = (int)0x10;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_DEST_FLAGS_CONNECTING = (int)0x20;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_DEST_FLAGS_CANCELED = (int)0x40;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_MEDIA_FLAGS_DEFAULT = (int)0x00;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_MEDIA_FLAGS_BORDERLESS = (int)0x01;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_MEDIA_FLAGS_DUPLEX = (int)0x02;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_MEDIA_FLAGS_EXACT = (int)0x04;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final int CUPS_MEDIA_FLAGS_READY = (int)0x08;
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_COPIES = (String)"copies";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_COPIES_SUPPORTED = (String)"copies-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS = (String)"finishings";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS_SUPPORTED = (String)"finishings-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS_BIND = (String)"7";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS_COVER = (String)"6";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS_FOLD = (String)"10";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS_NONE = (String)"3";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS_PUNCH = (String)"5";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS_STAPLE = (String)"4";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_FINISHINGS_TRIM = (String)"11";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA = (String)"media";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_READY = (String)"media-ready";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_SUPPORTED = (String)"media-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_3X5 = (String)"na_index-3x5_3x5in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_4X6 = (String)"na_index-4x6_4x6in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_5X7 = (String)"na_5x7_5x7in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_8X10 = (String)"na_govt-letter_8x10in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_A3 = (String)"iso_a3_297x420mm";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_A4 = (String)"iso_a4_210x297mm";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_A5 = (String)"iso_a5_148x210mm";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_A6 = (String)"iso_a6_105x148mm";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_ENV10 = (String)"na_number-10_4.125x9.5in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_ENVDL = (String)"iso_dl_110x220mm";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_LEGAL = (String)"na_legal_8.5x14in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_LETTER = (String)"na_letter_8.5x11in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_PHOTO_L = (String)"oe_photo-l_3.5x5in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_SUPERBA3 = (String)"na_super-b_13x19in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TABLOID = (String)"na_ledger_11x17in";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_SOURCE = (String)"media-source";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_SOURCE_SUPPORTED = (String)"media-source-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_SOURCE_AUTO = (String)"auto";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_SOURCE_MANUAL = (String)"manual";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE = (String)"media-type";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_SUPPORTED = (String)"media-type-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_AUTO = (String)"auto";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_ENVELOPE = (String)"envelope";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_LABELS = (String)"labels";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_LETTERHEAD = (String)"stationery-letterhead";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_PHOTO = (String)"photographic";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_PHOTO_GLOSSY = (String)"photographic-glossy";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_PHOTO_MATTE = (String)"photographic-matte";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_PLAIN = (String)"stationery";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_MEDIA_TYPE_TRANSPARENCY = (String)"transparency";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_NUMBER_UP = (String)"number-up";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_NUMBER_UP_SUPPORTED = (String)"number-up-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_ORIENTATION = (String)"orientation-requested";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_ORIENTATION_SUPPORTED = (String)"orientation-requested-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_ORIENTATION_PORTRAIT = (String)"3";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_ORIENTATION_LANDSCAPE = (String)"4";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_COLOR_MODE = (String)"print-color-mode";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_COLOR_MODE_SUPPORTED = (String)"print-color-mode-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_COLOR_MODE_AUTO = (String)"auto";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_COLOR_MODE_MONOCHROME = (String)"monochrome";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_COLOR_MODE_COLOR = (String)"color";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_QUALITY = (String)"print-quality";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_QUALITY_SUPPORTED = (String)"print-quality-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_QUALITY_DRAFT = (String)"3";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_QUALITY_NORMAL = (String)"4";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_PRINT_QUALITY_HIGH = (String)"5";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_SIDES = (String)"sides";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_SIDES_SUPPORTED = (String)"sides-supported";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_SIDES_ONE_SIDED = (String)"one-sided";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_SIDES_TWO_SIDED_PORTRAIT = (String)"two-sided-long-edge";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h</i> */
	public static final String CUPS_SIDES_TWO_SIDED_LANDSCAPE = (String)"two-sided-short-edge";
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:3</i> */
	public interface cups_array_func_t extends Callback {
		int apply(Pointer first, Pointer second, Pointer data);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:4</i> */
	public interface cups_ahash_func_t extends Callback {
		int apply(Pointer element, Pointer data);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:5</i> */
	public interface cups_acopy_func_t extends Callback {
		Pointer apply(Pointer element, Pointer data);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:6</i> */
	public interface cups_afree_func_t extends Callback {
		void apply(Pointer element, Pointer data);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:189</i> */
	public interface http_timeout_cb_t extends Callback {
		int apply(Pointer http, Pointer user_data);
	};
	/**
	 * New in CUPS 1.2/OS X 10.5 ***<br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:340</i>
	 */
	public interface ssize_t extends Callback {
		MlRabidbeaverJnaLibrary.ssize_t_callback apply(Pointer ipp_iocb_t);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:342</i> */
	public interface ipp_copycb_t extends Callback {
		int apply(Pointer context, Pointer dst, Pointer attr);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:546</i> */
	public interface ssize_t_callback extends Callback {
		int apply(Pointer context, Pointer buffer, NativeSize bytes);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:84</i> */
	public interface cups_client_cert_cb_t extends Callback {
		int apply(Pointer http, Pointer tls, Pointer distinguished_names, Pointer user_data);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:85</i> */
	public interface cups_dest_cb_t extends Callback {
		int apply(Pointer user_data, int flags, cups_dest_s dest);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:86</i> */
	public interface cups_device_cb_t extends Callback {
		void apply(Pointer device_class, Pointer device_id, Pointer device_info, Pointer device_make_and_model, Pointer device_uri, Pointer device_location, Pointer user_data);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:87</i> */
	public interface cups_password_cb_t extends Callback {
		String apply(Pointer prompt);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:88</i> */
	public interface cups_password_cb2_t extends Callback {
		String apply(Pointer prompt, Pointer http, Pointer method, Pointer resource, Pointer user_data);
	};
	/** <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:89</i> */
	public interface cups_server_cert_cb_t extends Callback {
		int apply(Pointer http, Pointer tls, Pointer certs, Pointer user_data);
	};
	/**
	 * Prototypes...<br>
	 * Original signature : <code>int cupsFileClose(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:7</i><br>
	 * @deprecated use the safer method {@link #cupsFileClose(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFileClose(Pointer fp);
	/**
	 * Prototypes...<br>
	 * Original signature : <code>int cupsFileClose(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:7</i>
	 */
	int cupsFileClose(PointerByReference fp);
	/**
	 * Original signature : <code>int cupsFileCompression(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:9</i><br>
	 * @deprecated use the safer method {@link #cupsFileCompression(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFileCompression(Pointer fp);
	/**
	 * Original signature : <code>int cupsFileCompression(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:9</i>
	 */
	int cupsFileCompression(PointerByReference fp);
	/**
	 * Original signature : <code>int cupsFileEOF(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:11</i><br>
	 * @deprecated use the safer method {@link #cupsFileEOF(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFileEOF(Pointer fp);
	/**
	 * Original signature : <code>int cupsFileEOF(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:11</i>
	 */
	int cupsFileEOF(PointerByReference fp);
	/**
	 * Original signature : <code>char* cupsFileFind(const char*, const char*, int, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:13</i><br>
	 * @deprecated use the safer methods {@link #cupsFileFind(java.lang.String, java.lang.String, int, java.nio.ByteBuffer, int)} and {@link #cupsFileFind(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer cupsFileFind(Pointer filename, Pointer path, int executable, Pointer buffer, int bufsize);
	/**
	 * Original signature : <code>char* cupsFileFind(const char*, const char*, int, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:13</i>
	 */
	Pointer cupsFileFind(String filename, String path, int executable, ByteBuffer buffer, int bufsize);
	/**
	 * Original signature : <code>int cupsFileFlush(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:15</i><br>
	 * @deprecated use the safer method {@link #cupsFileFlush(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFileFlush(Pointer fp);
	/**
	 * Original signature : <code>int cupsFileFlush(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:15</i>
	 */
	int cupsFileFlush(PointerByReference fp);
	/**
	 * Original signature : <code>int cupsFileGetChar(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:17</i><br>
	 * @deprecated use the safer method {@link #cupsFileGetChar(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFileGetChar(Pointer fp);
	/**
	 * Original signature : <code>int cupsFileGetChar(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:17</i>
	 */
	int cupsFileGetChar(PointerByReference fp);
	/**
	 * Original signature : <code>char* cupsFileGetConf(cups_file_t*, char*, size_t, char**, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:19</i><br>
	 * @deprecated use the safer methods {@link #cupsFileGetConf(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #cupsFileGetConf(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	Pointer cupsFileGetConf(Pointer fp, Pointer buf, NativeSize buflen, PointerByReference value, IntByReference linenum);
	/**
	 * Original signature : <code>char* cupsFileGetConf(cups_file_t*, char*, size_t, char**, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:19</i>
	 */
	Pointer cupsFileGetConf(PointerByReference fp, ByteBuffer buf, NativeSize buflen, PointerByReference value, IntBuffer linenum);
	/**
	 * Original signature : <code>char* cupsFileGetConf(cups_file_t*, char*, size_t, char**, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:19</i>
	 */
	Pointer cupsFileGetConf(PointerByReference fp, Pointer buf, NativeSize buflen, PointerByReference value, IntByReference linenum);
	/**
	 * Original signature : <code>size_t cupsFileGetLine(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:21</i><br>
	 * @deprecated use the safer methods {@link #cupsFileGetLine(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #cupsFileGetLine(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	NativeSize cupsFileGetLine(Pointer fp, Pointer buf, NativeSize buflen);
	/**
	 * Original signature : <code>size_t cupsFileGetLine(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:21</i>
	 */
	NativeSize cupsFileGetLine(PointerByReference fp, ByteBuffer buf, NativeSize buflen);
	/**
	 * Original signature : <code>size_t cupsFileGetLine(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:21</i>
	 */
	NativeSize cupsFileGetLine(PointerByReference fp, Pointer buf, NativeSize buflen);
	/**
	 * Original signature : <code>char* cupsFileGets(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:23</i><br>
	 * @deprecated use the safer methods {@link #cupsFileGets(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #cupsFileGets(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	Pointer cupsFileGets(Pointer fp, Pointer buf, NativeSize buflen);
	/**
	 * Original signature : <code>char* cupsFileGets(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:23</i>
	 */
	Pointer cupsFileGets(PointerByReference fp, ByteBuffer buf, NativeSize buflen);
	/**
	 * Original signature : <code>char* cupsFileGets(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:23</i>
	 */
	Pointer cupsFileGets(PointerByReference fp, Pointer buf, NativeSize buflen);
	/**
	 * Original signature : <code>int cupsFileLock(cups_file_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:25</i><br>
	 * @deprecated use the safer method {@link #cupsFileLock(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int cupsFileLock(Pointer fp, int block);
	/**
	 * Original signature : <code>int cupsFileLock(cups_file_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:25</i>
	 */
	int cupsFileLock(PointerByReference fp, int block);
	/**
	 * Original signature : <code>int cupsFileNumber(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:27</i><br>
	 * @deprecated use the safer method {@link #cupsFileNumber(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFileNumber(Pointer fp);
	/**
	 * Original signature : <code>int cupsFileNumber(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:27</i>
	 */
	int cupsFileNumber(PointerByReference fp);
	/**
	 * Original signature : <code>cups_file_t* cupsFileOpen(const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:29</i><br>
	 * @deprecated use the safer methods {@link #cupsFileOpen(java.lang.String, java.lang.String)} and {@link #cupsFileOpen(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsFileOpen(Pointer filename, Pointer mode);
	/**
	 * Original signature : <code>cups_file_t* cupsFileOpen(const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:29</i>
	 */
	PointerByReference cupsFileOpen(String filename, String mode);
	/**
	 * Original signature : <code>cups_file_t* cupsFileOpenFd(int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:31</i><br>
	 * @deprecated use the safer methods {@link #cupsFileOpenFd(int, java.lang.String)} and {@link #cupsFileOpenFd(int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsFileOpenFd(int fd, Pointer mode);
	/**
	 * Original signature : <code>cups_file_t* cupsFileOpenFd(int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:31</i>
	 */
	PointerByReference cupsFileOpenFd(int fd, String mode);
	/**
	 * Original signature : <code>int cupsFilePeekChar(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:33</i><br>
	 * @deprecated use the safer method {@link #cupsFilePeekChar(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFilePeekChar(Pointer fp);
	/**
	 * Original signature : <code>int cupsFilePeekChar(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:33</i>
	 */
	int cupsFilePeekChar(PointerByReference fp);
	/**
	 * Original signature : <code>int cupsFilePrintf(cups_file_t*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:35</i><br>
	 * @deprecated use the safer methods {@link #cupsFilePrintf(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #cupsFilePrintf(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int cupsFilePrintf(Pointer fp, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>int cupsFilePrintf(cups_file_t*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:35</i>
	 */
	int cupsFilePrintf(PointerByReference fp, String format, Object... varArgs1);
	/**
	 * Original signature : <code>int cupsFilePrintf(cups_file_t*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:35</i>
	 */
	int cupsFilePrintf(PointerByReference fp, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>int cupsFilePutChar(cups_file_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:37</i><br>
	 * @deprecated use the safer method {@link #cupsFilePutChar(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int cupsFilePutChar(Pointer fp, int c);
	/**
	 * Original signature : <code>int cupsFilePutChar(cups_file_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:37</i>
	 */
	int cupsFilePutChar(PointerByReference fp, int c);
	/**
	 * Original signature : <code>ssize_t cupsFilePutConf(cups_file_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:39</i><br>
	 * @deprecated use the safer methods {@link #cupsFilePutConf(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsFilePutConf(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t cupsFilePutConf(Pointer fp, Pointer directive, Pointer value);
	/**
	 * Original signature : <code>ssize_t cupsFilePutConf(cups_file_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:39</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsFilePutConf(PointerByReference fp, String directive, String value);
	/**
	 * Original signature : <code>ssize_t cupsFilePutConf(cups_file_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:39</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsFilePutConf(PointerByReference fp, Pointer directive, Pointer value);
	/**
	 * Original signature : <code>int cupsFilePuts(cups_file_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:41</i><br>
	 * @deprecated use the safer methods {@link #cupsFilePuts(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsFilePuts(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsFilePuts(Pointer fp, Pointer s);
	/**
	 * Original signature : <code>int cupsFilePuts(cups_file_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:41</i>
	 */
	int cupsFilePuts(PointerByReference fp, String s);
	/**
	 * Original signature : <code>int cupsFilePuts(cups_file_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:41</i>
	 */
	int cupsFilePuts(PointerByReference fp, Pointer s);
	/**
	 * Original signature : <code>ssize_t cupsFileRead(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:43</i><br>
	 * @deprecated use the safer methods {@link #cupsFileRead(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #cupsFileRead(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t cupsFileRead(Pointer fp, Pointer buf, NativeSize bytes);
	/**
	 * Original signature : <code>ssize_t cupsFileRead(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:43</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsFileRead(PointerByReference fp, ByteBuffer buf, NativeSize bytes);
	/**
	 * Original signature : <code>ssize_t cupsFileRead(cups_file_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:43</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsFileRead(PointerByReference fp, Pointer buf, NativeSize bytes);
	/**
	 * Original signature : <code>off_t cupsFileRewind(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:45</i><br>
	 * @deprecated use the safer method {@link #cupsFileRewind(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long cupsFileRewind(Pointer fp);
	/**
	 * Original signature : <code>off_t cupsFileRewind(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:45</i>
	 */
	long cupsFileRewind(PointerByReference fp);
	/**
	 * Original signature : <code>off_t cupsFileSeek(cups_file_t*, off_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:47</i><br>
	 * @deprecated use the safer method {@link #cupsFileSeek(com.sun.jna.ptr.PointerByReference, long)} instead
	 */
	@Deprecated 
	long cupsFileSeek(Pointer fp, long pos);
	/**
	 * Original signature : <code>off_t cupsFileSeek(cups_file_t*, off_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:47</i>
	 */
	long cupsFileSeek(PointerByReference fp, long pos);
	/**
	 * Original signature : <code>cups_file_t* cupsFileStderr()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:49</i>
	 */
	PointerByReference cupsFileStderr();
	/**
	 * Original signature : <code>cups_file_t* cupsFileStdin()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:51</i>
	 */
	PointerByReference cupsFileStdin();
	/**
	 * Original signature : <code>cups_file_t* cupsFileStdout()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:53</i>
	 */
	PointerByReference cupsFileStdout();
	/**
	 * Original signature : <code>off_t cupsFileTell(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:55</i><br>
	 * @deprecated use the safer method {@link #cupsFileTell(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long cupsFileTell(Pointer fp);
	/**
	 * Original signature : <code>off_t cupsFileTell(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:55</i>
	 */
	long cupsFileTell(PointerByReference fp);
	/**
	 * Original signature : <code>int cupsFileUnlock(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:57</i><br>
	 * @deprecated use the safer method {@link #cupsFileUnlock(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFileUnlock(Pointer fp);
	/**
	 * Original signature : <code>int cupsFileUnlock(cups_file_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:57</i>
	 */
	int cupsFileUnlock(PointerByReference fp);
	/**
	 * Original signature : <code>ssize_t cupsFileWrite(cups_file_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:59</i><br>
	 * @deprecated use the safer methods {@link #cupsFileWrite(com.sun.jna.ptr.PointerByReference, java.lang.String, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #cupsFileWrite(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t cupsFileWrite(Pointer fp, Pointer buf, NativeSize bytes);
	/**
	 * Original signature : <code>ssize_t cupsFileWrite(cups_file_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:59</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsFileWrite(PointerByReference fp, String buf, NativeSize bytes);
	/**
	 * Original signature : <code>ssize_t cupsFileWrite(cups_file_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/file.h:59</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsFileWrite(PointerByReference fp, Pointer buf, NativeSize bytes);
	/**
	 * Functions...<br>
	 * Original signature : <code>int cupsArrayAdd(cups_array_t*, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:11</i><br>
	 * @deprecated use the safer method {@link #cupsArrayAdd(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsArrayAdd(Pointer a, Pointer e);
	/**
	 * Functions...<br>
	 * Original signature : <code>int cupsArrayAdd(cups_array_t*, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:11</i>
	 */
	int cupsArrayAdd(PointerByReference a, Pointer e);
	/**
	 * Original signature : <code>void cupsArrayClear(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:13</i><br>
	 * @deprecated use the safer method {@link #cupsArrayClear(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void cupsArrayClear(Pointer a);
	/**
	 * Original signature : <code>void cupsArrayClear(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:13</i>
	 */
	void cupsArrayClear(PointerByReference a);
	/**
	 * Original signature : <code>int cupsArrayCount(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:15</i><br>
	 * @deprecated use the safer method {@link #cupsArrayCount(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsArrayCount(Pointer a);
	/**
	 * Original signature : <code>int cupsArrayCount(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:15</i>
	 */
	int cupsArrayCount(PointerByReference a);
	/**
	 * Original signature : <code>void* cupsArrayCurrent(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:17</i><br>
	 * @deprecated use the safer method {@link #cupsArrayCurrent(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsArrayCurrent(Pointer a);
	/**
	 * Original signature : <code>void* cupsArrayCurrent(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:17</i>
	 */
	Pointer cupsArrayCurrent(PointerByReference a);
	/**
	 * Original signature : <code>void cupsArrayDelete(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:19</i><br>
	 * @deprecated use the safer method {@link #cupsArrayDelete(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void cupsArrayDelete(Pointer a);
	/**
	 * Original signature : <code>void cupsArrayDelete(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:19</i>
	 */
	void cupsArrayDelete(PointerByReference a);
	/**
	 * Original signature : <code>cups_array_t* cupsArrayDup(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:21</i><br>
	 * @deprecated use the safer method {@link #cupsArrayDup(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference cupsArrayDup(Pointer a);
	/**
	 * Original signature : <code>cups_array_t* cupsArrayDup(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:21</i>
	 */
	PointerByReference cupsArrayDup(PointerByReference a);
	/**
	 * Original signature : <code>void* cupsArrayFind(cups_array_t*, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:23</i><br>
	 * @deprecated use the safer method {@link #cupsArrayFind(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer cupsArrayFind(Pointer a, Pointer e);
	/**
	 * Original signature : <code>void* cupsArrayFind(cups_array_t*, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:23</i>
	 */
	Pointer cupsArrayFind(PointerByReference a, Pointer e);
	/**
	 * Original signature : <code>void* cupsArrayFirst(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:25</i><br>
	 * @deprecated use the safer method {@link #cupsArrayFirst(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsArrayFirst(Pointer a);
	/**
	 * Original signature : <code>void* cupsArrayFirst(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:25</i>
	 */
	Pointer cupsArrayFirst(PointerByReference a);
	/**
	 * Original signature : <code>int cupsArrayGetIndex(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:27</i><br>
	 * @deprecated use the safer method {@link #cupsArrayGetIndex(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsArrayGetIndex(Pointer a);
	/**
	 * Original signature : <code>int cupsArrayGetIndex(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:27</i>
	 */
	int cupsArrayGetIndex(PointerByReference a);
	/**
	 * Original signature : <code>int cupsArrayGetInsert(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:29</i><br>
	 * @deprecated use the safer method {@link #cupsArrayGetInsert(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsArrayGetInsert(Pointer a);
	/**
	 * Original signature : <code>int cupsArrayGetInsert(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:29</i>
	 */
	int cupsArrayGetInsert(PointerByReference a);
	/**
	 * Original signature : <code>void* cupsArrayIndex(cups_array_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:31</i><br>
	 * @deprecated use the safer method {@link #cupsArrayIndex(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer cupsArrayIndex(Pointer a, int n);
	/**
	 * Original signature : <code>void* cupsArrayIndex(cups_array_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:31</i>
	 */
	Pointer cupsArrayIndex(PointerByReference a, int n);
	/**
	 * Original signature : <code>int cupsArrayInsert(cups_array_t*, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:33</i><br>
	 * @deprecated use the safer method {@link #cupsArrayInsert(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsArrayInsert(Pointer a, Pointer e);
	/**
	 * Original signature : <code>int cupsArrayInsert(cups_array_t*, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:33</i>
	 */
	int cupsArrayInsert(PointerByReference a, Pointer e);
	/**
	 * Original signature : <code>void* cupsArrayLast(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:35</i><br>
	 * @deprecated use the safer method {@link #cupsArrayLast(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsArrayLast(Pointer a);
	/**
	 * Original signature : <code>void* cupsArrayLast(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:35</i>
	 */
	Pointer cupsArrayLast(PointerByReference a);
	/**
	 * Original signature : <code>cups_array_t* cupsArrayNew(cups_array_func_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:37</i>
	 */
	PointerByReference cupsArrayNew(MlRabidbeaverJnaLibrary.cups_array_func_t f, Pointer d);
	/**
	 * Original signature : <code>cups_array_t* cupsArrayNew2(cups_array_func_t, void*, cups_ahash_func_t, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:39</i>
	 */
	PointerByReference cupsArrayNew2(MlRabidbeaverJnaLibrary.cups_array_func_t f, Pointer d, MlRabidbeaverJnaLibrary.cups_ahash_func_t h, int hsize);
	/**
	 * Original signature : <code>cups_array_t* cupsArrayNew3(cups_array_func_t, void*, cups_ahash_func_t, int, cups_acopy_func_t, cups_afree_func_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:41</i>
	 */
	PointerByReference cupsArrayNew3(MlRabidbeaverJnaLibrary.cups_array_func_t f, Pointer d, MlRabidbeaverJnaLibrary.cups_ahash_func_t h, int hsize, MlRabidbeaverJnaLibrary.cups_acopy_func_t cf, MlRabidbeaverJnaLibrary.cups_afree_func_t ff);
	/**
	 * Original signature : <code>void* cupsArrayNext(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:43</i><br>
	 * @deprecated use the safer method {@link #cupsArrayNext(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsArrayNext(Pointer a);
	/**
	 * Original signature : <code>void* cupsArrayNext(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:43</i>
	 */
	Pointer cupsArrayNext(PointerByReference a);
	/**
	 * Original signature : <code>void* cupsArrayPrev(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:45</i><br>
	 * @deprecated use the safer method {@link #cupsArrayPrev(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsArrayPrev(Pointer a);
	/**
	 * Original signature : <code>void* cupsArrayPrev(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:45</i>
	 */
	Pointer cupsArrayPrev(PointerByReference a);
	/**
	 * Original signature : <code>int cupsArrayRemove(cups_array_t*, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:47</i><br>
	 * @deprecated use the safer method {@link #cupsArrayRemove(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsArrayRemove(Pointer a, Pointer e);
	/**
	 * Original signature : <code>int cupsArrayRemove(cups_array_t*, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:47</i>
	 */
	int cupsArrayRemove(PointerByReference a, Pointer e);
	/**
	 * Original signature : <code>void* cupsArrayRestore(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:49</i><br>
	 * @deprecated use the safer method {@link #cupsArrayRestore(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsArrayRestore(Pointer a);
	/**
	 * Original signature : <code>void* cupsArrayRestore(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:49</i>
	 */
	Pointer cupsArrayRestore(PointerByReference a);
	/**
	 * Original signature : <code>int cupsArraySave(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:51</i><br>
	 * @deprecated use the safer method {@link #cupsArraySave(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsArraySave(Pointer a);
	/**
	 * Original signature : <code>int cupsArraySave(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:51</i>
	 */
	int cupsArraySave(PointerByReference a);
	/**
	 * Original signature : <code>void* cupsArrayUserData(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:53</i><br>
	 * @deprecated use the safer method {@link #cupsArrayUserData(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsArrayUserData(Pointer a);
	/**
	 * Original signature : <code>void* cupsArrayUserData(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/array.h:53</i>
	 */
	Pointer cupsArrayUserData(PointerByReference a);
	/**
	 * Prototypes...<br>
	 * Original signature : <code>void httpBlocking(http_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:194</i><br>
	 * @deprecated use the safer method {@link #httpBlocking(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void httpBlocking(Pointer http, int b);
	/**
	 * Prototypes...<br>
	 * Original signature : <code>void httpBlocking(http_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:194</i>
	 */
	void httpBlocking(PointerByReference http, int b);
	/**
	 * Original signature : <code>int httpCheck(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:196</i><br>
	 * @deprecated use the safer method {@link #httpCheck(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpCheck(Pointer http);
	/**
	 * Original signature : <code>int httpCheck(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:196</i>
	 */
	int httpCheck(PointerByReference http);
	/**
	 * Original signature : <code>void httpClearFields(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:198</i><br>
	 * @deprecated use the safer method {@link #httpClearFields(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void httpClearFields(Pointer http);
	/**
	 * Original signature : <code>void httpClearFields(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:198</i>
	 */
	void httpClearFields(PointerByReference http);
	/**
	 * Original signature : <code>void httpClose(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:200</i><br>
	 * @deprecated use the safer method {@link #httpClose(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void httpClose(Pointer http);
	/**
	 * Original signature : <code>void httpClose(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:200</i>
	 */
	void httpClose(PointerByReference http);
	/**
	 * Original signature : <code>http_t* httpConnect(const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:202</i><br>
	 * @deprecated use the safer methods {@link #httpConnect(java.lang.String, int)} and {@link #httpConnect(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	PointerByReference httpConnect(Pointer host, int port);
	/**
	 * Original signature : <code>http_t* httpConnect(const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:202</i>
	 */
	PointerByReference httpConnect(String host, int port);
	/**
	 * Original signature : <code>http_t* httpConnectEncrypt(const char*, int, http_encryption_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:204</i><br>
	 * @deprecated use the safer methods {@link #httpConnectEncrypt(java.lang.String, int, int)} and {@link #httpConnectEncrypt(com.sun.jna.Pointer, int, int)} instead
	 */
	@Deprecated 
	PointerByReference httpConnectEncrypt(Pointer host, int port, int encryption);
	/**
	 * Original signature : <code>http_t* httpConnectEncrypt(const char*, int, http_encryption_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:204</i>
	 */
	PointerByReference httpConnectEncrypt(String host, int port, int encryption);
	/**
	 * Original signature : <code>int httpDelete(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:206</i><br>
	 * @deprecated use the safer methods {@link #httpDelete(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpDelete(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpDelete(Pointer http, Pointer uri);
	/**
	 * Original signature : <code>int httpDelete(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:206</i>
	 */
	int httpDelete(PointerByReference http, String uri);
	/**
	 * Original signature : <code>int httpDelete(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:206</i>
	 */
	int httpDelete(PointerByReference http, Pointer uri);
	/**
	 * Original signature : <code>int httpEncryption(http_t*, http_encryption_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:208</i><br>
	 * @deprecated use the safer method {@link #httpEncryption(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int httpEncryption(Pointer http, int e);
	/**
	 * Original signature : <code>int httpEncryption(http_t*, http_encryption_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:208</i>
	 */
	int httpEncryption(PointerByReference http, int e);
	/**
	 * Original signature : <code>int httpError(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:210</i><br>
	 * @deprecated use the safer method {@link #httpError(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpError(Pointer http);
	/**
	 * Original signature : <code>int httpError(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:210</i>
	 */
	int httpError(PointerByReference http);
	/**
	 * Original signature : <code>void httpFlush(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:212</i><br>
	 * @deprecated use the safer method {@link #httpFlush(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void httpFlush(Pointer http);
	/**
	 * Original signature : <code>void httpFlush(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:212</i>
	 */
	void httpFlush(PointerByReference http);
	/**
	 * Original signature : <code>int httpGet(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:214</i><br>
	 * @deprecated use the safer methods {@link #httpGet(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpGet(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpGet(Pointer http, Pointer uri);
	/**
	 * Original signature : <code>int httpGet(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:214</i>
	 */
	int httpGet(PointerByReference http, String uri);
	/**
	 * Original signature : <code>int httpGet(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:214</i>
	 */
	int httpGet(PointerByReference http, Pointer uri);
	/**
	 * Original signature : <code>char* httpGets(char*, int, http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:216</i><br>
	 * @deprecated use the safer methods {@link #httpGets(java.nio.ByteBuffer, int, com.sun.jna.ptr.PointerByReference)} and {@link #httpGets(com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer httpGets(Pointer line, int length, Pointer http);
	/**
	 * Original signature : <code>char* httpGets(char*, int, http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:216</i>
	 */
	Pointer httpGets(ByteBuffer line, int length, PointerByReference http);
	/**
	 * Original signature : <code>char* httpGets(char*, int, http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:216</i>
	 */
	Pointer httpGets(Pointer line, int length, PointerByReference http);
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:218</i><br>
	 * Conversion Error : time_t (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:220</i><br>
	 * Conversion Error : extern time_t (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * Original signature : <code>char* httpGetField(http_t*, http_field_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:222</i><br>
	 * @deprecated use the safer method {@link #httpGetField(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer httpGetField(Pointer http, int field);
	/**
	 * Original signature : <code>char* httpGetField(http_t*, http_field_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:222</i>
	 */
	Pointer httpGetField(PointerByReference http, int field);
	/**
	 * Original signature : <code>hostent* httpGetHostByName(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:224</i><br>
	 * @deprecated use the safer methods {@link #httpGetHostByName(java.lang.String)} and {@link #httpGetHostByName(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.hostent httpGetHostByName(Pointer name);
	/**
	 * Original signature : <code>hostent* httpGetHostByName(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:224</i>
	 */
	MlRabidbeaverJnaLibrary.hostent httpGetHostByName(String name);
	/**
	 * Original signature : <code>char* httpGetSubField(http_t*, http_field_t, const char*, char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:226</i><br>
	 * @deprecated use the safer methods {@link #httpGetSubField(com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.nio.ByteBuffer)} and {@link #httpGetSubField(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer httpGetSubField(Pointer http, int field, Pointer name, Pointer value);
	/**
	 * Original signature : <code>char* httpGetSubField(http_t*, http_field_t, const char*, char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:226</i>
	 */
	Pointer httpGetSubField(PointerByReference http, int field, String name, ByteBuffer value);
	/**
	 * Original signature : <code>char* httpGetSubField(http_t*, http_field_t, const char*, char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:226</i>
	 */
	Pointer httpGetSubField(PointerByReference http, int field, Pointer name, Pointer value);
	/**
	 * Original signature : <code>int httpHead(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:228</i><br>
	 * @deprecated use the safer methods {@link #httpHead(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpHead(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpHead(Pointer http, Pointer uri);
	/**
	 * Original signature : <code>int httpHead(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:228</i>
	 */
	int httpHead(PointerByReference http, String uri);
	/**
	 * Original signature : <code>int httpHead(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:228</i>
	 */
	int httpHead(PointerByReference http, Pointer uri);
	/**
	 * Original signature : <code>void httpInitialize()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:230</i>
	 */
	void httpInitialize();
	/**
	 * Original signature : <code>int httpOptions(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:232</i><br>
	 * @deprecated use the safer methods {@link #httpOptions(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpOptions(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpOptions(Pointer http, Pointer uri);
	/**
	 * Original signature : <code>int httpOptions(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:232</i>
	 */
	int httpOptions(PointerByReference http, String uri);
	/**
	 * Original signature : <code>int httpOptions(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:232</i>
	 */
	int httpOptions(PointerByReference http, Pointer uri);
	/**
	 * Original signature : <code>int httpPost(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:234</i><br>
	 * @deprecated use the safer methods {@link #httpPost(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpPost(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpPost(Pointer http, Pointer uri);
	/**
	 * Original signature : <code>int httpPost(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:234</i>
	 */
	int httpPost(PointerByReference http, String uri);
	/**
	 * Original signature : <code>int httpPost(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:234</i>
	 */
	int httpPost(PointerByReference http, Pointer uri);
	/**
	 * Original signature : <code>int httpPrintf(http_t*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:236</i><br>
	 * @deprecated use the safer methods {@link #httpPrintf(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.Object)} and {@link #httpPrintf(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int httpPrintf(Pointer http, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>int httpPrintf(http_t*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:236</i>
	 */
	int httpPrintf(PointerByReference http, String format, Object... varArgs1);
	/**
	 * Original signature : <code>int httpPrintf(http_t*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:236</i>
	 */
	int httpPrintf(PointerByReference http, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>int httpPut(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:238</i><br>
	 * @deprecated use the safer methods {@link #httpPut(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpPut(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpPut(Pointer http, Pointer uri);
	/**
	 * Original signature : <code>int httpPut(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:238</i>
	 */
	int httpPut(PointerByReference http, String uri);
	/**
	 * Original signature : <code>int httpPut(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:238</i>
	 */
	int httpPut(PointerByReference http, Pointer uri);
	/**
	 * Original signature : <code>int httpRead(http_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:240</i><br>
	 * @deprecated use the safer methods {@link #httpRead(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, int)} and {@link #httpRead(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int httpRead(Pointer http, Pointer buffer, int length);
	/**
	 * Original signature : <code>int httpRead(http_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:240</i>
	 */
	int httpRead(PointerByReference http, ByteBuffer buffer, int length);
	/**
	 * Original signature : <code>int httpRead(http_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:240</i>
	 */
	int httpRead(PointerByReference http, Pointer buffer, int length);
	/**
	 * Original signature : <code>int httpReconnect(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:242</i><br>
	 * @deprecated use the safer method {@link #httpReconnect(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpReconnect(Pointer http);
	/**
	 * Original signature : <code>int httpReconnect(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:242</i>
	 */
	int httpReconnect(PointerByReference http);
	/**
	 * Original signature : <code>void httpSeparate(const char*, char*, char*, char*, int*, char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:244</i><br>
	 * @deprecated use the safer methods {@link #httpSeparate(java.lang.String, java.nio.ByteBuffer, java.nio.ByteBuffer, java.nio.ByteBuffer, java.nio.IntBuffer, java.nio.ByteBuffer)} and {@link #httpSeparate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void httpSeparate(Pointer uri, Pointer method, Pointer username, Pointer host, IntByReference port, Pointer resource);
	/**
	 * Original signature : <code>void httpSeparate(const char*, char*, char*, char*, int*, char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:244</i>
	 */
	void httpSeparate(String uri, ByteBuffer method, ByteBuffer username, ByteBuffer host, IntBuffer port, ByteBuffer resource);
	/**
	 * Original signature : <code>void httpSetField(http_t*, http_field_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:246</i><br>
	 * @deprecated use the safer methods {@link #httpSetField(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #httpSetField(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void httpSetField(Pointer http, int field, Pointer value);
	/**
	 * Original signature : <code>void httpSetField(http_t*, http_field_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:246</i>
	 */
	void httpSetField(PointerByReference http, int field, String value);
	/**
	 * Original signature : <code>void httpSetField(http_t*, http_field_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:246</i>
	 */
	void httpSetField(PointerByReference http, int field, Pointer value);
	/**
	 * Original signature : <code>char* httpStatus(http_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:248</i>
	 */
	Pointer httpStatus(int status);
	/**
	 * Original signature : <code>int httpTrace(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:250</i><br>
	 * @deprecated use the safer methods {@link #httpTrace(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpTrace(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpTrace(Pointer http, Pointer uri);
	/**
	 * Original signature : <code>int httpTrace(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:250</i>
	 */
	int httpTrace(PointerByReference http, String uri);
	/**
	 * Original signature : <code>int httpTrace(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:250</i>
	 */
	int httpTrace(PointerByReference http, Pointer uri);
	/**
	 * Original signature : <code>http_status_t httpUpdate(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:252</i><br>
	 * @deprecated use the safer method {@link #httpUpdate(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpUpdate(Pointer http);
	/**
	 * Original signature : <code>http_status_t httpUpdate(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:252</i>
	 */
	int httpUpdate(PointerByReference http);
	/**
	 * Original signature : <code>int httpWrite(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:254</i><br>
	 * @deprecated use the safer methods {@link #httpWrite(com.sun.jna.ptr.PointerByReference, java.lang.String, int)} and {@link #httpWrite(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int httpWrite(Pointer http, Pointer buffer, int length);
	/**
	 * Original signature : <code>int httpWrite(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:254</i>
	 */
	int httpWrite(PointerByReference http, String buffer, int length);
	/**
	 * Original signature : <code>int httpWrite(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:254</i>
	 */
	int httpWrite(PointerByReference http, Pointer buffer, int length);
	/**
	 * Original signature : <code>char* httpEncode64(char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:256</i><br>
	 * @deprecated use the safer methods {@link #httpEncode64(java.nio.ByteBuffer, java.lang.String)} and {@link #httpEncode64(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer httpEncode64(Pointer out, Pointer in);
	/**
	 * Original signature : <code>char* httpEncode64(char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:256</i>
	 */
	Pointer httpEncode64(ByteBuffer out, String in);
	/**
	 * Original signature : <code>char* httpDecode64(char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:258</i><br>
	 * @deprecated use the safer methods {@link #httpDecode64(java.nio.ByteBuffer, java.lang.String)} and {@link #httpDecode64(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer httpDecode64(Pointer out, Pointer in);
	/**
	 * Original signature : <code>char* httpDecode64(char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:258</i>
	 */
	Pointer httpDecode64(ByteBuffer out, String in);
	/**
	 * Original signature : <code>int httpGetLength(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:260</i><br>
	 * @deprecated use the safer method {@link #httpGetLength(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetLength(Pointer http);
	/**
	 * Original signature : <code>int httpGetLength(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:260</i>
	 */
	int httpGetLength(PointerByReference http);
	/**
	 * Original signature : <code>char* httpMD5(const char*, const char*, const char*, char[33])</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:262</i><br>
	 * @deprecated use the safer methods {@link #httpMD5(java.lang.String, java.lang.String, java.lang.String, java.nio.ByteBuffer)} and {@link #httpMD5(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer httpMD5(Pointer charPtr1, Pointer charPtr2, Pointer charPtr3, Pointer charArr1);
	/**
	 * Original signature : <code>char* httpMD5(const char*, const char*, const char*, char[33])</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:262</i>
	 */
	Pointer httpMD5(String charPtr1, String charPtr2, String charPtr3, ByteBuffer charArr1);
	/**
	 * Original signature : <code>char* httpMD5Final(const char*, const char*, const char*, char[33])</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:264</i><br>
	 * @deprecated use the safer methods {@link #httpMD5Final(java.lang.String, java.lang.String, java.lang.String, java.nio.ByteBuffer)} and {@link #httpMD5Final(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer httpMD5Final(Pointer charPtr1, Pointer charPtr2, Pointer charPtr3, Pointer charArr1);
	/**
	 * Original signature : <code>char* httpMD5Final(const char*, const char*, const char*, char[33])</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:264</i>
	 */
	Pointer httpMD5Final(String charPtr1, String charPtr2, String charPtr3, ByteBuffer charArr1);
	/**
	 * Original signature : <code>char* httpMD5String(const unsigned char*, char[33])</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:266</i><br>
	 * @deprecated use the safer methods {@link #httpMD5String(byte[], java.nio.ByteBuffer)} and {@link #httpMD5String(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer httpMD5String(Pointer charPtr1, Pointer charArr1);
	/**
	 * Original signature : <code>char* httpMD5String(const unsigned char*, char[33])</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:266</i>
	 */
	Pointer httpMD5String(byte charPtr1[], ByteBuffer charArr1);
	/**
	 * New in CUPS 1.1.19 ***<br>
	 * Original signature : <code>void httpClearCookie(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:271</i><br>
	 * @deprecated use the safer method {@link #httpClearCookie(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void httpClearCookie(Pointer http);
	/**
	 * New in CUPS 1.1.19 ***<br>
	 * Original signature : <code>void httpClearCookie(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:271</i>
	 */
	void httpClearCookie(PointerByReference http);
	/**
	 * Original signature : <code>char* httpGetCookie(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:273</i><br>
	 * @deprecated use the safer method {@link #httpGetCookie(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer httpGetCookie(Pointer http);
	/**
	 * Original signature : <code>char* httpGetCookie(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:273</i>
	 */
	Pointer httpGetCookie(PointerByReference http);
	/**
	 * Original signature : <code>void httpSetCookie(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:275</i><br>
	 * @deprecated use the safer methods {@link #httpSetCookie(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpSetCookie(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void httpSetCookie(Pointer http, Pointer cookie);
	/**
	 * Original signature : <code>void httpSetCookie(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:275</i>
	 */
	void httpSetCookie(PointerByReference http, String cookie);
	/**
	 * Original signature : <code>void httpSetCookie(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:275</i>
	 */
	void httpSetCookie(PointerByReference http, Pointer cookie);
	/**
	 * Original signature : <code>int httpWait(http_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:277</i><br>
	 * @deprecated use the safer method {@link #httpWait(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int httpWait(Pointer http, int msec);
	/**
	 * Original signature : <code>int httpWait(http_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:277</i>
	 */
	int httpWait(PointerByReference http, int msec);
	/**
	 * New in CUPS 1.1.21 ***<br>
	 * Original signature : <code>char* httpDecode64_2(char*, int*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:282</i><br>
	 * @deprecated use the safer methods {@link #httpDecode64_2(java.nio.ByteBuffer, java.nio.IntBuffer, java.lang.String)} and {@link #httpDecode64_2(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer httpDecode64_2(Pointer out, IntByReference outlen, Pointer in);
	/**
	 * New in CUPS 1.1.21 ***<br>
	 * Original signature : <code>char* httpDecode64_2(char*, int*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:282</i>
	 */
	Pointer httpDecode64_2(ByteBuffer out, IntBuffer outlen, String in);
	/**
	 * Original signature : <code>char* httpEncode64_2(char*, int, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:284</i><br>
	 * @deprecated use the safer methods {@link #httpEncode64_2(java.nio.ByteBuffer, int, java.lang.String, int)} and {@link #httpEncode64_2(com.sun.jna.Pointer, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer httpEncode64_2(Pointer out, int outlen, Pointer in, int inlen);
	/**
	 * Original signature : <code>char* httpEncode64_2(char*, int, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:284</i>
	 */
	Pointer httpEncode64_2(ByteBuffer out, int outlen, String in, int inlen);
	/**
	 * Original signature : <code>void httpSeparate2(const char*, char*, int, char*, int, char*, int, int*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:286</i><br>
	 * @deprecated use the safer methods {@link #httpSeparate2(java.lang.String, java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, java.nio.IntBuffer, java.nio.ByteBuffer, int)} and {@link #httpSeparate2(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	void httpSeparate2(Pointer uri, Pointer method, int methodlen, Pointer username, int usernamelen, Pointer host, int hostlen, IntByReference port, Pointer resource, int resourcelen);
	/**
	 * Original signature : <code>void httpSeparate2(const char*, char*, int, char*, int, char*, int, int*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:286</i>
	 */
	void httpSeparate2(String uri, ByteBuffer method, int methodlen, ByteBuffer username, int usernamelen, ByteBuffer host, int hostlen, IntBuffer port, ByteBuffer resource, int resourcelen);
	/**
	 * New in CUPS 1.2/OS X 10.5 ***<br>
	 * Original signature : <code>int httpAddrAny(const http_addr_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:291</i>
	 */
	int httpAddrAny(http_addr_t addr);
	/**
	 * Original signature : <code>http_addrlist_t* httpAddrConnect(http_addrlist_t*, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:293</i><br>
	 * @deprecated use the safer methods {@link #httpAddrConnect(ml.rabidbeaver.jna.http_addrlist_s, java.nio.IntBuffer)} and {@link #httpAddrConnect(ml.rabidbeaver.jna.http_addrlist_s, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	http_addrlist_s httpAddrConnect(http_addrlist_s addrlist, IntByReference sock);
	/**
	 * Original signature : <code>http_addrlist_t* httpAddrConnect(http_addrlist_t*, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:293</i>
	 */
	http_addrlist_s httpAddrConnect(http_addrlist_s addrlist, IntBuffer sock);
	/**
	 * Original signature : <code>int httpAddrEqual(const http_addr_t*, const http_addr_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:295</i>
	 */
	int httpAddrEqual(http_addr_t addr1, http_addr_t addr2);
	/**
	 * Original signature : <code>void httpAddrFreeList(http_addrlist_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:297</i>
	 */
	void httpAddrFreeList(http_addrlist_s addrlist);
	/**
	 * Original signature : <code>http_addrlist_t* httpAddrGetList(const char*, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:299</i><br>
	 * @deprecated use the safer methods {@link #httpAddrGetList(java.lang.String, int, java.lang.String)} and {@link #httpAddrGetList(com.sun.jna.Pointer, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	http_addrlist_s httpAddrGetList(Pointer hostname, int family, Pointer service);
	/**
	 * Original signature : <code>http_addrlist_t* httpAddrGetList(const char*, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:299</i>
	 */
	http_addrlist_s httpAddrGetList(String hostname, int family, String service);
	/**
	 * Original signature : <code>int httpAddrLength(const http_addr_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:301</i>
	 */
	int httpAddrLength(http_addr_t addr);
	/**
	 * Original signature : <code>int httpAddrLocalhost(const http_addr_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:303</i>
	 */
	int httpAddrLocalhost(http_addr_t addr);
	/**
	 * Original signature : <code>char* httpAddrLookup(const http_addr_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:305</i><br>
	 * @deprecated use the safer methods {@link #httpAddrLookup(ml.rabidbeaver.jna.http_addr_t, java.nio.ByteBuffer, int)} and {@link #httpAddrLookup(ml.rabidbeaver.jna.http_addr_t, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer httpAddrLookup(http_addr_t addr, Pointer name, int namelen);
	/**
	 * Original signature : <code>char* httpAddrLookup(const http_addr_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:305</i>
	 */
	Pointer httpAddrLookup(http_addr_t addr, ByteBuffer name, int namelen);
	/**
	 * Original signature : <code>char* httpAddrString(const http_addr_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:307</i><br>
	 * @deprecated use the safer methods {@link #httpAddrString(ml.rabidbeaver.jna.http_addr_t, java.nio.ByteBuffer, int)} and {@link #httpAddrString(ml.rabidbeaver.jna.http_addr_t, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer httpAddrString(http_addr_t addr, Pointer s, int slen);
	/**
	 * Original signature : <code>char* httpAddrString(const http_addr_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:307</i>
	 */
	Pointer httpAddrString(http_addr_t addr, ByteBuffer s, int slen);
	/**
	 * Original signature : <code>http_uri_status_t httpAssembleURI(http_uri_coding_t, char*, int, const char*, const char*, const char*, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:309</i><br>
	 * @deprecated use the safer methods {@link #httpAssembleURI(int, java.nio.ByteBuffer, int, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String)} and {@link #httpAssembleURI(int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpAssembleURI(int encoding, Pointer uri, int urilen, Pointer scheme, Pointer username, Pointer host, int port, Pointer resource);
	/**
	 * Original signature : <code>http_uri_status_t httpAssembleURI(http_uri_coding_t, char*, int, const char*, const char*, const char*, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:309</i>
	 */
	int httpAssembleURI(int encoding, ByteBuffer uri, int urilen, String scheme, String username, String host, int port, String resource);
	/**
	 * Original signature : <code>http_uri_status_t httpAssembleURIf(http_uri_coding_t, char*, int, const char*, const char*, const char*, int, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:311</i><br>
	 * @deprecated use the safer methods {@link #httpAssembleURIf(int, java.nio.ByteBuffer, int, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.Object)} and {@link #httpAssembleURIf(int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int httpAssembleURIf(int encoding, Pointer uri, int urilen, Pointer scheme, Pointer username, Pointer host, int port, Pointer resourcef, Object... varArgs1);
	/**
	 * Original signature : <code>http_uri_status_t httpAssembleURIf(http_uri_coding_t, char*, int, const char*, const char*, const char*, int, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:311</i>
	 */
	int httpAssembleURIf(int encoding, ByteBuffer uri, int urilen, String scheme, String username, String host, int port, String resourcef, Object... varArgs1);
	/**
	 * Original signature : <code>int httpFlushWrite(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:313</i><br>
	 * @deprecated use the safer method {@link #httpFlushWrite(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpFlushWrite(Pointer http);
	/**
	 * Original signature : <code>int httpFlushWrite(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:313</i>
	 */
	int httpFlushWrite(PointerByReference http);
	/**
	 * Original signature : <code>int httpGetBlocking(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:315</i><br>
	 * @deprecated use the safer method {@link #httpGetBlocking(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetBlocking(Pointer http);
	/**
	 * Original signature : <code>int httpGetBlocking(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:315</i>
	 */
	int httpGetBlocking(PointerByReference http);
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:317</i><br>
	 * Conversion Error : time_t (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * Original signature : <code>int httpGetFd(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:319</i><br>
	 * @deprecated use the safer method {@link #httpGetFd(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetFd(Pointer http);
	/**
	 * Original signature : <code>int httpGetFd(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:319</i>
	 */
	int httpGetFd(PointerByReference http);
	/**
	 * Original signature : <code>char* httpGetHostname(http_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:321</i><br>
	 * @deprecated use the safer methods {@link #httpGetHostname(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, int)} and {@link #httpGetHostname(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer httpGetHostname(Pointer http, Pointer s, int slen);
	/**
	 * Original signature : <code>char* httpGetHostname(http_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:321</i>
	 */
	Pointer httpGetHostname(PointerByReference http, ByteBuffer s, int slen);
	/**
	 * Original signature : <code>char* httpGetHostname(http_t*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:321</i>
	 */
	Pointer httpGetHostname(PointerByReference http, Pointer s, int slen);
	/**
	 * Original signature : <code>off_t httpGetLength2(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:323</i><br>
	 * @deprecated use the safer method {@link #httpGetLength2(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	long httpGetLength2(Pointer http);
	/**
	 * Original signature : <code>off_t httpGetLength2(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:323</i>
	 */
	long httpGetLength2(PointerByReference http);
	/**
	 * Original signature : <code>http_status_t httpGetStatus(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:325</i><br>
	 * @deprecated use the safer method {@link #httpGetStatus(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetStatus(Pointer http);
	/**
	 * Original signature : <code>http_status_t httpGetStatus(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:325</i>
	 */
	int httpGetStatus(PointerByReference http);
	/**
	 * Original signature : <code>char* httpGetSubField2(http_t*, http_field_t, const char*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:327</i><br>
	 * @deprecated use the safer methods {@link #httpGetSubField2(com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.nio.ByteBuffer, int)} and {@link #httpGetSubField2(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer httpGetSubField2(Pointer http, int field, Pointer name, Pointer value, int valuelen);
	/**
	 * Original signature : <code>char* httpGetSubField2(http_t*, http_field_t, const char*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:327</i>
	 */
	Pointer httpGetSubField2(PointerByReference http, int field, String name, ByteBuffer value, int valuelen);
	/**
	 * Original signature : <code>char* httpGetSubField2(http_t*, http_field_t, const char*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:327</i>
	 */
	Pointer httpGetSubField2(PointerByReference http, int field, Pointer name, Pointer value, int valuelen);
	/**
	 * Original signature : <code>ssize_t httpRead2(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:329</i><br>
	 * @deprecated use the safer methods {@link #httpRead2(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #httpRead2(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t httpRead2(Pointer http, Pointer buffer, NativeSize length);
	/**
	 * Original signature : <code>ssize_t httpRead2(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:329</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t httpRead2(PointerByReference http, ByteBuffer buffer, NativeSize length);
	/**
	 * Original signature : <code>ssize_t httpRead2(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:329</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t httpRead2(PointerByReference http, Pointer buffer, NativeSize length);
	/**
	 * Original signature : <code>http_uri_status_t httpSeparateURI(http_uri_coding_t, const char*, char*, int, char*, int, char*, int, int*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:331</i><br>
	 * @deprecated use the safer methods {@link #httpSeparateURI(int, java.lang.String, java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, java.nio.ByteBuffer, int, java.nio.IntBuffer, java.nio.ByteBuffer, int)} and {@link #httpSeparateURI(int, com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, int, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int httpSeparateURI(int decoding, Pointer uri, Pointer scheme, int schemelen, Pointer username, int usernamelen, Pointer host, int hostlen, IntByReference port, Pointer resource, int resourcelen);
	/**
	 * Original signature : <code>http_uri_status_t httpSeparateURI(http_uri_coding_t, const char*, char*, int, char*, int, char*, int, int*, char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:331</i>
	 */
	int httpSeparateURI(int decoding, String uri, ByteBuffer scheme, int schemelen, ByteBuffer username, int usernamelen, ByteBuffer host, int hostlen, IntBuffer port, ByteBuffer resource, int resourcelen);
	/**
	 * Original signature : <code>void httpSetExpect(http_t*, http_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:333</i><br>
	 * @deprecated use the safer method {@link #httpSetExpect(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void httpSetExpect(Pointer http, int expect);
	/**
	 * Original signature : <code>void httpSetExpect(http_t*, http_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:333</i>
	 */
	void httpSetExpect(PointerByReference http, int expect);
	/**
	 * Original signature : <code>void httpSetLength(http_t*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:335</i><br>
	 * @deprecated use the safer method {@link #httpSetLength(com.sun.jna.ptr.PointerByReference, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	void httpSetLength(Pointer http, NativeSize length);
	/**
	 * Original signature : <code>void httpSetLength(http_t*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:335</i>
	 */
	void httpSetLength(PointerByReference http, NativeSize length);
	/**
	 * Original signature : <code>ssize_t httpWrite2(http_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:337</i><br>
	 * @deprecated use the safer methods {@link #httpWrite2(com.sun.jna.ptr.PointerByReference, java.lang.String, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #httpWrite2(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t httpWrite2(Pointer http, Pointer buffer, NativeSize length);
	/**
	 * Original signature : <code>ssize_t httpWrite2(http_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:337</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t httpWrite2(PointerByReference http, String buffer, NativeSize length);
	/**
	 * Original signature : <code>ssize_t httpWrite2(http_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:337</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t httpWrite2(PointerByReference http, Pointer buffer, NativeSize length);
	/**
	 * New in CUPS 1.3/OS X 10.5 ***<br>
	 * Original signature : <code>char* httpGetAuthString(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:342</i><br>
	 * @deprecated use the safer method {@link #httpGetAuthString(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer httpGetAuthString(Pointer http);
	/**
	 * New in CUPS 1.3/OS X 10.5 ***<br>
	 * Original signature : <code>char* httpGetAuthString(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:342</i>
	 */
	Pointer httpGetAuthString(PointerByReference http);
	/**
	 * Original signature : <code>void httpSetAuthString(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:344</i><br>
	 * @deprecated use the safer methods {@link #httpSetAuthString(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #httpSetAuthString(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void httpSetAuthString(Pointer http, Pointer scheme, Pointer data);
	/**
	 * Original signature : <code>void httpSetAuthString(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:344</i>
	 */
	void httpSetAuthString(PointerByReference http, String scheme, String data);
	/**
	 * Original signature : <code>void httpSetAuthString(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:344</i>
	 */
	void httpSetAuthString(PointerByReference http, Pointer scheme, Pointer data);
	/**
	 * New in CUPS 1.5/OS X 10.7 ***<br>
	 * Original signature : <code>int httpAddCredential(cups_array_t*, const void*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:349</i><br>
	 * @deprecated use the safer method {@link #httpAddCredential(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	int httpAddCredential(Pointer credentials, Pointer data, NativeSize datalen);
	/**
	 * New in CUPS 1.5/OS X 10.7 ***<br>
	 * Original signature : <code>int httpAddCredential(cups_array_t*, const void*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:349</i>
	 */
	int httpAddCredential(PointerByReference credentials, Pointer data, NativeSize datalen);
	/**
	 * Original signature : <code>int httpCopyCredentials(http_t*, cups_array_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:351</i><br>
	 * @deprecated use the safer method {@link #httpCopyCredentials(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpCopyCredentials(Pointer http, PointerByReference credentials);
	/**
	 * Original signature : <code>int httpCopyCredentials(http_t*, cups_array_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:351</i>
	 */
	int httpCopyCredentials(PointerByReference http, PointerByReference credentials);
	/**
	 * Original signature : <code>void httpFreeCredentials(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:353</i><br>
	 * @deprecated use the safer method {@link #httpFreeCredentials(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void httpFreeCredentials(Pointer certs);
	/**
	 * Original signature : <code>void httpFreeCredentials(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:353</i>
	 */
	void httpFreeCredentials(PointerByReference certs);
	/**
	 * Original signature : <code>int httpSetCredentials(http_t*, cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:355</i><br>
	 * @deprecated use the safer method {@link #httpSetCredentials(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpSetCredentials(Pointer http, Pointer certs);
	/**
	 * Original signature : <code>int httpSetCredentials(http_t*, cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:355</i>
	 */
	int httpSetCredentials(PointerByReference http, PointerByReference certs);
	/**
	 * Original signature : <code>void httpSetTimeout(http_t*, double, http_timeout_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:357</i><br>
	 * @deprecated use the safer method {@link #httpSetTimeout(com.sun.jna.ptr.PointerByReference, double, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.http_timeout_cb_t, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void httpSetTimeout(Pointer http, double timeout, MlRabidbeaverJnaLibrary.http_timeout_cb_t cb, Pointer user_data);
	/**
	 * Original signature : <code>void httpSetTimeout(http_t*, double, http_timeout_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:357</i>
	 */
	void httpSetTimeout(PointerByReference http, double timeout, MlRabidbeaverJnaLibrary.http_timeout_cb_t cb, Pointer user_data);
	/**
	 * New in CUPS 1.6/OS X 10.8 ***<br>
	 * Original signature : <code>http_addrlist_t* httpAddrConnect2(http_addrlist_t*, int*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:362</i><br>
	 * @deprecated use the safer methods {@link #httpAddrConnect2(ml.rabidbeaver.jna.http_addrlist_s, java.nio.IntBuffer, int, java.nio.IntBuffer)} and {@link #httpAddrConnect2(ml.rabidbeaver.jna.http_addrlist_s, com.sun.jna.ptr.IntByReference, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	http_addrlist_s httpAddrConnect2(http_addrlist_s addrlist, IntByReference sock, int msec, IntByReference cancel);
	/**
	 * New in CUPS 1.6/OS X 10.8 ***<br>
	 * Original signature : <code>http_addrlist_t* httpAddrConnect2(http_addrlist_t*, int*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:362</i>
	 */
	http_addrlist_s httpAddrConnect2(http_addrlist_s addrlist, IntBuffer sock, int msec, IntBuffer cancel);
	/**
	 * Original signature : <code>http_state_t httpGetState(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:364</i><br>
	 * @deprecated use the safer method {@link #httpGetState(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetState(Pointer http);
	/**
	 * Original signature : <code>http_state_t httpGetState(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:364</i>
	 */
	int httpGetState(PointerByReference http);
	/**
	 * Original signature : <code>http_version_t httpGetVersion(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:366</i><br>
	 * @deprecated use the safer method {@link #httpGetVersion(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetVersion(Pointer http);
	/**
	 * Original signature : <code>http_version_t httpGetVersion(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:366</i>
	 */
	int httpGetVersion(PointerByReference http);
	/**
	 * Original signature : <code>int httpReconnect2(http_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:368</i><br>
	 * @deprecated use the safer methods {@link #httpReconnect2(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer)} and {@link #httpReconnect2(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int httpReconnect2(Pointer http, int msec, IntByReference cancel);
	/**
	 * Original signature : <code>int httpReconnect2(http_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:368</i>
	 */
	int httpReconnect2(PointerByReference http, int msec, IntBuffer cancel);
	/**
	 * Original signature : <code>int httpReconnect2(http_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:368</i>
	 */
	int httpReconnect2(PointerByReference http, int msec, IntByReference cancel);
	/**
	 * New in CUPS 1.7/OS X 10.9 ***<br>
	 * Original signature : <code>http_t* httpAcceptConnection(int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:373</i>
	 */
	PointerByReference httpAcceptConnection(int fd, int blocking);
	/**
	 * Original signature : <code>http_addrlist_t* httpAddrCopyList(http_addrlist_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:375</i>
	 */
	http_addrlist_s httpAddrCopyList(http_addrlist_s src);
	/**
	 * Original signature : <code>int httpAddrListen(http_addr_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:377</i>
	 */
	int httpAddrListen(http_addr_t addr, int port);
	/**
	 * Original signature : <code>int httpAddrPort(http_addr_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:379</i>
	 */
	int httpAddrPort(http_addr_t addr);
	/**
	 * Original signature : <code>char* httpAssembleUUID(const char*, int, const char*, int, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:381</i><br>
	 * @deprecated use the safer methods {@link #httpAssembleUUID(java.lang.String, int, java.lang.String, int, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #httpAssembleUUID(com.sun.jna.Pointer, int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	Pointer httpAssembleUUID(Pointer server, int port, Pointer name, int number, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>char* httpAssembleUUID(const char*, int, const char*, int, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:381</i>
	 */
	Pointer httpAssembleUUID(String server, int port, String name, int number, ByteBuffer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>http_t* httpConnect2(const char*, int, http_addrlist_t*, int, http_encryption_t, int, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:383</i><br>
	 * @deprecated use the safer methods {@link #httpConnect2(java.lang.String, int, ml.rabidbeaver.jna.http_addrlist_s, int, int, int, int, java.nio.IntBuffer)} and {@link #httpConnect2(com.sun.jna.Pointer, int, ml.rabidbeaver.jna.http_addrlist_s, int, int, int, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	PointerByReference httpConnect2(Pointer host, int port, http_addrlist_s addrlist, int family, int encryption, int blocking, int msec, IntByReference cancel);
	/**
	 * Original signature : <code>http_t* httpConnect2(const char*, int, http_addrlist_t*, int, http_encryption_t, int, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:383</i>
	 */
	PointerByReference httpConnect2(String host, int port, http_addrlist_s addrlist, int family, int encryption, int blocking, int msec, IntBuffer cancel);
	/**
	 * Original signature : <code>char* httpGetContentEncoding(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:385</i><br>
	 * @deprecated use the safer method {@link #httpGetContentEncoding(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer httpGetContentEncoding(Pointer http);
	/**
	 * Original signature : <code>char* httpGetContentEncoding(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:385</i>
	 */
	Pointer httpGetContentEncoding(PointerByReference http);
	/**
	 * Original signature : <code>http_status_t httpGetExpect(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:387</i><br>
	 * @deprecated use the safer method {@link #httpGetExpect(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetExpect(Pointer http);
	/**
	 * Original signature : <code>http_status_t httpGetExpect(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:387</i>
	 */
	int httpGetExpect(PointerByReference http);
	/**
	 * Original signature : <code>ssize_t httpPeek(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:389</i><br>
	 * @deprecated use the safer methods {@link #httpPeek(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #httpPeek(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t httpPeek(Pointer http, Pointer buffer, NativeSize length);
	/**
	 * Original signature : <code>ssize_t httpPeek(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:389</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t httpPeek(PointerByReference http, ByteBuffer buffer, NativeSize length);
	/**
	 * Original signature : <code>ssize_t httpPeek(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:389</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t httpPeek(PointerByReference http, Pointer buffer, NativeSize length);
	/**
	 * Original signature : <code>http_state_t httpReadRequest(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:391</i><br>
	 * @deprecated use the safer methods {@link #httpReadRequest(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #httpReadRequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	int httpReadRequest(Pointer http, Pointer resource, NativeSize resourcelen);
	/**
	 * Original signature : <code>http_state_t httpReadRequest(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:391</i>
	 */
	int httpReadRequest(PointerByReference http, ByteBuffer resource, NativeSize resourcelen);
	/**
	 * Original signature : <code>http_state_t httpReadRequest(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:391</i>
	 */
	int httpReadRequest(PointerByReference http, Pointer resource, NativeSize resourcelen);
	/**
	 * Original signature : <code>void httpSetDefaultField(http_t*, http_field_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:393</i><br>
	 * @deprecated use the safer methods {@link #httpSetDefaultField(com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #httpSetDefaultField(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void httpSetDefaultField(Pointer http, int field, Pointer value);
	/**
	 * Original signature : <code>void httpSetDefaultField(http_t*, http_field_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:393</i>
	 */
	void httpSetDefaultField(PointerByReference http, int field, String value);
	/**
	 * Original signature : <code>void httpSetDefaultField(http_t*, http_field_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:393</i>
	 */
	void httpSetDefaultField(PointerByReference http, int field, Pointer value);
	/**
	 * Original signature : <code>http_state_t httpWriteResponse(http_t*, http_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:395</i><br>
	 * @deprecated use the safer method {@link #httpWriteResponse(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int httpWriteResponse(Pointer http, int status);
	/**
	 * Original signature : <code>http_state_t httpWriteResponse(http_t*, http_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:395</i>
	 */
	int httpWriteResponse(PointerByReference http, int status);
	/**
	 * New in CUPS 2.0/OS X 10.10<br>
	 * Original signature : <code>int httpAddrClose(http_addr_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:400</i>
	 */
	int httpAddrClose(http_addr_t addr, int fd);
	/**
	 * Original signature : <code>int httpAddrFamily(http_addr_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:402</i>
	 */
	int httpAddrFamily(http_addr_t addr);
	/**
	 * Original signature : <code>int httpCompareCredentials(cups_array_t*, cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:404</i><br>
	 * @deprecated use the safer method {@link #httpCompareCredentials(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpCompareCredentials(Pointer cred1, Pointer cred2);
	/**
	 * Original signature : <code>int httpCompareCredentials(cups_array_t*, cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:404</i>
	 */
	int httpCompareCredentials(PointerByReference cred1, PointerByReference cred2);
	/**
	 * Original signature : <code>int httpCredentialsAreValidForName(cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:406</i><br>
	 * @deprecated use the safer methods {@link #httpCredentialsAreValidForName(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpCredentialsAreValidForName(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpCredentialsAreValidForName(Pointer credentials, Pointer common_name);
	/**
	 * Original signature : <code>int httpCredentialsAreValidForName(cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:406</i>
	 */
	int httpCredentialsAreValidForName(PointerByReference credentials, String common_name);
	/**
	 * Original signature : <code>int httpCredentialsAreValidForName(cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:406</i>
	 */
	int httpCredentialsAreValidForName(PointerByReference credentials, Pointer common_name);
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:408</i><br>
	 * Conversion Error : extern time_t (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * Original signature : <code>http_trust_t httpCredentialsGetTrust(cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:410</i><br>
	 * @deprecated use the safer methods {@link #httpCredentialsGetTrust(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpCredentialsGetTrust(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpCredentialsGetTrust(Pointer credentials, Pointer common_name);
	/**
	 * Original signature : <code>http_trust_t httpCredentialsGetTrust(cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:410</i>
	 */
	int httpCredentialsGetTrust(PointerByReference credentials, String common_name);
	/**
	 * Original signature : <code>http_trust_t httpCredentialsGetTrust(cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:410</i>
	 */
	int httpCredentialsGetTrust(PointerByReference credentials, Pointer common_name);
	/**
	 * Original signature : <code>size_t httpCredentialsString(cups_array_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:412</i><br>
	 * @deprecated use the safer methods {@link #httpCredentialsString(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #httpCredentialsString(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	NativeSize httpCredentialsString(Pointer credentials, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>size_t httpCredentialsString(cups_array_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:412</i>
	 */
	NativeSize httpCredentialsString(PointerByReference credentials, ByteBuffer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>size_t httpCredentialsString(cups_array_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:412</i>
	 */
	NativeSize httpCredentialsString(PointerByReference credentials, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>http_field_t httpFieldValue(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:414</i><br>
	 * @deprecated use the safer methods {@link #httpFieldValue(java.lang.String)} and {@link #httpFieldValue(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpFieldValue(Pointer name);
	/**
	 * Original signature : <code>http_field_t httpFieldValue(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:414</i>
	 */
	int httpFieldValue(String name);
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:416</i><br>
	 * Conversion Error : extern time_t (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * Original signature : <code>http_addr_t* httpGetAddress(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:418</i><br>
	 * @deprecated use the safer method {@link #httpGetAddress(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	http_addr_t httpGetAddress(Pointer http);
	/**
	 * Original signature : <code>http_addr_t* httpGetAddress(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:418</i>
	 */
	http_addr_t httpGetAddress(PointerByReference http);
	/**
	 * Original signature : <code>http_encryption_t httpGetEncryption(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:420</i><br>
	 * @deprecated use the safer method {@link #httpGetEncryption(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetEncryption(Pointer http);
	/**
	 * Original signature : <code>http_encryption_t httpGetEncryption(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:420</i>
	 */
	int httpGetEncryption(PointerByReference http);
	/**
	 * Original signature : <code>http_keepalive_t httpGetKeepAlive(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:422</i><br>
	 * @deprecated use the safer method {@link #httpGetKeepAlive(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpGetKeepAlive(Pointer http);
	/**
	 * Original signature : <code>http_keepalive_t httpGetKeepAlive(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:422</i>
	 */
	int httpGetKeepAlive(PointerByReference http);
	/**
	 * Original signature : <code>size_t httpGetPending(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:424</i><br>
	 * @deprecated use the safer method {@link #httpGetPending(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeSize httpGetPending(Pointer http);
	/**
	 * Original signature : <code>size_t httpGetPending(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:424</i>
	 */
	NativeSize httpGetPending(PointerByReference http);
	/**
	 * Original signature : <code>size_t httpGetReady(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:426</i><br>
	 * @deprecated use the safer method {@link #httpGetReady(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeSize httpGetReady(Pointer http);
	/**
	 * Original signature : <code>size_t httpGetReady(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:426</i>
	 */
	NativeSize httpGetReady(PointerByReference http);
	/**
	 * Original signature : <code>size_t httpGetRemaining(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:428</i><br>
	 * @deprecated use the safer method {@link #httpGetRemaining(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeSize httpGetRemaining(Pointer http);
	/**
	 * Original signature : <code>size_t httpGetRemaining(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:428</i>
	 */
	NativeSize httpGetRemaining(PointerByReference http);
	/**
	 * Original signature : <code>int httpIsChunked(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:430</i><br>
	 * @deprecated use the safer method {@link #httpIsChunked(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpIsChunked(Pointer http);
	/**
	 * Original signature : <code>int httpIsChunked(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:430</i>
	 */
	int httpIsChunked(PointerByReference http);
	/**
	 * Original signature : <code>int httpIsEncrypted(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:432</i><br>
	 * @deprecated use the safer method {@link #httpIsEncrypted(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int httpIsEncrypted(Pointer http);
	/**
	 * Original signature : <code>int httpIsEncrypted(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:432</i>
	 */
	int httpIsEncrypted(PointerByReference http);
	/**
	 * Original signature : <code>int httpLoadCredentials(const char*, cups_array_t**, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:434</i><br>
	 * @deprecated use the safer methods {@link #httpLoadCredentials(java.lang.String, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpLoadCredentials(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpLoadCredentials(Pointer path, PointerByReference credentials, Pointer common_name);
	/**
	 * Original signature : <code>int httpLoadCredentials(const char*, cups_array_t**, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:434</i>
	 */
	int httpLoadCredentials(String path, PointerByReference credentials, String common_name);
	/**
	 * Original signature : <code>char* httpResolveHostname(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:436</i><br>
	 * @deprecated use the safer methods {@link #httpResolveHostname(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #httpResolveHostname(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	Pointer httpResolveHostname(Pointer http, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>char* httpResolveHostname(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:436</i>
	 */
	Pointer httpResolveHostname(PointerByReference http, ByteBuffer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>char* httpResolveHostname(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:436</i>
	 */
	Pointer httpResolveHostname(PointerByReference http, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>int httpSaveCredentials(const char*, cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:438</i><br>
	 * @deprecated use the safer methods {@link #httpSaveCredentials(java.lang.String, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #httpSaveCredentials(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int httpSaveCredentials(Pointer path, Pointer credentials, Pointer common_name);
	/**
	 * Original signature : <code>int httpSaveCredentials(const char*, cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:438</i>
	 */
	int httpSaveCredentials(String path, PointerByReference credentials, String common_name);
	/**
	 * Original signature : <code>int httpSaveCredentials(const char*, cups_array_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:438</i>
	 */
	int httpSaveCredentials(Pointer path, PointerByReference credentials, Pointer common_name);
	/**
	 * Original signature : <code>void httpSetKeepAlive(http_t*, http_keepalive_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:440</i><br>
	 * @deprecated use the safer method {@link #httpSetKeepAlive(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	void httpSetKeepAlive(Pointer http, int keep_alive);
	/**
	 * Original signature : <code>void httpSetKeepAlive(http_t*, http_keepalive_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:440</i>
	 */
	void httpSetKeepAlive(PointerByReference http, int keep_alive);
	/**
	 * Original signature : <code>void httpShutdown(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:442</i><br>
	 * @deprecated use the safer method {@link #httpShutdown(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void httpShutdown(Pointer http);
	/**
	 * Original signature : <code>void httpShutdown(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:442</i>
	 */
	void httpShutdown(PointerByReference http);
	/**
	 * Original signature : <code>char* httpStateString(http_state_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:444</i>
	 */
	Pointer httpStateString(int state);
	/**
	 * Original signature : <code>char* httpURIStatusString(http_uri_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/http.h:446</i>
	 */
	Pointer httpURIStatusString(int status);
	/**
	 * Prototypes...<br>
	 * Original signature : <code>ipp_attribute_t* ippAddBoolean(ipp_t*, ipp_tag_t, const char*, char)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:347</i><br>
	 * @deprecated use the safer methods {@link #ippAddBoolean(com.sun.jna.ptr.PointerByReference, int, java.lang.String, byte)} and {@link #ippAddBoolean(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, byte)} instead
	 */
	@Deprecated 
	PointerByReference ippAddBoolean(Pointer ipp, int group, Pointer name, byte value);
	/**
	 * Prototypes...<br>
	 * Original signature : <code>ipp_attribute_t* ippAddBoolean(ipp_t*, ipp_tag_t, const char*, char)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:347</i>
	 */
	PointerByReference ippAddBoolean(PointerByReference ipp, int group, String name, byte value);
	/**
	 * Prototypes...<br>
	 * Original signature : <code>ipp_attribute_t* ippAddBoolean(ipp_t*, ipp_tag_t, const char*, char)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:347</i>
	 */
	PointerByReference ippAddBoolean(PointerByReference ipp, int group, Pointer name, byte value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddBooleans(ipp_t*, ipp_tag_t, const char*, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:349</i><br>
	 * @deprecated use the safer methods {@link #ippAddBooleans(com.sun.jna.ptr.PointerByReference, int, java.lang.String, int, java.lang.String)} and {@link #ippAddBooleans(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference ippAddBooleans(Pointer ipp, int group, Pointer name, int num_values, Pointer values);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddBooleans(ipp_t*, ipp_tag_t, const char*, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:349</i>
	 */
	PointerByReference ippAddBooleans(PointerByReference ipp, int group, String name, int num_values, String values);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddBooleans(ipp_t*, ipp_tag_t, const char*, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:349</i>
	 */
	PointerByReference ippAddBooleans(PointerByReference ipp, int group, Pointer name, int num_values, Pointer values);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddDate(ipp_t*, ipp_tag_t, const char*, const ipp_uchar_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:351</i><br>
	 * @deprecated use the safer methods {@link #ippAddDate(com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.nio.ByteBuffer)} and {@link #ippAddDate(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference ippAddDate(Pointer ipp, int group, Pointer name, Pointer value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddDate(ipp_t*, ipp_tag_t, const char*, const ipp_uchar_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:351</i>
	 */
	PointerByReference ippAddDate(PointerByReference ipp, int group, String name, ByteBuffer value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddDate(ipp_t*, ipp_tag_t, const char*, const ipp_uchar_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:351</i>
	 */
	PointerByReference ippAddDate(PointerByReference ipp, int group, Pointer name, Pointer value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddInteger(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:353</i><br>
	 * @deprecated use the safer methods {@link #ippAddInteger(com.sun.jna.ptr.PointerByReference, int, int, java.lang.String, int)} and {@link #ippAddInteger(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	PointerByReference ippAddInteger(Pointer ipp, int group, int value_tag, Pointer name, int value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddInteger(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:353</i>
	 */
	PointerByReference ippAddInteger(PointerByReference ipp, int group, int value_tag, String name, int value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddInteger(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:353</i>
	 */
	PointerByReference ippAddInteger(PointerByReference ipp, int group, int value_tag, Pointer name, int value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddIntegers(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:355</i><br>
	 * @deprecated use the safer methods {@link #ippAddIntegers(com.sun.jna.ptr.PointerByReference, int, int, java.lang.String, int, int[])} and {@link #ippAddIntegers(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippAddIntegers(Pointer ipp, int group, int value_tag, Pointer name, int num_values, IntByReference values);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddIntegers(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:355</i>
	 */
	PointerByReference ippAddIntegers(PointerByReference ipp, int group, int value_tag, String name, int num_values, int values[]);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddIntegers(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:355</i>
	 */
	PointerByReference ippAddIntegers(PointerByReference ipp, int group, int value_tag, Pointer name, int num_values, IntByReference values);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddRange(ipp_t*, ipp_tag_t, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:357</i><br>
	 * @deprecated use the safer methods {@link #ippAddRange(com.sun.jna.ptr.PointerByReference, int, java.lang.String, int, int)} and {@link #ippAddRange(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int, int)} instead
	 */
	@Deprecated 
	PointerByReference ippAddRange(Pointer ipp, int group, Pointer name, int lower, int upper);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddRange(ipp_t*, ipp_tag_t, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:357</i>
	 */
	PointerByReference ippAddRange(PointerByReference ipp, int group, String name, int lower, int upper);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddRange(ipp_t*, ipp_tag_t, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:357</i>
	 */
	PointerByReference ippAddRange(PointerByReference ipp, int group, Pointer name, int lower, int upper);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddRanges(ipp_t*, ipp_tag_t, const char*, int, const int*, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:359</i><br>
	 * @deprecated use the safer methods {@link #ippAddRanges(com.sun.jna.ptr.PointerByReference, int, java.lang.String, int, int[], int[])} and {@link #ippAddRanges(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippAddRanges(Pointer ipp, int group, Pointer name, int num_values, IntByReference lower, IntByReference upper);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddRanges(ipp_t*, ipp_tag_t, const char*, int, const int*, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:359</i>
	 */
	PointerByReference ippAddRanges(PointerByReference ipp, int group, String name, int num_values, int lower[], int upper[]);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddRanges(ipp_t*, ipp_tag_t, const char*, int, const int*, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:359</i>
	 */
	PointerByReference ippAddRanges(PointerByReference ipp, int group, Pointer name, int num_values, IntByReference lower, IntByReference upper);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddResolution(ipp_t*, ipp_tag_t, const char*, ipp_res_t, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:361</i><br>
	 * @deprecated use the safer methods {@link #ippAddResolution(com.sun.jna.ptr.PointerByReference, int, java.lang.String, int, int, int)} and {@link #ippAddResolution(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int, int, int)} instead
	 */
	@Deprecated 
	PointerByReference ippAddResolution(Pointer ipp, int group, Pointer name, int units, int xres, int yres);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddResolution(ipp_t*, ipp_tag_t, const char*, ipp_res_t, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:361</i>
	 */
	PointerByReference ippAddResolution(PointerByReference ipp, int group, String name, int units, int xres, int yres);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddResolution(ipp_t*, ipp_tag_t, const char*, ipp_res_t, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:361</i>
	 */
	PointerByReference ippAddResolution(PointerByReference ipp, int group, Pointer name, int units, int xres, int yres);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddResolutions(ipp_t*, ipp_tag_t, const char*, int, ipp_res_t, const int*, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:363</i><br>
	 * @deprecated use the safer methods {@link #ippAddResolutions(com.sun.jna.ptr.PointerByReference, int, java.lang.String, int, int, int[], int[])} and {@link #ippAddResolutions(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippAddResolutions(Pointer ipp, int group, Pointer name, int num_values, int units, IntByReference xres, IntByReference yres);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddResolutions(ipp_t*, ipp_tag_t, const char*, int, ipp_res_t, const int*, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:363</i>
	 */
	PointerByReference ippAddResolutions(PointerByReference ipp, int group, String name, int num_values, int units, int xres[], int yres[]);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddResolutions(ipp_t*, ipp_tag_t, const char*, int, ipp_res_t, const int*, const int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:363</i>
	 */
	PointerByReference ippAddResolutions(PointerByReference ipp, int group, Pointer name, int num_values, int units, IntByReference xres, IntByReference yres);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddSeparator(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:365</i><br>
	 * @deprecated use the safer method {@link #ippAddSeparator(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippAddSeparator(Pointer ipp);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddSeparator(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:365</i>
	 */
	PointerByReference ippAddSeparator(PointerByReference ipp);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddString(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:367</i><br>
	 * @deprecated use the safer methods {@link #ippAddString(com.sun.jna.ptr.PointerByReference, int, int, java.lang.String, java.lang.String, java.lang.String)} and {@link #ippAddString(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference ippAddString(Pointer ipp, int group, int value_tag, Pointer name, Pointer language, Pointer value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddString(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:367</i>
	 */
	PointerByReference ippAddString(PointerByReference ipp, int group, int value_tag, String name, String language, String value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddString(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:367</i>
	 */
	PointerByReference ippAddString(PointerByReference ipp, int group, int value_tag, Pointer name, Pointer language, Pointer value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddStrings(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int, const char*, const const char**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:369</i><br>
	 * @deprecated use the safer methods {@link #ippAddStrings(com.sun.jna.ptr.PointerByReference, int, int, java.lang.String, int, java.lang.String, java.lang.String[])} and {@link #ippAddStrings(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer, int, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippAddStrings(Pointer ipp, int group, int value_tag, Pointer name, int num_values, Pointer language, PointerByReference values);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddStrings(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int, const char*, const const char**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:369</i>
	 */
	PointerByReference ippAddStrings(PointerByReference ipp, int group, int value_tag, String name, int num_values, String language, String values[]);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddStrings(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, int, const char*, const const char**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:369</i>
	 */
	PointerByReference ippAddStrings(PointerByReference ipp, int group, int value_tag, Pointer name, int num_values, Pointer language, PointerByReference values);
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:371</i><br>
	 * Conversion Error : extern time_t (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * Original signature : <code>void ippDelete(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:373</i><br>
	 * @deprecated use the safer method {@link #ippDelete(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void ippDelete(Pointer ipp);
	/**
	 * Original signature : <code>void ippDelete(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:373</i>
	 */
	void ippDelete(PointerByReference ipp);
	/**
	 * Original signature : <code>char* ippErrorString(ipp_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:375</i>
	 */
	Pointer ippErrorString(int error);
	/**
	 * Original signature : <code>ipp_attribute_t* ippFindAttribute(ipp_t*, const char*, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:377</i><br>
	 * @deprecated use the safer methods {@link #ippFindAttribute(com.sun.jna.ptr.PointerByReference, java.lang.String, int)} and {@link #ippFindAttribute(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	PointerByReference ippFindAttribute(Pointer ipp, Pointer name, int value_tag);
	/**
	 * Original signature : <code>ipp_attribute_t* ippFindAttribute(ipp_t*, const char*, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:377</i>
	 */
	PointerByReference ippFindAttribute(PointerByReference ipp, String name, int value_tag);
	/**
	 * Original signature : <code>ipp_attribute_t* ippFindAttribute(ipp_t*, const char*, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:377</i>
	 */
	PointerByReference ippFindAttribute(PointerByReference ipp, Pointer name, int value_tag);
	/**
	 * Original signature : <code>ipp_attribute_t* ippFindNextAttribute(ipp_t*, const char*, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:379</i><br>
	 * @deprecated use the safer methods {@link #ippFindNextAttribute(com.sun.jna.ptr.PointerByReference, java.lang.String, int)} and {@link #ippFindNextAttribute(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	PointerByReference ippFindNextAttribute(Pointer ipp, Pointer name, int value_tag);
	/**
	 * Original signature : <code>ipp_attribute_t* ippFindNextAttribute(ipp_t*, const char*, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:379</i>
	 */
	PointerByReference ippFindNextAttribute(PointerByReference ipp, String name, int value_tag);
	/**
	 * Original signature : <code>ipp_attribute_t* ippFindNextAttribute(ipp_t*, const char*, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:379</i>
	 */
	PointerByReference ippFindNextAttribute(PointerByReference ipp, Pointer name, int value_tag);
	/**
	 * Original signature : <code>size_t ippLength(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:381</i><br>
	 * @deprecated use the safer method {@link #ippLength(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	NativeSize ippLength(Pointer ipp);
	/**
	 * Original signature : <code>size_t ippLength(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:381</i>
	 */
	NativeSize ippLength(PointerByReference ipp);
	/**
	 * Original signature : <code>ipp_t* ippNew()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:383</i>
	 */
	PointerByReference ippNew();
	/**
	 * Original signature : <code>ipp_state_t ippRead(http_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:385</i><br>
	 * @deprecated use the safer method {@link #ippRead(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippRead(Pointer http, Pointer ipp);
	/**
	 * Original signature : <code>ipp_state_t ippRead(http_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:385</i>
	 */
	int ippRead(PointerByReference http, PointerByReference ipp);
	/**
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:387</i><br>
	 * Conversion Error : time_t (Primitive without known type for this runtime: NativeTime)
	 */
	/**
	 * Original signature : <code>ipp_state_t ippWrite(http_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:389</i><br>
	 * @deprecated use the safer method {@link #ippWrite(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippWrite(Pointer http, Pointer ipp);
	/**
	 * Original signature : <code>ipp_state_t ippWrite(http_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:389</i>
	 */
	int ippWrite(PointerByReference http, PointerByReference ipp);
	/**
	 * Original signature : <code>int ippPort()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:391</i>
	 */
	int ippPort();
	/**
	 * Original signature : <code>void ippSetPort(int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:393</i>
	 */
	void ippSetPort(int p);
	/**
	 * New in CUPS 1.1.19 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddCollection(ipp_t*, ipp_tag_t, const char*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:398</i><br>
	 * @deprecated use the safer methods {@link #ippAddCollection(com.sun.jna.ptr.PointerByReference, int, java.lang.String, com.sun.jna.ptr.PointerByReference)} and {@link #ippAddCollection(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippAddCollection(Pointer ipp, int group, Pointer name, Pointer value);
	/**
	 * New in CUPS 1.1.19 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddCollection(ipp_t*, ipp_tag_t, const char*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:398</i>
	 */
	PointerByReference ippAddCollection(PointerByReference ipp, int group, String name, PointerByReference value);
	/**
	 * New in CUPS 1.1.19 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddCollection(ipp_t*, ipp_tag_t, const char*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:398</i>
	 */
	PointerByReference ippAddCollection(PointerByReference ipp, int group, Pointer name, PointerByReference value);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddCollections(ipp_t*, ipp_tag_t, const char*, int, const ipp_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:400</i><br>
	 * @deprecated use the safer methods {@link #ippAddCollections(com.sun.jna.ptr.PointerByReference, int, java.lang.String, int, com.sun.jna.ptr.PointerByReference)} and {@link #ippAddCollections(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippAddCollections(Pointer ipp, int group, Pointer name, int num_values, PointerByReference values);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddCollections(ipp_t*, ipp_tag_t, const char*, int, const ipp_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:400</i>
	 */
	PointerByReference ippAddCollections(PointerByReference ipp, int group, String name, int num_values, PointerByReference values);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddCollections(ipp_t*, ipp_tag_t, const char*, int, const ipp_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:400</i>
	 */
	PointerByReference ippAddCollections(PointerByReference ipp, int group, Pointer name, int num_values, PointerByReference values);
	/**
	 * Original signature : <code>void ippDeleteAttribute(ipp_t*, ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:402</i><br>
	 * @deprecated use the safer method {@link #ippDeleteAttribute(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void ippDeleteAttribute(Pointer ipp, Pointer attr);
	/**
	 * Original signature : <code>void ippDeleteAttribute(ipp_t*, ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:402</i>
	 */
	void ippDeleteAttribute(PointerByReference ipp, PointerByReference attr);
	/**
	 * Original signature : <code>ipp_state_t ippReadFile(int, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:404</i><br>
	 * @deprecated use the safer method {@link #ippReadFile(int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippReadFile(int fd, Pointer ipp);
	/**
	 * Original signature : <code>ipp_state_t ippReadFile(int, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:404</i>
	 */
	int ippReadFile(int fd, PointerByReference ipp);
	/**
	 * Original signature : <code>ipp_state_t ippWriteFile(int, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:406</i><br>
	 * @deprecated use the safer method {@link #ippWriteFile(int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippWriteFile(int fd, Pointer ipp);
	/**
	 * Original signature : <code>ipp_state_t ippWriteFile(int, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:406</i>
	 */
	int ippWriteFile(int fd, PointerByReference ipp);
	/**
	 * New in CUPS 1.2/OS X 10.5 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddOctetString(ipp_t*, ipp_tag_t, const char*, const void*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:411</i><br>
	 * @deprecated use the safer methods {@link #ippAddOctetString(com.sun.jna.ptr.PointerByReference, int, java.lang.String, com.sun.jna.Pointer, int)} and {@link #ippAddOctetString(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	PointerByReference ippAddOctetString(Pointer ipp, int group, Pointer name, Pointer data, int datalen);
	/**
	 * New in CUPS 1.2/OS X 10.5 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddOctetString(ipp_t*, ipp_tag_t, const char*, const void*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:411</i>
	 */
	PointerByReference ippAddOctetString(PointerByReference ipp, int group, String name, Pointer data, int datalen);
	/**
	 * New in CUPS 1.2/OS X 10.5 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddOctetString(ipp_t*, ipp_tag_t, const char*, const void*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:411</i>
	 */
	PointerByReference ippAddOctetString(PointerByReference ipp, int group, Pointer name, Pointer data, int datalen);
	/**
	 * Original signature : <code>ipp_status_t ippErrorValue(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:413</i><br>
	 * @deprecated use the safer methods {@link #ippErrorValue(java.lang.String)} and {@link #ippErrorValue(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippErrorValue(Pointer name);
	/**
	 * Original signature : <code>ipp_status_t ippErrorValue(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:413</i>
	 */
	int ippErrorValue(String name);
	/**
	 * Original signature : <code>ipp_t* ippNewRequest(ipp_op_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:415</i>
	 */
	PointerByReference ippNewRequest(int op);
	/**
	 * Original signature : <code>char* ippOpString(ipp_op_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:417</i>
	 */
	Pointer ippOpString(int op);
	/**
	 * Original signature : <code>ipp_op_t ippOpValue(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:419</i><br>
	 * @deprecated use the safer methods {@link #ippOpValue(java.lang.String)} and {@link #ippOpValue(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippOpValue(Pointer name);
	/**
	 * Original signature : <code>ipp_op_t ippOpValue(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:419</i>
	 */
	int ippOpValue(String name);
	/**
	 * Original signature : <code>ipp_state_t ippReadIO(void*, ipp_iocb_t, int, ipp_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:421</i><br>
	 * @deprecated use the safer method {@link #ippReadIO(com.sun.jna.Pointer, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.ipp_iocb_t, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippReadIO(Pointer src, MlRabidbeaverJnaLibrary.ipp_iocb_t cb, int blocking, Pointer parent, Pointer ipp);
	/**
	 * Original signature : <code>ipp_state_t ippReadIO(void*, ipp_iocb_t, int, ipp_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:421</i>
	 */
	int ippReadIO(Pointer src, MlRabidbeaverJnaLibrary.ipp_iocb_t cb, int blocking, PointerByReference parent, PointerByReference ipp);
	/**
	 * Original signature : <code>ipp_state_t ippWriteIO(void*, ipp_iocb_t, int, ipp_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:423</i><br>
	 * @deprecated use the safer method {@link #ippWriteIO(com.sun.jna.Pointer, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.ipp_iocb_t, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippWriteIO(Pointer dst, MlRabidbeaverJnaLibrary.ipp_iocb_t cb, int blocking, Pointer parent, Pointer ipp);
	/**
	 * Original signature : <code>ipp_state_t ippWriteIO(void*, ipp_iocb_t, int, ipp_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:423</i>
	 */
	int ippWriteIO(Pointer dst, MlRabidbeaverJnaLibrary.ipp_iocb_t cb, int blocking, PointerByReference parent, PointerByReference ipp);
	/**
	 * New in CUPS 1.4/OS X 10.6 ***<br>
	 * Original signature : <code>char* ippTagString(ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:428</i>
	 */
	Pointer ippTagString(int tag);
	/**
	 * Original signature : <code>ipp_tag_t ippTagValue(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:430</i><br>
	 * @deprecated use the safer methods {@link #ippTagValue(java.lang.String)} and {@link #ippTagValue(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippTagValue(Pointer name);
	/**
	 * Original signature : <code>ipp_tag_t ippTagValue(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:430</i>
	 */
	int ippTagValue(String name);
	/**
	 * New in CUPS 1.6/OS X 10.8 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddOutOfBand(ipp_t*, ipp_tag_t, ipp_tag_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:435</i><br>
	 * @deprecated use the safer methods {@link #ippAddOutOfBand(com.sun.jna.ptr.PointerByReference, int, int, java.lang.String)} and {@link #ippAddOutOfBand(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference ippAddOutOfBand(Pointer ipp, int group, int value_tag, Pointer name);
	/**
	 * New in CUPS 1.6/OS X 10.8 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddOutOfBand(ipp_t*, ipp_tag_t, ipp_tag_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:435</i>
	 */
	PointerByReference ippAddOutOfBand(PointerByReference ipp, int group, int value_tag, String name);
	/**
	 * New in CUPS 1.6/OS X 10.8 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddOutOfBand(ipp_t*, ipp_tag_t, ipp_tag_t, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:435</i>
	 */
	PointerByReference ippAddOutOfBand(PointerByReference ipp, int group, int value_tag, Pointer name);
	/**
	 * Original signature : <code>size_t ippAttributeString(ipp_attribute_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:437</i><br>
	 * @deprecated use the safer methods {@link #ippAttributeString(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #ippAttributeString(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	NativeSize ippAttributeString(Pointer attr, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>size_t ippAttributeString(ipp_attribute_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:437</i>
	 */
	NativeSize ippAttributeString(PointerByReference attr, ByteBuffer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>size_t ippAttributeString(ipp_attribute_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:437</i>
	 */
	NativeSize ippAttributeString(PointerByReference attr, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>ipp_attribute_t* ippCopyAttribute(ipp_t*, ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:439</i><br>
	 * @deprecated use the safer method {@link #ippCopyAttribute(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference ippCopyAttribute(Pointer dst, Pointer attr, int quickcopy);
	/**
	 * Original signature : <code>ipp_attribute_t* ippCopyAttribute(ipp_t*, ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:439</i>
	 */
	PointerByReference ippCopyAttribute(PointerByReference dst, PointerByReference attr, int quickcopy);
	/**
	 * Original signature : <code>int ippCopyAttributes(ipp_t*, ipp_t*, int, ipp_copycb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:441</i><br>
	 * @deprecated use the safer method {@link #ippCopyAttributes(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.ipp_copycb_t, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippCopyAttributes(Pointer dst, Pointer src, int quickcopy, MlRabidbeaverJnaLibrary.ipp_copycb_t cb, Pointer context);
	/**
	 * Original signature : <code>int ippCopyAttributes(ipp_t*, ipp_t*, int, ipp_copycb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:441</i>
	 */
	int ippCopyAttributes(PointerByReference dst, PointerByReference src, int quickcopy, MlRabidbeaverJnaLibrary.ipp_copycb_t cb, Pointer context);
	/**
	 * Original signature : <code>int ippDeleteValues(ipp_t*, ipp_attribute_t**, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:443</i><br>
	 * @deprecated use the safer method {@link #ippDeleteValues(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	int ippDeleteValues(Pointer ipp, PointerByReference attr, int element, int count);
	/**
	 * Original signature : <code>int ippDeleteValues(ipp_t*, ipp_attribute_t**, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:443</i>
	 */
	int ippDeleteValues(PointerByReference ipp, PointerByReference attr, int element, int count);
	/**
	 * Original signature : <code>char* ippEnumString(const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:445</i><br>
	 * @deprecated use the safer methods {@link #ippEnumString(java.lang.String, int)} and {@link #ippEnumString(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer ippEnumString(Pointer attrname, int enumvalue);
	/**
	 * Original signature : <code>char* ippEnumString(const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:445</i>
	 */
	Pointer ippEnumString(String attrname, int enumvalue);
	/**
	 * Original signature : <code>int ippEnumValue(const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:447</i><br>
	 * @deprecated use the safer methods {@link #ippEnumValue(java.lang.String, java.lang.String)} and {@link #ippEnumValue(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippEnumValue(Pointer attrname, Pointer enumstring);
	/**
	 * Original signature : <code>int ippEnumValue(const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:447</i>
	 */
	int ippEnumValue(String attrname, String enumstring);
	/**
	 * Original signature : <code>ipp_attribute_t* ippFirstAttribute(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:449</i><br>
	 * @deprecated use the safer method {@link #ippFirstAttribute(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippFirstAttribute(Pointer ipp);
	/**
	 * Original signature : <code>ipp_attribute_t* ippFirstAttribute(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:449</i>
	 */
	PointerByReference ippFirstAttribute(PointerByReference ipp);
	/**
	 * Original signature : <code>int ippGetBoolean(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:451</i><br>
	 * @deprecated use the safer method {@link #ippGetBoolean(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippGetBoolean(Pointer attr, int element);
	/**
	 * Original signature : <code>int ippGetBoolean(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:451</i>
	 */
	int ippGetBoolean(PointerByReference attr, int element);
	/**
	 * Original signature : <code>ipp_t* ippGetCollection(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:453</i><br>
	 * @deprecated use the safer method {@link #ippGetCollection(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	PointerByReference ippGetCollection(Pointer attr, int element);
	/**
	 * Original signature : <code>ipp_t* ippGetCollection(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:453</i>
	 */
	PointerByReference ippGetCollection(PointerByReference attr, int element);
	/**
	 * Original signature : <code>int ippGetCount(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:455</i><br>
	 * @deprecated use the safer method {@link #ippGetCount(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippGetCount(Pointer attr);
	/**
	 * Original signature : <code>int ippGetCount(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:455</i>
	 */
	int ippGetCount(PointerByReference attr);
	/**
	 * Original signature : <code>ipp_uchar_t* ippGetDate(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:457</i><br>
	 * @deprecated use the safer method {@link #ippGetDate(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	Pointer ippGetDate(Pointer attr, int element);
	/**
	 * Original signature : <code>ipp_uchar_t* ippGetDate(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:457</i>
	 */
	Pointer ippGetDate(PointerByReference attr, int element);
	/**
	 * Original signature : <code>ipp_tag_t ippGetGroupTag(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:459</i><br>
	 * @deprecated use the safer method {@link #ippGetGroupTag(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippGetGroupTag(Pointer attr);
	/**
	 * Original signature : <code>ipp_tag_t ippGetGroupTag(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:459</i>
	 */
	int ippGetGroupTag(PointerByReference attr);
	/**
	 * Original signature : <code>int ippGetInteger(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:461</i><br>
	 * @deprecated use the safer method {@link #ippGetInteger(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippGetInteger(Pointer attr, int element);
	/**
	 * Original signature : <code>int ippGetInteger(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:461</i>
	 */
	int ippGetInteger(PointerByReference attr, int element);
	/**
	 * Original signature : <code>char* ippGetName(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:463</i><br>
	 * @deprecated use the safer method {@link #ippGetName(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer ippGetName(Pointer attr);
	/**
	 * Original signature : <code>char* ippGetName(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:463</i>
	 */
	Pointer ippGetName(PointerByReference attr);
	/**
	 * Original signature : <code>ipp_op_t ippGetOperation(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:465</i><br>
	 * @deprecated use the safer method {@link #ippGetOperation(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippGetOperation(Pointer ipp);
	/**
	 * Original signature : <code>ipp_op_t ippGetOperation(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:465</i>
	 */
	int ippGetOperation(PointerByReference ipp);
	/**
	 * Original signature : <code>int ippGetRange(ipp_attribute_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:467</i><br>
	 * @deprecated use the safer methods {@link #ippGetRange(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer)} and {@link #ippGetRange(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int ippGetRange(Pointer attr, int element, IntByReference upper);
	/**
	 * Original signature : <code>int ippGetRange(ipp_attribute_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:467</i>
	 */
	int ippGetRange(PointerByReference attr, int element, IntBuffer upper);
	/**
	 * Original signature : <code>int ippGetRange(ipp_attribute_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:467</i>
	 */
	int ippGetRange(PointerByReference attr, int element, IntByReference upper);
	/**
	 * Original signature : <code>int ippGetRequestId(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:469</i><br>
	 * @deprecated use the safer method {@link #ippGetRequestId(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippGetRequestId(Pointer ipp);
	/**
	 * Original signature : <code>int ippGetRequestId(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:469</i>
	 */
	int ippGetRequestId(PointerByReference ipp);
	/**
	 * Original signature : <code>int ippGetResolution(ipp_attribute_t*, int, int*, ipp_res_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:471</i><br>
	 * @deprecated use the safer methods {@link #ippGetResolution(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer, java.nio.IntBuffer)} and {@link #ippGetResolution(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int ippGetResolution(Pointer attr, int element, IntByReference yres, IntByReference units);
	/**
	 * Original signature : <code>int ippGetResolution(ipp_attribute_t*, int, int*, ipp_res_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:471</i>
	 */
	int ippGetResolution(PointerByReference attr, int element, IntBuffer yres, IntBuffer units);
	/**
	 * Original signature : <code>int ippGetResolution(ipp_attribute_t*, int, int*, ipp_res_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:471</i>
	 */
	int ippGetResolution(PointerByReference attr, int element, IntByReference yres, IntByReference units);
	/**
	 * Original signature : <code>ipp_state_t ippGetState(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:473</i><br>
	 * @deprecated use the safer method {@link #ippGetState(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippGetState(Pointer ipp);
	/**
	 * Original signature : <code>ipp_state_t ippGetState(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:473</i>
	 */
	int ippGetState(PointerByReference ipp);
	/**
	 * Original signature : <code>ipp_status_t ippGetStatusCode(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:475</i><br>
	 * @deprecated use the safer method {@link #ippGetStatusCode(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippGetStatusCode(Pointer ipp);
	/**
	 * Original signature : <code>ipp_status_t ippGetStatusCode(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:475</i>
	 */
	int ippGetStatusCode(PointerByReference ipp);
	/**
	 * Original signature : <code>char* ippGetString(ipp_attribute_t*, int, const char**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:477</i><br>
	 * @deprecated use the safer methods {@link #ippGetString(com.sun.jna.ptr.PointerByReference, int, java.lang.String[])} and {@link #ippGetString(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer ippGetString(Pointer attr, int element, PointerByReference language);
	/**
	 * Original signature : <code>char* ippGetString(ipp_attribute_t*, int, const char**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:477</i>
	 */
	Pointer ippGetString(PointerByReference attr, int element, String language[]);
	/**
	 * Original signature : <code>char* ippGetString(ipp_attribute_t*, int, const char**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:477</i>
	 */
	Pointer ippGetString(PointerByReference attr, int element, PointerByReference language);
	/**
	 * Original signature : <code>ipp_tag_t ippGetValueTag(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:479</i><br>
	 * @deprecated use the safer method {@link #ippGetValueTag(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippGetValueTag(Pointer attr);
	/**
	 * Original signature : <code>ipp_tag_t ippGetValueTag(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:479</i>
	 */
	int ippGetValueTag(PointerByReference attr);
	/**
	 * Original signature : <code>int ippGetVersion(ipp_t*, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:481</i><br>
	 * @deprecated use the safer methods {@link #ippGetVersion(com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #ippGetVersion(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int ippGetVersion(Pointer ipp, IntByReference minor);
	/**
	 * Original signature : <code>int ippGetVersion(ipp_t*, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:481</i>
	 */
	int ippGetVersion(PointerByReference ipp, IntBuffer minor);
	/**
	 * Original signature : <code>int ippGetVersion(ipp_t*, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:481</i>
	 */
	int ippGetVersion(PointerByReference ipp, IntByReference minor);
	/**
	 * Original signature : <code>ipp_attribute_t* ippNextAttribute(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:483</i><br>
	 * @deprecated use the safer method {@link #ippNextAttribute(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippNextAttribute(Pointer ipp);
	/**
	 * Original signature : <code>ipp_attribute_t* ippNextAttribute(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:483</i>
	 */
	PointerByReference ippNextAttribute(PointerByReference ipp);
	/**
	 * Original signature : <code>int ippSetBoolean(ipp_t*, ipp_attribute_t**, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:485</i><br>
	 * @deprecated use the safer method {@link #ippSetBoolean(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	int ippSetBoolean(Pointer ipp, PointerByReference attr, int element, int boolvalue);
	/**
	 * Original signature : <code>int ippSetBoolean(ipp_t*, ipp_attribute_t**, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:485</i>
	 */
	int ippSetBoolean(PointerByReference ipp, PointerByReference attr, int element, int boolvalue);
	/**
	 * Original signature : <code>int ippSetCollection(ipp_t*, ipp_attribute_t**, int, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:487</i><br>
	 * @deprecated use the safer method {@link #ippSetCollection(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippSetCollection(Pointer ipp, PointerByReference attr, int element, Pointer colvalue);
	/**
	 * Original signature : <code>int ippSetCollection(ipp_t*, ipp_attribute_t**, int, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:487</i>
	 */
	int ippSetCollection(PointerByReference ipp, PointerByReference attr, int element, PointerByReference colvalue);
	/**
	 * Original signature : <code>int ippSetDate(ipp_t*, ipp_attribute_t**, int, const ipp_uchar_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:489</i><br>
	 * @deprecated use the safer methods {@link #ippSetDate(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, java.nio.ByteBuffer)} and {@link #ippSetDate(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippSetDate(Pointer ipp, PointerByReference attr, int element, Pointer datevalue);
	/**
	 * Original signature : <code>int ippSetDate(ipp_t*, ipp_attribute_t**, int, const ipp_uchar_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:489</i>
	 */
	int ippSetDate(PointerByReference ipp, PointerByReference attr, int element, ByteBuffer datevalue);
	/**
	 * Original signature : <code>int ippSetDate(ipp_t*, ipp_attribute_t**, int, const ipp_uchar_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:489</i>
	 */
	int ippSetDate(PointerByReference ipp, PointerByReference attr, int element, Pointer datevalue);
	/**
	 * Original signature : <code>int ippSetGroupTag(ipp_t*, ipp_attribute_t**, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:491</i><br>
	 * @deprecated use the safer method {@link #ippSetGroupTag(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippSetGroupTag(Pointer ipp, PointerByReference attr, int group_tag);
	/**
	 * Original signature : <code>int ippSetGroupTag(ipp_t*, ipp_attribute_t**, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:491</i>
	 */
	int ippSetGroupTag(PointerByReference ipp, PointerByReference attr, int group_tag);
	/**
	 * Original signature : <code>int ippSetInteger(ipp_t*, ipp_attribute_t**, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:493</i><br>
	 * @deprecated use the safer method {@link #ippSetInteger(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	int ippSetInteger(Pointer ipp, PointerByReference attr, int element, int intvalue);
	/**
	 * Original signature : <code>int ippSetInteger(ipp_t*, ipp_attribute_t**, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:493</i>
	 */
	int ippSetInteger(PointerByReference ipp, PointerByReference attr, int element, int intvalue);
	/**
	 * Original signature : <code>int ippSetName(ipp_t*, ipp_attribute_t**, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:495</i><br>
	 * @deprecated use the safer methods {@link #ippSetName(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #ippSetName(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippSetName(Pointer ipp, PointerByReference attr, Pointer name);
	/**
	 * Original signature : <code>int ippSetName(ipp_t*, ipp_attribute_t**, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:495</i>
	 */
	int ippSetName(PointerByReference ipp, PointerByReference attr, String name);
	/**
	 * Original signature : <code>int ippSetName(ipp_t*, ipp_attribute_t**, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:495</i>
	 */
	int ippSetName(PointerByReference ipp, PointerByReference attr, Pointer name);
	/**
	 * Original signature : <code>int ippSetOperation(ipp_t*, ipp_op_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:497</i><br>
	 * @deprecated use the safer method {@link #ippSetOperation(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippSetOperation(Pointer ipp, int op);
	/**
	 * Original signature : <code>int ippSetOperation(ipp_t*, ipp_op_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:497</i>
	 */
	int ippSetOperation(PointerByReference ipp, int op);
	/**
	 * Original signature : <code>int ippSetRange(ipp_t*, ipp_attribute_t**, int, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:499</i><br>
	 * @deprecated use the safer method {@link #ippSetRange(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, int, int)} instead
	 */
	@Deprecated 
	int ippSetRange(Pointer ipp, PointerByReference attr, int element, int lowervalue, int uppervalue);
	/**
	 * Original signature : <code>int ippSetRange(ipp_t*, ipp_attribute_t**, int, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:499</i>
	 */
	int ippSetRange(PointerByReference ipp, PointerByReference attr, int element, int lowervalue, int uppervalue);
	/**
	 * Original signature : <code>int ippSetRequestId(ipp_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:501</i><br>
	 * @deprecated use the safer method {@link #ippSetRequestId(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippSetRequestId(Pointer ipp, int request_id);
	/**
	 * Original signature : <code>int ippSetRequestId(ipp_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:501</i>
	 */
	int ippSetRequestId(PointerByReference ipp, int request_id);
	/**
	 * Original signature : <code>int ippSetResolution(ipp_t*, ipp_attribute_t**, int, ipp_res_t, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:503</i><br>
	 * @deprecated use the safer method {@link #ippSetResolution(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, int, int, int)} instead
	 */
	@Deprecated 
	int ippSetResolution(Pointer ipp, PointerByReference attr, int element, int unitsvalue, int xresvalue, int yresvalue);
	/**
	 * Original signature : <code>int ippSetResolution(ipp_t*, ipp_attribute_t**, int, ipp_res_t, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:503</i>
	 */
	int ippSetResolution(PointerByReference ipp, PointerByReference attr, int element, int unitsvalue, int xresvalue, int yresvalue);
	/**
	 * Original signature : <code>int ippSetState(ipp_t*, ipp_state_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:505</i><br>
	 * @deprecated use the safer method {@link #ippSetState(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippSetState(Pointer ipp, int state);
	/**
	 * Original signature : <code>int ippSetState(ipp_t*, ipp_state_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:505</i>
	 */
	int ippSetState(PointerByReference ipp, int state);
	/**
	 * Original signature : <code>int ippSetStatusCode(ipp_t*, ipp_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:507</i><br>
	 * @deprecated use the safer method {@link #ippSetStatusCode(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippSetStatusCode(Pointer ipp, int status);
	/**
	 * Original signature : <code>int ippSetStatusCode(ipp_t*, ipp_status_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:507</i>
	 */
	int ippSetStatusCode(PointerByReference ipp, int status);
	/**
	 * Original signature : <code>int ippSetString(ipp_t*, ipp_attribute_t**, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:509</i><br>
	 * @deprecated use the safer methods {@link #ippSetString(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, java.lang.String)} and {@link #ippSetString(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippSetString(Pointer ipp, PointerByReference attr, int element, Pointer strvalue);
	/**
	 * Original signature : <code>int ippSetString(ipp_t*, ipp_attribute_t**, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:509</i>
	 */
	int ippSetString(PointerByReference ipp, PointerByReference attr, int element, String strvalue);
	/**
	 * Original signature : <code>int ippSetString(ipp_t*, ipp_attribute_t**, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:509</i>
	 */
	int ippSetString(PointerByReference ipp, PointerByReference attr, int element, Pointer strvalue);
	/**
	 * Original signature : <code>int ippSetValueTag(ipp_t*, ipp_attribute_t**, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:511</i><br>
	 * @deprecated use the safer method {@link #ippSetValueTag(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippSetValueTag(Pointer ipp, PointerByReference attr, int value_tag);
	/**
	 * Original signature : <code>int ippSetValueTag(ipp_t*, ipp_attribute_t**, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:511</i>
	 */
	int ippSetValueTag(PointerByReference ipp, PointerByReference attr, int value_tag);
	/**
	 * Original signature : <code>int ippSetVersion(ipp_t*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:513</i><br>
	 * @deprecated use the safer method {@link #ippSetVersion(com.sun.jna.ptr.PointerByReference, int, int)} instead
	 */
	@Deprecated 
	int ippSetVersion(Pointer ipp, int major, int minor);
	/**
	 * Original signature : <code>int ippSetVersion(ipp_t*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:513</i>
	 */
	int ippSetVersion(PointerByReference ipp, int major, int minor);
	/**
	 * New in CUPS 1.7 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddStringf(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:518</i><br>
	 * @deprecated use the safer methods {@link #ippAddStringf(com.sun.jna.ptr.PointerByReference, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)} and {@link #ippAddStringf(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	PointerByReference ippAddStringf(Pointer ipp, int group, int value_tag, Pointer name, Pointer language, Pointer format, Object... varArgs1);
	/**
	 * New in CUPS 1.7 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddStringf(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:518</i>
	 */
	PointerByReference ippAddStringf(PointerByReference ipp, int group, int value_tag, String name, String language, String format, Object... varArgs1);
	/**
	 * New in CUPS 1.7 ***<br>
	 * Original signature : <code>ipp_attribute_t* ippAddStringf(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:518</i>
	 */
	PointerByReference ippAddStringf(PointerByReference ipp, int group, int value_tag, Pointer name, Pointer language, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddStringfv(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*, va_list)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:520</i><br>
	 * @deprecated use the safer methods {@link #ippAddStringfv(com.sun.jna.ptr.PointerByReference, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)} and {@link #ippAddStringfv(com.sun.jna.ptr.PointerByReference, int, int, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	PointerByReference ippAddStringfv(Pointer ipp, int group, int value_tag, Pointer name, Pointer language, Pointer format, Object... ap);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddStringfv(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*, va_list)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:520</i>
	 */
	PointerByReference ippAddStringfv(PointerByReference ipp, int group, int value_tag, String name, String language, String format, Object... ap);
	/**
	 * Original signature : <code>ipp_attribute_t* ippAddStringfv(ipp_t*, ipp_tag_t, ipp_tag_t, const char*, const char*, const char*, va_list)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:520</i>
	 */
	PointerByReference ippAddStringfv(PointerByReference ipp, int group, int value_tag, Pointer name, Pointer language, Pointer format, Object... ap);
	/**
	 * Original signature : <code>int ippContainsInteger(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:522</i><br>
	 * @deprecated use the safer method {@link #ippContainsInteger(com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int ippContainsInteger(Pointer attr, int value);
	/**
	 * Original signature : <code>int ippContainsInteger(ipp_attribute_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:522</i>
	 */
	int ippContainsInteger(PointerByReference attr, int value);
	/**
	 * Original signature : <code>int ippContainsString(ipp_attribute_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:524</i><br>
	 * @deprecated use the safer methods {@link #ippContainsString(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #ippContainsString(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int ippContainsString(Pointer attr, Pointer value);
	/**
	 * Original signature : <code>int ippContainsString(ipp_attribute_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:524</i>
	 */
	int ippContainsString(PointerByReference attr, String value);
	/**
	 * Original signature : <code>int ippContainsString(ipp_attribute_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:524</i>
	 */
	int ippContainsString(PointerByReference attr, Pointer value);
	/**
	 * Original signature : <code>cups_array_t* ippCreateRequestedArray(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:526</i><br>
	 * @deprecated use the safer method {@link #ippCreateRequestedArray(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippCreateRequestedArray(Pointer request);
	/**
	 * Original signature : <code>cups_array_t* ippCreateRequestedArray(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:526</i>
	 */
	PointerByReference ippCreateRequestedArray(PointerByReference request);
	/**
	 * Original signature : <code>void* ippGetOctetString(ipp_attribute_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:528</i><br>
	 * @deprecated use the safer methods {@link #ippGetOctetString(com.sun.jna.ptr.PointerByReference, int, java.nio.IntBuffer)} and {@link #ippGetOctetString(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	Pointer ippGetOctetString(Pointer attr, int element, IntByReference datalen);
	/**
	 * Original signature : <code>void* ippGetOctetString(ipp_attribute_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:528</i>
	 */
	Pointer ippGetOctetString(PointerByReference attr, int element, IntBuffer datalen);
	/**
	 * Original signature : <code>void* ippGetOctetString(ipp_attribute_t*, int, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:528</i>
	 */
	Pointer ippGetOctetString(PointerByReference attr, int element, IntByReference datalen);
	/**
	 * Original signature : <code>ipp_t* ippNewResponse(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:530</i><br>
	 * @deprecated use the safer method {@link #ippNewResponse(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	PointerByReference ippNewResponse(Pointer request);
	/**
	 * Original signature : <code>ipp_t* ippNewResponse(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:530</i>
	 */
	PointerByReference ippNewResponse(PointerByReference request);
	/**
	 * Original signature : <code>int ippSetOctetString(ipp_t*, ipp_attribute_t**, int, const void*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:532</i><br>
	 * @deprecated use the safer method {@link #ippSetOctetString(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int ippSetOctetString(Pointer ipp, PointerByReference attr, int element, Pointer data, int datalen);
	/**
	 * Original signature : <code>int ippSetOctetString(ipp_t*, ipp_attribute_t**, int, const void*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:532</i>
	 */
	int ippSetOctetString(PointerByReference ipp, PointerByReference attr, int element, Pointer data, int datalen);
	/**
	 * Original signature : <code>int ippSetStringf(ipp_t*, ipp_attribute_t**, int, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:534</i><br>
	 * @deprecated use the safer methods {@link #ippSetStringf(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.lang.Object)} and {@link #ippSetStringf(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int ippSetStringf(Pointer ipp, PointerByReference attr, int element, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>int ippSetStringf(ipp_t*, ipp_attribute_t**, int, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:534</i>
	 */
	int ippSetStringf(PointerByReference ipp, PointerByReference attr, int element, String format, Object... varArgs1);
	/**
	 * Original signature : <code>int ippSetStringf(ipp_t*, ipp_attribute_t**, int, const char*, null)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:534</i>
	 */
	int ippSetStringf(PointerByReference ipp, PointerByReference attr, int element, Pointer format, Object... varArgs1);
	/**
	 * Original signature : <code>int ippSetStringfv(ipp_t*, ipp_attribute_t**, int, const char*, va_list)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:536</i><br>
	 * @deprecated use the safer methods {@link #ippSetStringfv(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.lang.Object)} and {@link #ippSetStringfv(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	@Deprecated 
	int ippSetStringfv(Pointer ipp, PointerByReference attr, int element, Pointer format, Object... ap);
	/**
	 * Original signature : <code>int ippSetStringfv(ipp_t*, ipp_attribute_t**, int, const char*, va_list)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:536</i>
	 */
	int ippSetStringfv(PointerByReference ipp, PointerByReference attr, int element, String format, Object... ap);
	/**
	 * Original signature : <code>int ippSetStringfv(ipp_t*, ipp_attribute_t**, int, const char*, va_list)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:536</i>
	 */
	int ippSetStringfv(PointerByReference ipp, PointerByReference attr, int element, Pointer format, Object... ap);
	/**
	 * Original signature : <code>int ippValidateAttribute(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:538</i><br>
	 * @deprecated use the safer method {@link #ippValidateAttribute(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippValidateAttribute(Pointer attr);
	/**
	 * Original signature : <code>int ippValidateAttribute(ipp_attribute_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:538</i>
	 */
	int ippValidateAttribute(PointerByReference attr);
	/**
	 * Original signature : <code>int ippValidateAttributes(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:540</i><br>
	 * @deprecated use the safer method {@link #ippValidateAttributes(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int ippValidateAttributes(Pointer ipp);
	/**
	 * Original signature : <code>int ippValidateAttributes(ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:540</i>
	 */
	int ippValidateAttributes(PointerByReference ipp);
	/**
	 * New in CUPS 2.0 ***<br>
	 * Original signature : <code>char* ippStateString(ipp_state_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/ipp.h:545</i>
	 */
	Pointer ippStateString(int state);
	/**
	 * Prototypes...<br>
	 * Original signature : <code>cups_lang_t* cupsLangDefault()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:59</i>
	 */
	cups_lang_s cupsLangDefault();
	/**
	 * Original signature : <code>char* cupsLangEncoding(cups_lang_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:61</i>
	 */
	Pointer cupsLangEncoding(cups_lang_s lang);
	/**
	 * Original signature : <code>void cupsLangFlush()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:63</i>
	 */
	void cupsLangFlush();
	/**
	 * Original signature : <code>void cupsLangFree(cups_lang_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:65</i>
	 */
	void cupsLangFree(cups_lang_s lang);
	/**
	 * Original signature : <code>cups_lang_t* cupsLangGet(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:67</i><br>
	 * @deprecated use the safer methods {@link #cupsLangGet(java.lang.String)} and {@link #cupsLangGet(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	cups_lang_s cupsLangGet(Pointer language);
	/**
	 * Original signature : <code>cups_lang_t* cupsLangGet(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/language.h:67</i>
	 */
	cups_lang_s cupsLangGet(String language);
	/**
	 * Functions...<br>
	 * Original signature : <code>int pwgFormatSizeName(char*, size_t, const char*, const char*, int, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:26</i><br>
	 * @deprecated use the safer methods {@link #pwgFormatSizeName(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, java.lang.String, java.lang.String, int, int, java.lang.String)} and {@link #pwgFormatSizeName(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.sun.jna.Pointer, int, int, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int pwgFormatSizeName(Pointer keyword, NativeSize keysize, Pointer prefix, Pointer name, int width, int length, Pointer units);
	/**
	 * Functions...<br>
	 * Original signature : <code>int pwgFormatSizeName(char*, size_t, const char*, const char*, int, int, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:26</i>
	 */
	int pwgFormatSizeName(ByteBuffer keyword, NativeSize keysize, String prefix, String name, int width, int length, String units);
	/**
	 * Original signature : <code>int pwgInitSize(pwg_size_t*, ipp_t*, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:28</i><br>
	 * @deprecated use the safer methods {@link #pwgInitSize(ml.rabidbeaver.jna.pwg_size_s, com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer)} and {@link #pwgInitSize(ml.rabidbeaver.jna.pwg_size_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference)} instead
	 */
	@Deprecated 
	int pwgInitSize(pwg_size_s size, Pointer job, IntByReference margins_set);
	/**
	 * Original signature : <code>int pwgInitSize(pwg_size_t*, ipp_t*, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:28</i>
	 */
	int pwgInitSize(pwg_size_s size, PointerByReference job, IntBuffer margins_set);
	/**
	 * Original signature : <code>int pwgInitSize(pwg_size_t*, ipp_t*, int*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:28</i>
	 */
	int pwgInitSize(pwg_size_s size, PointerByReference job, IntByReference margins_set);
	/**
	 * Original signature : <code>pwg_media_t* pwgMediaForLegacy(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:30</i><br>
	 * @deprecated use the safer methods {@link #pwgMediaForLegacy(java.lang.String)} and {@link #pwgMediaForLegacy(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	pwg_media_s pwgMediaForLegacy(Pointer legacy);
	/**
	 * Original signature : <code>pwg_media_t* pwgMediaForLegacy(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:30</i>
	 */
	pwg_media_s pwgMediaForLegacy(String legacy);
	/**
	 * Original signature : <code>pwg_media_t* pwgMediaForPPD(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:32</i><br>
	 * @deprecated use the safer methods {@link #pwgMediaForPPD(java.lang.String)} and {@link #pwgMediaForPPD(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	pwg_media_s pwgMediaForPPD(Pointer ppd);
	/**
	 * Original signature : <code>pwg_media_t* pwgMediaForPPD(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:32</i>
	 */
	pwg_media_s pwgMediaForPPD(String ppd);
	/**
	 * Original signature : <code>pwg_media_t* pwgMediaForPWG(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:34</i><br>
	 * @deprecated use the safer methods {@link #pwgMediaForPWG(java.lang.String)} and {@link #pwgMediaForPWG(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	pwg_media_s pwgMediaForPWG(Pointer pwg);
	/**
	 * Original signature : <code>pwg_media_t* pwgMediaForPWG(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:34</i>
	 */
	pwg_media_s pwgMediaForPWG(String pwg);
	/**
	 * Original signature : <code>pwg_media_t* pwgMediaForSize(int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/pwg.h:36</i>
	 */
	pwg_media_s pwgMediaForSize(int width, int length);
	/**
	 * Functions...<br>
	 * Original signature : <code>int cupsCancelJob(const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:94</i><br>
	 * @deprecated use the safer methods {@link #cupsCancelJob(java.lang.String, int)} and {@link #cupsCancelJob(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int cupsCancelJob(Pointer name, int job_id);
	/**
	 * Functions...<br>
	 * Original signature : <code>int cupsCancelJob(const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:94</i>
	 */
	int cupsCancelJob(String name, int job_id);
	/**
	 * Original signature : <code>ipp_t* cupsDoFileRequest(http_t*, ipp_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:96</i><br>
	 * @deprecated use the safer methods {@link #cupsDoFileRequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsDoFileRequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsDoFileRequest(Pointer http, Pointer request, Pointer resource, Pointer filename);
	/**
	 * Original signature : <code>ipp_t* cupsDoFileRequest(http_t*, ipp_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:96</i>
	 */
	PointerByReference cupsDoFileRequest(PointerByReference http, PointerByReference request, String resource, String filename);
	/**
	 * Original signature : <code>ipp_t* cupsDoFileRequest(http_t*, ipp_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:96</i>
	 */
	PointerByReference cupsDoFileRequest(PointerByReference http, PointerByReference request, Pointer resource, Pointer filename);
	/**
	 * Original signature : <code>ipp_t* cupsDoRequest(http_t*, ipp_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:98</i><br>
	 * @deprecated use the safer methods {@link #cupsDoRequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsDoRequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsDoRequest(Pointer http, Pointer request, Pointer resource);
	/**
	 * Original signature : <code>ipp_t* cupsDoRequest(http_t*, ipp_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:98</i>
	 */
	PointerByReference cupsDoRequest(PointerByReference http, PointerByReference request, String resource);
	/**
	 * Original signature : <code>ipp_t* cupsDoRequest(http_t*, ipp_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:98</i>
	 */
	PointerByReference cupsDoRequest(PointerByReference http, PointerByReference request, Pointer resource);
	/**
	 * Original signature : <code>http_encryption_t cupsEncryption()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:100</i>
	 */
	int cupsEncryption();
	/**
	 * Original signature : <code>void cupsFreeJobs(int, cups_job_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:102</i>
	 */
	void cupsFreeJobs(int num_jobs, cups_job_s jobs);
	/**
	 * Original signature : <code>int cupsGetClasses(char***)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:104</i>
	 */
	int cupsGetClasses(PointerByReference classes);
	/**
	 * Original signature : <code>char* cupsGetDefault()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:106</i>
	 */
	Pointer cupsGetDefault();
	/**
	 * Original signature : <code>int cupsGetJobs(cups_job_t**, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:108</i><br>
	 * @deprecated use the safer methods {@link #cupsGetJobs(ml.rabidbeaver.jna.cups_job_s.ByReference[], java.lang.String, int, int)} and {@link #cupsGetJobs(ml.rabidbeaver.jna.cups_job_s.ByReference[], com.sun.jna.Pointer, int, int)} instead
	 */
	@Deprecated 
	int cupsGetJobs(PointerByReference jobs, Pointer name, int myjobs, int whichjobs);
	/**
	 * Original signature : <code>int cupsGetJobs(cups_job_t**, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:108</i>
	 */
	int cupsGetJobs(cups_job_s.ByReference jobs[], String name, int myjobs, int whichjobs);
	/**
	 * Original signature : <code>int cupsGetJobs(cups_job_t**, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:108</i>
	 */
	int cupsGetJobs(cups_job_s.ByReference jobs[], Pointer name, int myjobs, int whichjobs);
	/**
	 * Original signature : <code>char* cupsGetPPD(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:110</i><br>
	 * @deprecated use the safer methods {@link #cupsGetPPD(java.lang.String)} and {@link #cupsGetPPD(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer cupsGetPPD(Pointer name);
	/**
	 * Original signature : <code>char* cupsGetPPD(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:110</i>
	 */
	Pointer cupsGetPPD(String name);
	/**
	 * Original signature : <code>int cupsGetPrinters(char***)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:112</i>
	 */
	int cupsGetPrinters(PointerByReference printers);
	/**
	 * Original signature : <code>ipp_status_t cupsLastError()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:114</i>
	 */
	int cupsLastError();
	/**
	 * Original signature : <code>int cupsPrintFile(const char*, const char*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:116</i><br>
	 * @deprecated use the safer methods {@link #cupsPrintFile(java.lang.String, java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_option_s)} and {@link #cupsPrintFile(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s)} instead
	 */
	@Deprecated 
	int cupsPrintFile(Pointer name, Pointer filename, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsPrintFile(const char*, const char*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:116</i>
	 */
	int cupsPrintFile(String name, String filename, String title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsPrintFiles(const char*, int, const char**, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:118</i><br>
	 * @deprecated use the safer methods {@link #cupsPrintFiles(java.lang.String, int, java.lang.String[], java.lang.String, int, ml.rabidbeaver.jna.cups_option_s)} and {@link #cupsPrintFiles(com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s)} instead
	 */
	@Deprecated 
	int cupsPrintFiles(Pointer name, int num_files, PointerByReference files, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsPrintFiles(const char*, int, const char**, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:118</i>
	 */
	int cupsPrintFiles(String name, int num_files, String files[], String title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>char* cupsTempFile(char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:120</i><br>
	 * @deprecated use the safer methods {@link #cupsTempFile(java.nio.ByteBuffer, int)} and {@link #cupsTempFile(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	Pointer cupsTempFile(Pointer filename, int len);
	/**
	 * Original signature : <code>char* cupsTempFile(char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:120</i>
	 */
	Pointer cupsTempFile(ByteBuffer filename, int len);
	/**
	 * Original signature : <code>int cupsTempFd(char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:122</i><br>
	 * @deprecated use the safer methods {@link #cupsTempFd(java.nio.ByteBuffer, int)} and {@link #cupsTempFd(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int cupsTempFd(Pointer filename, int len);
	/**
	 * Original signature : <code>int cupsTempFd(char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:122</i>
	 */
	int cupsTempFd(ByteBuffer filename, int len);
	/**
	 * Original signature : <code>int cupsAddDest(const char*, const char*, int, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:124</i><br>
	 * @deprecated use the safer methods {@link #cupsAddDest(java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_dest_s.ByReference[])} and {@link #cupsAddDest(com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_dest_s.ByReference[])} instead
	 */
	@Deprecated 
	int cupsAddDest(Pointer name, Pointer instance, int num_dests, PointerByReference dests);
	/**
	 * Original signature : <code>int cupsAddDest(const char*, const char*, int, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:124</i>
	 */
	int cupsAddDest(String name, String instance, int num_dests, cups_dest_s.ByReference dests[]);
	/**
	 * Original signature : <code>int cupsAddDest(const char*, const char*, int, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:124</i>
	 */
	int cupsAddDest(Pointer name, Pointer instance, int num_dests, cups_dest_s.ByReference dests[]);
	/**
	 * Original signature : <code>void cupsFreeDests(int, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:126</i>
	 */
	void cupsFreeDests(int num_dests, cups_dest_s dests);
	/**
	 * Original signature : <code>cups_dest_t* cupsGetDest(const char*, const char*, int, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:128</i><br>
	 * @deprecated use the safer methods {@link #cupsGetDest(java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_dest_s)} and {@link #cupsGetDest(com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_dest_s)} instead
	 */
	@Deprecated 
	cups_dest_s cupsGetDest(Pointer name, Pointer instance, int num_dests, cups_dest_s dests);
	/**
	 * Original signature : <code>cups_dest_t* cupsGetDest(const char*, const char*, int, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:128</i>
	 */
	cups_dest_s cupsGetDest(String name, String instance, int num_dests, cups_dest_s dests);
	/**
	 * Original signature : <code>int cupsGetDests(cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:130</i><br>
	 * @deprecated use the safer method {@link #cupsGetDests(ml.rabidbeaver.jna.cups_dest_s.ByReference[])} instead
	 */
	@Deprecated 
	int cupsGetDests(PointerByReference dests);
	/**
	 * Original signature : <code>int cupsGetDests(cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:130</i>
	 */
	int cupsGetDests(cups_dest_s.ByReference dests[]);
	/**
	 * Original signature : <code>void cupsSetDests(int, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:132</i>
	 */
	void cupsSetDests(int num_dests, cups_dest_s dests);
	/**
	 * Original signature : <code>int cupsAddOption(const char*, const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:134</i><br>
	 * @deprecated use the safer methods {@link #cupsAddOption(java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_option_s.ByReference[])} and {@link #cupsAddOption(com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s.ByReference[])} instead
	 */
	@Deprecated 
	int cupsAddOption(Pointer name, Pointer value, int num_options, PointerByReference options);
	/**
	 * Original signature : <code>int cupsAddOption(const char*, const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:134</i>
	 */
	int cupsAddOption(String name, String value, int num_options, cups_option_s.ByReference options[]);
	/**
	 * Original signature : <code>int cupsAddOption(const char*, const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:134</i>
	 */
	int cupsAddOption(Pointer name, Pointer value, int num_options, cups_option_s.ByReference options[]);
	/**
	 * Original signature : <code>void cupsEncodeOptions(ipp_t*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:136</i><br>
	 * @deprecated use the safer method {@link #cupsEncodeOptions(com.sun.jna.ptr.PointerByReference, int, ml.rabidbeaver.jna.cups_option_s)} instead
	 */
	@Deprecated 
	void cupsEncodeOptions(Pointer ipp, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>void cupsEncodeOptions(ipp_t*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:136</i>
	 */
	void cupsEncodeOptions(PointerByReference ipp, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>void cupsFreeOptions(int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:138</i>
	 */
	void cupsFreeOptions(int num_options, cups_option_s options);
	/**
	 * Original signature : <code>char* cupsGetOption(const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:140</i><br>
	 * @deprecated use the safer methods {@link #cupsGetOption(java.lang.String, int, ml.rabidbeaver.jna.cups_option_s)} and {@link #cupsGetOption(com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s)} instead
	 */
	@Deprecated 
	Pointer cupsGetOption(Pointer name, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>char* cupsGetOption(const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:140</i>
	 */
	Pointer cupsGetOption(String name, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsParseOptions(const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:142</i><br>
	 * @deprecated use the safer methods {@link #cupsParseOptions(java.lang.String, int, ml.rabidbeaver.jna.cups_option_s.ByReference[])} and {@link #cupsParseOptions(com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s.ByReference[])} instead
	 */
	@Deprecated 
	int cupsParseOptions(Pointer arg, int num_options, PointerByReference options);
	/**
	 * Original signature : <code>int cupsParseOptions(const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:142</i>
	 */
	int cupsParseOptions(String arg, int num_options, cups_option_s.ByReference options[]);
	/**
	 * Original signature : <code>int cupsParseOptions(const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:142</i>
	 */
	int cupsParseOptions(Pointer arg, int num_options, cups_option_s.ByReference options[]);
	/**
	 * Original signature : <code>char* cupsGetPassword(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:144</i><br>
	 * @deprecated use the safer methods {@link #cupsGetPassword(java.lang.String)} and {@link #cupsGetPassword(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer cupsGetPassword(Pointer prompt);
	/**
	 * Original signature : <code>char* cupsGetPassword(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:144</i>
	 */
	Pointer cupsGetPassword(String prompt);
	/**
	 * Original signature : <code>char* cupsServer()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:146</i>
	 */
	Pointer cupsServer();
	/**
	 * Original signature : <code>void cupsSetEncryption(http_encryption_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:148</i>
	 */
	void cupsSetEncryption(int e);
	/**
	 * Original signature : <code>void cupsSetPasswordCB(cups_password_cb_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:150</i>
	 */
	void cupsSetPasswordCB(MlRabidbeaverJnaLibrary.cups_password_cb_t cb);
	/**
	 * Original signature : <code>void cupsSetServer(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:152</i><br>
	 * @deprecated use the safer methods {@link #cupsSetServer(java.lang.String)} and {@link #cupsSetServer(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void cupsSetServer(Pointer server);
	/**
	 * Original signature : <code>void cupsSetServer(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:152</i>
	 */
	void cupsSetServer(String server);
	/**
	 * Original signature : <code>void cupsSetUser(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:154</i><br>
	 * @deprecated use the safer methods {@link #cupsSetUser(java.lang.String)} and {@link #cupsSetUser(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void cupsSetUser(Pointer user);
	/**
	 * Original signature : <code>void cupsSetUser(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:154</i>
	 */
	void cupsSetUser(String user);
	/**
	 * Original signature : <code>char* cupsUser()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:156</i>
	 */
	Pointer cupsUser();
	/**
	 * New in CUPS 1.1.20 ***<br>
	 * Original signature : <code>int cupsDoAuthentication(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:161</i><br>
	 * @deprecated use the safer methods {@link #cupsDoAuthentication(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsDoAuthentication(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsDoAuthentication(Pointer http, Pointer method, Pointer resource);
	/**
	 * New in CUPS 1.1.20 ***<br>
	 * Original signature : <code>int cupsDoAuthentication(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:161</i>
	 */
	int cupsDoAuthentication(PointerByReference http, String method, String resource);
	/**
	 * New in CUPS 1.1.20 ***<br>
	 * Original signature : <code>int cupsDoAuthentication(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:161</i>
	 */
	int cupsDoAuthentication(PointerByReference http, Pointer method, Pointer resource);
	/**
	 * Original signature : <code>http_status_t cupsGetFile(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:163</i><br>
	 * @deprecated use the safer methods {@link #cupsGetFile(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsGetFile(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsGetFile(Pointer http, Pointer resource, Pointer filename);
	/**
	 * Original signature : <code>http_status_t cupsGetFile(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:163</i>
	 */
	int cupsGetFile(PointerByReference http, String resource, String filename);
	/**
	 * Original signature : <code>http_status_t cupsGetFile(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:163</i>
	 */
	int cupsGetFile(PointerByReference http, Pointer resource, Pointer filename);
	/**
	 * Original signature : <code>http_status_t cupsGetFd(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:165</i><br>
	 * @deprecated use the safer methods {@link #cupsGetFd(com.sun.jna.ptr.PointerByReference, java.lang.String, int)} and {@link #cupsGetFd(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int cupsGetFd(Pointer http, Pointer resource, int fd);
	/**
	 * Original signature : <code>http_status_t cupsGetFd(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:165</i>
	 */
	int cupsGetFd(PointerByReference http, String resource, int fd);
	/**
	 * Original signature : <code>http_status_t cupsGetFd(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:165</i>
	 */
	int cupsGetFd(PointerByReference http, Pointer resource, int fd);
	/**
	 * Original signature : <code>http_status_t cupsPutFile(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:167</i><br>
	 * @deprecated use the safer methods {@link #cupsPutFile(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsPutFile(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsPutFile(Pointer http, Pointer resource, Pointer filename);
	/**
	 * Original signature : <code>http_status_t cupsPutFile(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:167</i>
	 */
	int cupsPutFile(PointerByReference http, String resource, String filename);
	/**
	 * Original signature : <code>http_status_t cupsPutFile(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:167</i>
	 */
	int cupsPutFile(PointerByReference http, Pointer resource, Pointer filename);
	/**
	 * Original signature : <code>http_status_t cupsPutFd(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:169</i><br>
	 * @deprecated use the safer methods {@link #cupsPutFd(com.sun.jna.ptr.PointerByReference, java.lang.String, int)} and {@link #cupsPutFd(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int cupsPutFd(Pointer http, Pointer resource, int fd);
	/**
	 * Original signature : <code>http_status_t cupsPutFd(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:169</i>
	 */
	int cupsPutFd(PointerByReference http, String resource, int fd);
	/**
	 * Original signature : <code>http_status_t cupsPutFd(http_t*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:169</i>
	 */
	int cupsPutFd(PointerByReference http, Pointer resource, int fd);
	/**
	 * New in CUPS 1.1.21 ***<br>
	 * Original signature : <code>char* cupsGetDefault2(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:174</i><br>
	 * @deprecated use the safer method {@link #cupsGetDefault2(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsGetDefault2(Pointer http);
	/**
	 * New in CUPS 1.1.21 ***<br>
	 * Original signature : <code>char* cupsGetDefault2(http_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:174</i>
	 */
	Pointer cupsGetDefault2(PointerByReference http);
	/**
	 * Original signature : <code>int cupsGetDests2(http_t*, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:176</i>
	 */
	int cupsGetDests2(PointerByReference http, PointerByReference dests);
	/**
	 * Original signature : <code>int cupsGetJobs2(http_t*, cups_job_t**, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:178</i><br>
	 */
	int cupsGetJobs2(PointerByReference http, PointerByReference jobs, String name, int myjobs, int whichjobs);
	/**
	 * Original signature : <code>char* cupsGetPPD2(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:180</i><br>
	 * @deprecated use the safer methods {@link #cupsGetPPD2(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsGetPPD2(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer cupsGetPPD2(Pointer http, Pointer name);
	/**
	 * Original signature : <code>char* cupsGetPPD2(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:180</i>
	 */
	Pointer cupsGetPPD2(PointerByReference http, String name);
	/**
	 * Original signature : <code>char* cupsGetPPD2(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:180</i>
	 */
	Pointer cupsGetPPD2(PointerByReference http, Pointer name);
	/**
	 * Original signature : <code>int cupsPrintFile2(http_t*, const char*, const char*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:182</i><br>
	 * @deprecated use the safer methods {@link #cupsPrintFile2(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_option_s)} and {@link #cupsPrintFile2(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s)} instead
	 */
	@Deprecated 
	int cupsPrintFile2(Pointer http, Pointer name, Pointer filename, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsPrintFile2(http_t*, const char*, const char*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:182</i>
	 */
	int cupsPrintFile2(PointerByReference http, String name, String filename, String title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsPrintFile2(http_t*, const char*, const char*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:182</i>
	 */
	int cupsPrintFile2(PointerByReference http, Pointer name, Pointer filename, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsPrintFiles2(http_t*, const char*, int, const char**, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:184</i><br>
	 * @deprecated use the safer methods {@link #cupsPrintFiles2(com.sun.jna.ptr.PointerByReference, java.lang.String, int, java.lang.String[], java.lang.String, int, ml.rabidbeaver.jna.cups_option_s)} and {@link #cupsPrintFiles2(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s)} instead
	 */
	@Deprecated 
	int cupsPrintFiles2(Pointer http, Pointer name, int num_files, PointerByReference files, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsPrintFiles2(http_t*, const char*, int, const char**, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:184</i>
	 */
	int cupsPrintFiles2(PointerByReference http, String name, int num_files, String files[], String title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsPrintFiles2(http_t*, const char*, int, const char**, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:184</i>
	 */
	int cupsPrintFiles2(PointerByReference http, Pointer name, int num_files, PointerByReference files, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsSetDests2(http_t*, int, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:186</i><br>
	 * @deprecated use the safer method {@link #cupsSetDests2(com.sun.jna.ptr.PointerByReference, int, ml.rabidbeaver.jna.cups_dest_s)} instead
	 */
	@Deprecated 
	int cupsSetDests2(Pointer http, int num_dests, cups_dest_s dests);
	/**
	 * Original signature : <code>int cupsSetDests2(http_t*, int, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:186</i>
	 */
	int cupsSetDests2(PointerByReference http, int num_dests, cups_dest_s dests);
	/**
	 * New in CUPS 1.2/OS X 10.5 ***<br>
	 * Original signature : <code>ssize_t cupsBackChannelRead(char*, size_t, double)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:191</i><br>
	 * @deprecated use the safer methods {@link #cupsBackChannelRead(java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, double)} and {@link #cupsBackChannelRead(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, double)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t cupsBackChannelRead(Pointer buffer, NativeSize bytes, double timeout);
	/**
	 * New in CUPS 1.2/OS X 10.5 ***<br>
	 * Original signature : <code>ssize_t cupsBackChannelRead(char*, size_t, double)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:191</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsBackChannelRead(ByteBuffer buffer, NativeSize bytes, double timeout);
	/**
	 * Original signature : <code>ssize_t cupsBackChannelWrite(const char*, size_t, double)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:193</i><br>
	 * @deprecated use the safer methods {@link #cupsBackChannelWrite(java.lang.String, com.ochafik.lang.jnaerator.runtime.NativeSize, double)} and {@link #cupsBackChannelWrite(com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, double)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t cupsBackChannelWrite(Pointer buffer, NativeSize bytes, double timeout);
	/**
	 * Original signature : <code>ssize_t cupsBackChannelWrite(const char*, size_t, double)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:193</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsBackChannelWrite(String buffer, NativeSize bytes, double timeout);
	/**
	 * Original signature : <code>void cupsEncodeOptions2(ipp_t*, int, cups_option_t*, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:195</i><br>
	 * @deprecated use the safer method {@link #cupsEncodeOptions2(com.sun.jna.ptr.PointerByReference, int, ml.rabidbeaver.jna.cups_option_s, int)} instead
	 */
	@Deprecated 
	void cupsEncodeOptions2(Pointer ipp, int num_options, cups_option_s options, int group_tag);
	/**
	 * Original signature : <code>void cupsEncodeOptions2(ipp_t*, int, cups_option_t*, ipp_tag_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:195</i>
	 */
	void cupsEncodeOptions2(PointerByReference ipp, int num_options, cups_option_s options, int group_tag);
	/**
	 * Original signature : <code>char* cupsLastErrorString()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:197</i>
	 */
	Pointer cupsLastErrorString();
	/**
	 * Original signature : <code>char* cupsNotifySubject(cups_lang_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:199</i><br>
	 * @deprecated use the safer method {@link #cupsNotifySubject(ml.rabidbeaver.jna.cups_lang_s, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsNotifySubject(cups_lang_s lang, Pointer event);
	/**
	 * Original signature : <code>char* cupsNotifySubject(cups_lang_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:199</i>
	 */
	Pointer cupsNotifySubject(cups_lang_s lang, PointerByReference event);
	/**
	 * Original signature : <code>char* cupsNotifyText(cups_lang_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:201</i><br>
	 * @deprecated use the safer method {@link #cupsNotifyText(ml.rabidbeaver.jna.cups_lang_s, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	Pointer cupsNotifyText(cups_lang_s lang, Pointer event);
	/**
	 * Original signature : <code>char* cupsNotifyText(cups_lang_t*, ipp_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:201</i>
	 */
	Pointer cupsNotifyText(cups_lang_s lang, PointerByReference event);
	/**
	 * Original signature : <code>int cupsRemoveOption(const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:203</i><br>
	 * @deprecated use the safer methods {@link #cupsRemoveOption(java.lang.String, int, ml.rabidbeaver.jna.cups_option_s.ByReference[])} and {@link #cupsRemoveOption(com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s.ByReference[])} instead
	 */
	@Deprecated 
	int cupsRemoveOption(Pointer name, int num_options, PointerByReference options);
	/**
	 * Original signature : <code>int cupsRemoveOption(const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:203</i>
	 */
	int cupsRemoveOption(String name, int num_options, cups_option_s.ByReference options[]);
	/**
	 * Original signature : <code>int cupsRemoveOption(const char*, int, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:203</i>
	 */
	int cupsRemoveOption(Pointer name, int num_options, cups_option_s.ByReference options[]);
	/**
	 * Original signature : <code>cups_file_t* cupsTempFile2(char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:205</i><br>
	 * @deprecated use the safer methods {@link #cupsTempFile2(java.nio.ByteBuffer, int)} and {@link #cupsTempFile2(com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	PointerByReference cupsTempFile2(Pointer filename, int len);
	/**
	 * Original signature : <code>cups_file_t* cupsTempFile2(char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:205</i>
	 */
	PointerByReference cupsTempFile2(ByteBuffer filename, int len);
	/**
	 * New in CUPS 1.3/OS X 10.5 ***<br>
	 * Original signature : <code>ipp_t* cupsDoIORequest(http_t*, ipp_t*, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:210</i><br>
	 * @deprecated use the safer methods {@link #cupsDoIORequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.lang.String, int, int)} and {@link #cupsDoIORequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, int)} instead
	 */
	@Deprecated 
	PointerByReference cupsDoIORequest(Pointer http, Pointer request, Pointer resource, int infile, int outfile);
	/**
	 * New in CUPS 1.3/OS X 10.5 ***<br>
	 * Original signature : <code>ipp_t* cupsDoIORequest(http_t*, ipp_t*, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:210</i>
	 */
	PointerByReference cupsDoIORequest(PointerByReference http, PointerByReference request, String resource, int infile, int outfile);
	/**
	 * New in CUPS 1.3/OS X 10.5 ***<br>
	 * Original signature : <code>ipp_t* cupsDoIORequest(http_t*, ipp_t*, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:210</i>
	 */
	PointerByReference cupsDoIORequest(PointerByReference http, PointerByReference request, Pointer resource, int infile, int outfile);
	/**
	 * Original signature : <code>char* cupsGetServerPPD(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:212</i><br>
	 * @deprecated use the safer methods {@link #cupsGetServerPPD(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsGetServerPPD(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer cupsGetServerPPD(Pointer http, Pointer name);
	/**
	 * Original signature : <code>char* cupsGetServerPPD(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:212</i>
	 */
	Pointer cupsGetServerPPD(PointerByReference http, String name);
	/**
	 * Original signature : <code>char* cupsGetServerPPD(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:212</i>
	 */
	Pointer cupsGetServerPPD(PointerByReference http, Pointer name);
	/**
	 * Original signature : <code>int cupsRemoveDest(const char*, const char*, int, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:214</i><br>
	 * @deprecated use the safer methods {@link #cupsRemoveDest(java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_dest_s.ByReference[])} and {@link #cupsRemoveDest(com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_dest_s.ByReference[])} instead
	 */
	@Deprecated 
	int cupsRemoveDest(Pointer name, Pointer instance, int num_dests, PointerByReference dests);
	/**
	 * Original signature : <code>int cupsRemoveDest(const char*, const char*, int, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:214</i>
	 */
	int cupsRemoveDest(String name, String instance, int num_dests, cups_dest_s.ByReference dests[]);
	/**
	 * Original signature : <code>int cupsRemoveDest(const char*, const char*, int, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:214</i>
	 */
	int cupsRemoveDest(Pointer name, Pointer instance, int num_dests, cups_dest_s.ByReference dests[]);
	/**
	 * Original signature : <code>void cupsSetDefaultDest(const char*, const char*, int, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:216</i><br>
	 * @deprecated use the safer methods {@link #cupsSetDefaultDest(java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_dest_s)} and {@link #cupsSetDefaultDest(com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_dest_s)} instead
	 */
	@Deprecated 
	void cupsSetDefaultDest(Pointer name, Pointer instance, int num_dests, cups_dest_s dests);
	/**
	 * Original signature : <code>void cupsSetDefaultDest(const char*, const char*, int, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:216</i>
	 */
	void cupsSetDefaultDest(String name, String instance, int num_dests, cups_dest_s dests);
	/**
	 * New in CUPS 1.4/OS X 10.6 ***<br>
	 * Original signature : <code>ipp_status_t cupsCancelJob2(http_t*, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:221</i><br>
	 * @deprecated use the safer methods {@link #cupsCancelJob2(com.sun.jna.ptr.PointerByReference, java.lang.String, int, int)} and {@link #cupsCancelJob2(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, int)} instead
	 */
	@Deprecated 
	int cupsCancelJob2(Pointer http, Pointer name, int job_id, int purge);
	/**
	 * New in CUPS 1.4/OS X 10.6 ***<br>
	 * Original signature : <code>ipp_status_t cupsCancelJob2(http_t*, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:221</i>
	 */
	int cupsCancelJob2(PointerByReference http, String name, int job_id, int purge);
	/**
	 * New in CUPS 1.4/OS X 10.6 ***<br>
	 * Original signature : <code>ipp_status_t cupsCancelJob2(http_t*, const char*, int, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:221</i>
	 */
	int cupsCancelJob2(PointerByReference http, Pointer name, int job_id, int purge);
	/**
	 * Original signature : <code>int cupsCreateJob(http_t*, const char*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:223</i><br>
	 * @deprecated use the safer methods {@link #cupsCreateJob(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_option_s)} and {@link #cupsCreateJob(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s)} instead
	 */
	@Deprecated 
	int cupsCreateJob(Pointer http, Pointer name, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsCreateJob(http_t*, const char*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:223</i>
	 */
	int cupsCreateJob(PointerByReference http, String name, String title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsCreateJob(http_t*, const char*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:223</i>
	 */
	int cupsCreateJob(PointerByReference http, Pointer name, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>ipp_status_t cupsFinishDocument(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:225</i><br>
	 * @deprecated use the safer methods {@link #cupsFinishDocument(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsFinishDocument(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsFinishDocument(Pointer http, Pointer name);
	/**
	 * Original signature : <code>ipp_status_t cupsFinishDocument(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:225</i>
	 */
	int cupsFinishDocument(PointerByReference http, String name);
	/**
	 * Original signature : <code>ipp_status_t cupsFinishDocument(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:225</i>
	 */
	int cupsFinishDocument(PointerByReference http, Pointer name);
	/**
	 * Original signature : <code>ipp_status_t cupsGetDevices(http_t*, int, const char*, const char*, cups_device_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:227</i><br>
	 * @deprecated use the safer methods {@link #cupsGetDevices(com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.lang.String, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.cups_device_cb_t, com.sun.jna.Pointer)} and {@link #cupsGetDevices(com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.cups_device_cb_t, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsGetDevices(Pointer http, int timeout, Pointer include_schemes, Pointer exclude_schemes, MlRabidbeaverJnaLibrary.cups_device_cb_t callback, Pointer user_data);
	/**
	 * Original signature : <code>ipp_status_t cupsGetDevices(http_t*, int, const char*, const char*, cups_device_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:227</i>
	 */
	int cupsGetDevices(PointerByReference http, int timeout, String include_schemes, String exclude_schemes, MlRabidbeaverJnaLibrary.cups_device_cb_t callback, Pointer user_data);
	/**
	 * Original signature : <code>ipp_status_t cupsGetDevices(http_t*, int, const char*, const char*, cups_device_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:227</i>
	 */
	int cupsGetDevices(PointerByReference http, int timeout, Pointer include_schemes, Pointer exclude_schemes, MlRabidbeaverJnaLibrary.cups_device_cb_t callback, Pointer user_data);
	/**
	 * Original signature : <code>cups_dest_t* cupsGetNamedDest(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:229</i><br>
	 * @deprecated use the safer methods {@link #cupsGetNamedDest(com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsGetNamedDest(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	cups_dest_s cupsGetNamedDest(Pointer http, Pointer name, Pointer instance);
	/**
	 * Original signature : <code>cups_dest_t* cupsGetNamedDest(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:229</i>
	 */
	cups_dest_s cupsGetNamedDest(PointerByReference http, String name, String instance);
	/**
	 * Original signature : <code>cups_dest_t* cupsGetNamedDest(http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:229</i>
	 */
	cups_dest_s cupsGetNamedDest(PointerByReference http, Pointer name, Pointer instance);
	/**
	 * Original signature : <code>char* cupsGetPassword2(const char*, http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:231</i><br>
	 * @deprecated use the safer methods {@link #cupsGetPassword2(java.lang.String, com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsGetPassword2(com.sun.jna.Pointer, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer cupsGetPassword2(Pointer prompt, Pointer http, Pointer method, Pointer resource);
	/**
	 * Original signature : <code>char* cupsGetPassword2(const char*, http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:231</i>
	 */
	Pointer cupsGetPassword2(String prompt, PointerByReference http, String method, String resource);
	/**
	 * Original signature : <code>char* cupsGetPassword2(const char*, http_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:231</i>
	 */
	Pointer cupsGetPassword2(Pointer prompt, PointerByReference http, Pointer method, Pointer resource);
	/**
	 * Original signature : <code>http_status_t cupsGetPPD3(http_t*, const char*, long*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:233</i><br>
	 * @deprecated use the safer methods {@link #cupsGetPPD3(com.sun.jna.ptr.PointerByReference, java.lang.String, com.sun.jna.ptr.NativeLongByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #cupsGetPPD3(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	int cupsGetPPD3(Pointer http, Pointer name, NativeLongByReference modtime, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>http_status_t cupsGetPPD3(http_t*, const char*, long*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:233</i>
	 */
	int cupsGetPPD3(PointerByReference http, String name, NativeLongByReference modtime, ByteBuffer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>http_status_t cupsGetPPD3(http_t*, const char*, long*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:233</i>
	 */
	int cupsGetPPD3(PointerByReference http, Pointer name, NativeLongByReference modtime, Pointer buffer, NativeSize bufsize);
	/**
	 * Original signature : <code>ipp_t* cupsGetResponse(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:235</i><br>
	 * @deprecated use the safer methods {@link #cupsGetResponse(com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsGetResponse(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsGetResponse(Pointer http, Pointer resource);
	/**
	 * Original signature : <code>ipp_t* cupsGetResponse(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:235</i>
	 */
	PointerByReference cupsGetResponse(PointerByReference http, String resource);
	/**
	 * Original signature : <code>ipp_t* cupsGetResponse(http_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:235</i>
	 */
	PointerByReference cupsGetResponse(PointerByReference http, Pointer resource);
	/**
	 * Original signature : <code>ssize_t cupsReadResponseData(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:237</i><br>
	 * @deprecated use the safer methods {@link #cupsReadResponseData(com.sun.jna.ptr.PointerByReference, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #cupsReadResponseData(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	MlRabidbeaverJnaLibrary.ssize_t cupsReadResponseData(Pointer http, Pointer buffer, NativeSize length);
	/**
	 * Original signature : <code>ssize_t cupsReadResponseData(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:237</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsReadResponseData(PointerByReference http, ByteBuffer buffer, NativeSize length);
	/**
	 * Original signature : <code>ssize_t cupsReadResponseData(http_t*, char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:237</i>
	 */
	MlRabidbeaverJnaLibrary.ssize_t cupsReadResponseData(PointerByReference http, Pointer buffer, NativeSize length);
	/**
	 * Original signature : <code>http_status_t cupsSendRequest(http_t*, ipp_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:239</i><br>
	 * @deprecated use the safer methods {@link #cupsSendRequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, java.lang.String, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #cupsSendRequest(com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	int cupsSendRequest(Pointer http, Pointer request, Pointer resource, NativeSize length);
	/**
	 * Original signature : <code>http_status_t cupsSendRequest(http_t*, ipp_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:239</i>
	 */
	int cupsSendRequest(PointerByReference http, PointerByReference request, String resource, NativeSize length);
	/**
	 * Original signature : <code>http_status_t cupsSendRequest(http_t*, ipp_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:239</i>
	 */
	int cupsSendRequest(PointerByReference http, PointerByReference request, Pointer resource, NativeSize length);
	/**
	 * Original signature : <code>void cupsSetPasswordCB2(cups_password_cb2_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:241</i>
	 */
	void cupsSetPasswordCB2(MlRabidbeaverJnaLibrary.cups_password_cb2_t cb, Pointer user_data);
	/**
	 * Original signature : <code>http_status_t cupsStartDocument(http_t*, const char*, int, const char*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:243</i><br>
	 * @deprecated use the safer methods {@link #cupsStartDocument(com.sun.jna.ptr.PointerByReference, java.lang.String, int, java.lang.String, java.lang.String, int)} and {@link #cupsStartDocument(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int cupsStartDocument(Pointer http, Pointer name, int job_id, Pointer docname, Pointer format, int last_document);
	/**
	 * Original signature : <code>http_status_t cupsStartDocument(http_t*, const char*, int, const char*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:243</i>
	 */
	int cupsStartDocument(PointerByReference http, String name, int job_id, String docname, String format, int last_document);
	/**
	 * Original signature : <code>http_status_t cupsStartDocument(http_t*, const char*, int, const char*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:243</i>
	 */
	int cupsStartDocument(PointerByReference http, Pointer name, int job_id, Pointer docname, Pointer format, int last_document);
	/**
	 * Original signature : <code>http_status_t cupsWriteRequestData(http_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:245</i><br>
	 * @deprecated use the safer methods {@link #cupsWriteRequestData(com.sun.jna.ptr.PointerByReference, java.lang.String, com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #cupsWriteRequestData(com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
	 */
	@Deprecated 
	int cupsWriteRequestData(Pointer http, Pointer buffer, NativeSize length);
	/**
	 * Original signature : <code>http_status_t cupsWriteRequestData(http_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:245</i>
	 */
	int cupsWriteRequestData(PointerByReference http, String buffer, NativeSize length);
	/**
	 * Original signature : <code>http_status_t cupsWriteRequestData(http_t*, const char*, size_t)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:245</i>
	 */
	int cupsWriteRequestData(PointerByReference http, Pointer buffer, NativeSize length);
	/**
	 * New in CUPS 1.5/OS X 10.7 ***<br>
	 * Original signature : <code>void cupsSetClientCertCB(cups_client_cert_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:250</i>
	 */
	void cupsSetClientCertCB(MlRabidbeaverJnaLibrary.cups_client_cert_cb_t cb, Pointer user_data);
	/**
	 * Original signature : <code>int cupsSetCredentials(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:252</i><br>
	 * @deprecated use the safer method {@link #cupsSetCredentials(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsSetCredentials(Pointer certs);
	/**
	 * Original signature : <code>int cupsSetCredentials(cups_array_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:252</i>
	 */
	int cupsSetCredentials(PointerByReference certs);
	/**
	 * Original signature : <code>void cupsSetServerCertCB(cups_server_cert_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:254</i>
	 */
	void cupsSetServerCertCB(MlRabidbeaverJnaLibrary.cups_server_cert_cb_t cb, Pointer user_data);
	/**
	 * New in CUPS 1.6/OS X 10.8 ***<br>
	 * Original signature : <code>ipp_status_t cupsCancelDestJob(http_t*, cups_dest_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:259</i><br>
	 * @deprecated use the safer method {@link #cupsCancelDestJob(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, int)} instead
	 */
	@Deprecated 
	int cupsCancelDestJob(Pointer http, cups_dest_s dest, int job_id);
	/**
	 * New in CUPS 1.6/OS X 10.8 ***<br>
	 * Original signature : <code>ipp_status_t cupsCancelDestJob(http_t*, cups_dest_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:259</i>
	 */
	int cupsCancelDestJob(PointerByReference http, cups_dest_s dest, int job_id);
	/**
	 * Original signature : <code>int cupsCheckDestSupported(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:261</i><br>
	 * @deprecated use the safer methods {@link #cupsCheckDestSupported(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsCheckDestSupported(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsCheckDestSupported(Pointer http, cups_dest_s dest, Pointer info, Pointer option, Pointer value);
	/**
	 * Original signature : <code>int cupsCheckDestSupported(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:261</i>
	 */
	int cupsCheckDestSupported(PointerByReference http, cups_dest_s dest, PointerByReference info, String option, String value);
	/**
	 * Original signature : <code>int cupsCheckDestSupported(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:261</i>
	 */
	int cupsCheckDestSupported(PointerByReference http, cups_dest_s dest, PointerByReference info, Pointer option, Pointer value);
	/**
	 * Original signature : <code>ipp_status_t cupsCloseDestJob(http_t*, cups_dest_t*, cups_dinfo_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:263</i><br>
	 * @deprecated use the safer method {@link #cupsCloseDestJob(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int cupsCloseDestJob(Pointer http, cups_dest_s dest, Pointer info, int job_id);
	/**
	 * Original signature : <code>ipp_status_t cupsCloseDestJob(http_t*, cups_dest_t*, cups_dinfo_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:263</i>
	 */
	int cupsCloseDestJob(PointerByReference http, cups_dest_s dest, PointerByReference info, int job_id);
	/**
	 * Original signature : <code>http_t* cupsConnectDest(cups_dest_t*, unsigned, int, int*, char*, size_t, cups_dest_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:265</i><br>
	 * @deprecated use the safer methods {@link #cupsConnectDest(ml.rabidbeaver.jna.cups_dest_s, int, int, java.nio.IntBuffer, java.nio.ByteBuffer, com.ochafik.lang.jnaerator.runtime.NativeSize, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.cups_dest_cb_t, com.sun.jna.Pointer)} and {@link #cupsConnectDest(ml.rabidbeaver.jna.cups_dest_s, int, int, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.cups_dest_cb_t, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsConnectDest(cups_dest_s dest, int flags, int msec, IntByReference cancel, Pointer resource, NativeSize resourcesize, MlRabidbeaverJnaLibrary.cups_dest_cb_t cb, Pointer user_data);
	/**
	 * Original signature : <code>http_t* cupsConnectDest(cups_dest_t*, unsigned, int, int*, char*, size_t, cups_dest_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:265</i>
	 */
	PointerByReference cupsConnectDest(cups_dest_s dest, int flags, int msec, IntBuffer cancel, ByteBuffer resource, NativeSize resourcesize, MlRabidbeaverJnaLibrary.cups_dest_cb_t cb, Pointer user_data);
	/**
	 * Original signature : <code>int cupsCopyDest(cups_dest_t*, int, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:267</i><br>
	 * @deprecated use the safer method {@link #cupsCopyDest(ml.rabidbeaver.jna.cups_dest_s, int, ml.rabidbeaver.jna.cups_dest_s.ByReference[])} instead
	 */
	@Deprecated 
	int cupsCopyDest(cups_dest_s dest, int num_dests, PointerByReference dests);
	/**
	 * Original signature : <code>int cupsCopyDest(cups_dest_t*, int, cups_dest_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:267</i>
	 */
	int cupsCopyDest(cups_dest_s dest, int num_dests, cups_dest_s.ByReference dests[]);
	/**
	 * Original signature : <code>cups_dinfo_t* cupsCopyDestInfo(http_t*, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:269</i><br>
	 * @deprecated use the safer method {@link #cupsCopyDestInfo(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s)} instead
	 */
	@Deprecated 
	PointerByReference cupsCopyDestInfo(Pointer http, cups_dest_s dest);
	/**
	 * Original signature : <code>cups_dinfo_t* cupsCopyDestInfo(http_t*, cups_dest_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:269</i>
	 */
	PointerByReference cupsCopyDestInfo(PointerByReference http, cups_dest_s dest);
	/**
	 * Original signature : <code>int cupsCopyDestConflicts(http_t*, cups_dest_t*, cups_dinfo_t*, int, cups_option_t*, const char*, const char*, int*, cups_option_t**, int*, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:271</i><br>
	 * @deprecated use the safer methods {@link #cupsCopyDestConflicts(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int, ml.rabidbeaver.jna.cups_option_s, java.lang.String, java.lang.String, java.nio.IntBuffer, ml.rabidbeaver.jna.cups_option_s.ByReference[], java.nio.IntBuffer, ml.rabidbeaver.jna.cups_option_s.ByReference[])} and {@link #cupsCopyDestConflicts(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int, ml.rabidbeaver.jna.cups_option_s, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, ml.rabidbeaver.jna.cups_option_s.ByReference[], com.sun.jna.ptr.IntByReference, ml.rabidbeaver.jna.cups_option_s.ByReference[])} instead
	 */
	@Deprecated 
	int cupsCopyDestConflicts(Pointer http, cups_dest_s dest, Pointer info, int num_options, cups_option_s options, Pointer new_option, Pointer new_value, IntByReference num_conflicts, PointerByReference conflicts, IntByReference num_resolved, PointerByReference resolved);
	/**
	 * Original signature : <code>int cupsCopyDestConflicts(http_t*, cups_dest_t*, cups_dinfo_t*, int, cups_option_t*, const char*, const char*, int*, cups_option_t**, int*, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:271</i>
	 */
	int cupsCopyDestConflicts(PointerByReference http, cups_dest_s dest, PointerByReference info, int num_options, cups_option_s options, String new_option, String new_value, IntBuffer num_conflicts, cups_option_s.ByReference conflicts[], IntBuffer num_resolved, cups_option_s.ByReference resolved[]);
	/**
	 * Original signature : <code>int cupsCopyDestConflicts(http_t*, cups_dest_t*, cups_dinfo_t*, int, cups_option_t*, const char*, const char*, int*, cups_option_t**, int*, cups_option_t**)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:271</i>
	 */
	int cupsCopyDestConflicts(PointerByReference http, cups_dest_s dest, PointerByReference info, int num_options, cups_option_s options, Pointer new_option, Pointer new_value, IntByReference num_conflicts, cups_option_s.ByReference conflicts[], IntByReference num_resolved, cups_option_s.ByReference resolved[]);
	/**
	 * Original signature : <code>ipp_status_t cupsCreateDestJob(http_t*, cups_dest_t*, cups_dinfo_t*, int*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:273</i><br>
	 * @deprecated use the safer methods {@link #cupsCreateDestJob(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, java.nio.IntBuffer, java.lang.String, int, ml.rabidbeaver.jna.cups_option_s)} and {@link #cupsCreateDestJob(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s)} instead
	 */
	@Deprecated 
	int cupsCreateDestJob(Pointer http, cups_dest_s dest, Pointer info, IntByReference job_id, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>ipp_status_t cupsCreateDestJob(http_t*, cups_dest_t*, cups_dinfo_t*, int*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:273</i>
	 */
	int cupsCreateDestJob(PointerByReference http, cups_dest_s dest, PointerByReference info, IntBuffer job_id, String title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>ipp_status_t cupsCreateDestJob(http_t*, cups_dest_t*, cups_dinfo_t*, int*, const char*, int, cups_option_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:273</i>
	 */
	int cupsCreateDestJob(PointerByReference http, cups_dest_s dest, PointerByReference info, IntByReference job_id, Pointer title, int num_options, cups_option_s options);
	/**
	 * Original signature : <code>int cupsEnumDests(unsigned, int, int*, cups_ptype_t, cups_ptype_t, cups_dest_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:275</i><br>
	 * @deprecated use the safer methods {@link #cupsEnumDests(int, int, java.nio.IntBuffer, int, int, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.cups_dest_cb_t, com.sun.jna.Pointer)} and {@link #cupsEnumDests(int, int, com.sun.jna.ptr.IntByReference, int, int, ml.rabidbeaver.jna.MlRabidbeaverJnaLibrary.cups_dest_cb_t, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	int cupsEnumDests(int flags, int msec, IntByReference cancel, int type, int mask, MlRabidbeaverJnaLibrary.cups_dest_cb_t cb, Pointer user_data);
	/**
	 * Original signature : <code>int cupsEnumDests(unsigned, int, int*, cups_ptype_t, cups_ptype_t, cups_dest_cb_t, void*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:275</i>
	 */
	int cupsEnumDests(int flags, int msec, IntBuffer cancel, int type, int mask, MlRabidbeaverJnaLibrary.cups_dest_cb_t cb, Pointer user_data);
	/**
	 * Original signature : <code>ipp_status_t cupsFinishDestDocument(http_t*, cups_dest_t*, cups_dinfo_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:277</i><br>
	 * @deprecated use the safer method {@link #cupsFinishDestDocument(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	int cupsFinishDestDocument(Pointer http, cups_dest_s dest, Pointer info);
	/**
	 * Original signature : <code>ipp_status_t cupsFinishDestDocument(http_t*, cups_dest_t*, cups_dinfo_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:277</i>
	 */
	int cupsFinishDestDocument(PointerByReference http, cups_dest_s dest, PointerByReference info);
	/**
	 * Original signature : <code>void cupsFreeDestInfo(cups_dinfo_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:279</i><br>
	 * @deprecated use the safer method {@link #cupsFreeDestInfo(com.sun.jna.ptr.PointerByReference)} instead
	 */
	@Deprecated 
	void cupsFreeDestInfo(Pointer dinfo);
	/**
	 * Original signature : <code>void cupsFreeDestInfo(cups_dinfo_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:279</i>
	 */
	void cupsFreeDestInfo(PointerByReference dinfo);
	/**
	 * Original signature : <code>int cupsGetDestMediaByName(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:281</i><br>
	 * @deprecated use the safer methods {@link #cupsGetDestMediaByName(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, java.lang.String, int, ml.rabidbeaver.jna.cups_size_s)} and {@link #cupsGetDestMediaByName(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_size_s)} instead
	 */
	@Deprecated 
	int cupsGetDestMediaByName(Pointer http, cups_dest_s dest, Pointer dinfo, Pointer media, int flags, cups_size_s size);
	/**
	 * Original signature : <code>int cupsGetDestMediaByName(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:281</i>
	 */
	int cupsGetDestMediaByName(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, String media, int flags, cups_size_s size);
	/**
	 * Original signature : <code>int cupsGetDestMediaByName(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:281</i>
	 */
	int cupsGetDestMediaByName(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, Pointer media, int flags, cups_size_s size);
	/**
	 * Original signature : <code>int cupsGetDestMediaBySize(http_t*, cups_dest_t*, cups_dinfo_t*, int, int, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:283</i><br>
	 * @deprecated use the safer method {@link #cupsGetDestMediaBySize(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int, int, int, ml.rabidbeaver.jna.cups_size_s)} instead
	 */
	@Deprecated 
	int cupsGetDestMediaBySize(Pointer http, cups_dest_s dest, Pointer dinfo, int width, int length, int flags, cups_size_s size);
	/**
	 * Original signature : <code>int cupsGetDestMediaBySize(http_t*, cups_dest_t*, cups_dinfo_t*, int, int, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:283</i>
	 */
	int cupsGetDestMediaBySize(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, int width, int length, int flags, cups_size_s size);
	/**
	 * Original signature : <code>char* cupsLocalizeDestOption(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:285</i><br>
	 * @deprecated use the safer methods {@link #cupsLocalizeDestOption(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsLocalizeDestOption(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer cupsLocalizeDestOption(Pointer http, cups_dest_s dest, Pointer info, Pointer option);
	/**
	 * Original signature : <code>char* cupsLocalizeDestOption(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:285</i>
	 */
	Pointer cupsLocalizeDestOption(PointerByReference http, cups_dest_s dest, PointerByReference info, String option);
	/**
	 * Original signature : <code>char* cupsLocalizeDestOption(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:285</i>
	 */
	Pointer cupsLocalizeDestOption(PointerByReference http, cups_dest_s dest, PointerByReference info, Pointer option);
	/**
	 * Original signature : <code>char* cupsLocalizeDestValue(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:287</i><br>
	 * @deprecated use the safer methods {@link #cupsLocalizeDestValue(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, java.lang.String, java.lang.String)} and {@link #cupsLocalizeDestValue(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	Pointer cupsLocalizeDestValue(Pointer http, cups_dest_s dest, Pointer info, Pointer option, Pointer value);
	/**
	 * Original signature : <code>char* cupsLocalizeDestValue(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:287</i>
	 */
	Pointer cupsLocalizeDestValue(PointerByReference http, cups_dest_s dest, PointerByReference info, String option, String value);
	/**
	 * Original signature : <code>char* cupsLocalizeDestValue(http_t*, cups_dest_t*, cups_dinfo_t*, const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:287</i>
	 */
	Pointer cupsLocalizeDestValue(PointerByReference http, cups_dest_s dest, PointerByReference info, Pointer option, Pointer value);
	/**
	 * Original signature : <code>http_status_t cupsStartDestDocument(http_t*, cups_dest_t*, cups_dinfo_t*, int, const char*, const char*, int, cups_option_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:289</i><br>
	 * @deprecated use the safer methods {@link #cupsStartDestDocument(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int, java.lang.String, java.lang.String, int, ml.rabidbeaver.jna.cups_option_s, int)} and {@link #cupsStartDestDocument(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int, com.sun.jna.Pointer, com.sun.jna.Pointer, int, ml.rabidbeaver.jna.cups_option_s, int)} instead
	 */
	@Deprecated 
	int cupsStartDestDocument(Pointer http, cups_dest_s dest, Pointer info, int job_id, Pointer docname, Pointer format, int num_options, cups_option_s options, int last_document);
	/**
	 * Original signature : <code>http_status_t cupsStartDestDocument(http_t*, cups_dest_t*, cups_dinfo_t*, int, const char*, const char*, int, cups_option_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:289</i>
	 */
	int cupsStartDestDocument(PointerByReference http, cups_dest_s dest, PointerByReference info, int job_id, String docname, String format, int num_options, cups_option_s options, int last_document);
	/**
	 * Original signature : <code>http_status_t cupsStartDestDocument(http_t*, cups_dest_t*, cups_dinfo_t*, int, const char*, const char*, int, cups_option_t*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:289</i>
	 */
	int cupsStartDestDocument(PointerByReference http, cups_dest_s dest, PointerByReference info, int job_id, Pointer docname, Pointer format, int num_options, cups_option_s options, int last_document);
	/**
	 * New in CUPS 1.7<br>
	 * Original signature : <code>ipp_attribute_t* cupsFindDestDefault(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:294</i><br>
	 * @deprecated use the safer methods {@link #cupsFindDestDefault(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsFindDestDefault(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsFindDestDefault(Pointer http, cups_dest_s dest, Pointer dinfo, Pointer option);
	/**
	 * New in CUPS 1.7<br>
	 * Original signature : <code>ipp_attribute_t* cupsFindDestDefault(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:294</i>
	 */
	PointerByReference cupsFindDestDefault(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, String option);
	/**
	 * New in CUPS 1.7<br>
	 * Original signature : <code>ipp_attribute_t* cupsFindDestDefault(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:294</i>
	 */
	PointerByReference cupsFindDestDefault(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, Pointer option);
	/**
	 * Original signature : <code>ipp_attribute_t* cupsFindDestReady(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:296</i><br>
	 * @deprecated use the safer methods {@link #cupsFindDestReady(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsFindDestReady(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsFindDestReady(Pointer http, cups_dest_s dest, Pointer dinfo, Pointer option);
	/**
	 * Original signature : <code>ipp_attribute_t* cupsFindDestReady(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:296</i>
	 */
	PointerByReference cupsFindDestReady(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, String option);
	/**
	 * Original signature : <code>ipp_attribute_t* cupsFindDestReady(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:296</i>
	 */
	PointerByReference cupsFindDestReady(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, Pointer option);
	/**
	 * Original signature : <code>ipp_attribute_t* cupsFindDestSupported(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:298</i><br>
	 * @deprecated use the safer methods {@link #cupsFindDestSupported(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, java.lang.String)} and {@link #cupsFindDestSupported(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	PointerByReference cupsFindDestSupported(Pointer http, cups_dest_s dest, Pointer dinfo, Pointer option);
	/**
	 * Original signature : <code>ipp_attribute_t* cupsFindDestSupported(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:298</i>
	 */
	PointerByReference cupsFindDestSupported(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, String option);
	/**
	 * Original signature : <code>ipp_attribute_t* cupsFindDestSupported(http_t*, cups_dest_t*, cups_dinfo_t*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:298</i>
	 */
	PointerByReference cupsFindDestSupported(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, Pointer option);
	/**
	 * Original signature : <code>int cupsGetDestMediaByIndex(http_t*, cups_dest_t*, cups_dinfo_t*, int, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:300</i><br>
	 * @deprecated use the safer method {@link #cupsGetDestMediaByIndex(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int, int, ml.rabidbeaver.jna.cups_size_s)} instead
	 */
	@Deprecated 
	int cupsGetDestMediaByIndex(Pointer http, cups_dest_s dest, Pointer dinfo, int n, int flags, cups_size_s size);
	/**
	 * Original signature : <code>int cupsGetDestMediaByIndex(http_t*, cups_dest_t*, cups_dinfo_t*, int, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:300</i>
	 */
	int cupsGetDestMediaByIndex(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, int n, int flags, cups_size_s size);
	/**
	 * Original signature : <code>int cupsGetDestMediaCount(http_t*, cups_dest_t*, cups_dinfo_t*, unsigned)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:302</i><br>
	 * @deprecated use the safer method {@link #cupsGetDestMediaCount(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int)} instead
	 */
	@Deprecated 
	int cupsGetDestMediaCount(Pointer http, cups_dest_s dest, Pointer dinfo, int flags);
	/**
	 * Original signature : <code>int cupsGetDestMediaCount(http_t*, cups_dest_t*, cups_dinfo_t*, unsigned)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:302</i>
	 */
	int cupsGetDestMediaCount(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, int flags);
	/**
	 * Original signature : <code>int cupsGetDestMediaDefault(http_t*, cups_dest_t*, cups_dinfo_t*, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:304</i><br>
	 * @deprecated use the safer method {@link #cupsGetDestMediaDefault(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int, ml.rabidbeaver.jna.cups_size_s)} instead
	 */
	@Deprecated 
	int cupsGetDestMediaDefault(Pointer http, cups_dest_s dest, Pointer dinfo, int flags, cups_size_s size);
	/**
	 * Original signature : <code>int cupsGetDestMediaDefault(http_t*, cups_dest_t*, cups_dinfo_t*, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:304</i>
	 */
	int cupsGetDestMediaDefault(PointerByReference http, cups_dest_s dest, PointerByReference dinfo, int flags, cups_size_s size);
	/**
	 * Original signature : <code>void cupsSetUserAgent(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:306</i><br>
	 * @deprecated use the safer methods {@link #cupsSetUserAgent(java.lang.String)} and {@link #cupsSetUserAgent(com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	void cupsSetUserAgent(Pointer user_agent);
	/**
	 * Original signature : <code>void cupsSetUserAgent(const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:306</i>
	 */
	void cupsSetUserAgent(String user_agent);
	/**
	 * Original signature : <code>char* cupsUserAgent()</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:308</i>
	 */
	Pointer cupsUserAgent();
	/**
	 * New in CUPS 2.0/OS X 10.10<br>
	 * Original signature : <code>cups_dest_t* cupsGetDestWithURI(const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:313</i><br>
	 * @deprecated use the safer methods {@link #cupsGetDestWithURI(java.lang.String, java.lang.String)} and {@link #cupsGetDestWithURI(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	@Deprecated 
	cups_dest_s cupsGetDestWithURI(Pointer name, Pointer uri);
	/**
	 * New in CUPS 2.0/OS X 10.10<br>
	 * Original signature : <code>cups_dest_t* cupsGetDestWithURI(const char*, const char*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:313</i>
	 */
	cups_dest_s cupsGetDestWithURI(String name, String uri);
	/**
	 * Original signature : <code>char* cupsLocalizeDestMedia(http_t*, cups_dest_t*, cups_dinfo_t*, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:315</i><br>
	 * @deprecated use the safer method {@link #cupsLocalizeDestMedia(com.sun.jna.ptr.PointerByReference, ml.rabidbeaver.jna.cups_dest_s, com.sun.jna.ptr.PointerByReference, int, ml.rabidbeaver.jna.cups_size_s)} instead
	 */
	@Deprecated 
	Pointer cupsLocalizeDestMedia(Pointer http, cups_dest_s dest, Pointer info, int flags, cups_size_s size);
	/**
	 * Original signature : <code>char* cupsLocalizeDestMedia(http_t*, cups_dest_t*, cups_dinfo_t*, unsigned, cups_size_t*)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:315</i>
	 */
	Pointer cupsLocalizeDestMedia(PointerByReference http, cups_dest_s dest, PointerByReference info, int flags, cups_size_s size);
	/**
	 * Original signature : <code>int cupsMakeServerCredentials(const char*, const char*, int, const char**, long)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:317</i><br>
	 * @deprecated use the safer methods {@link #cupsMakeServerCredentials(java.lang.String, java.lang.String, int, java.lang.String[], com.sun.jna.NativeLong)} and {@link #cupsMakeServerCredentials(com.sun.jna.Pointer, com.sun.jna.Pointer, int, com.sun.jna.ptr.PointerByReference, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	int cupsMakeServerCredentials(Pointer path, Pointer common_name, int num_alt_names, PointerByReference alt_names, NativeLong expiration_date);
	/**
	 * Original signature : <code>int cupsMakeServerCredentials(const char*, const char*, int, const char**, long)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:317</i>
	 */
	int cupsMakeServerCredentials(String path, String common_name, int num_alt_names, String alt_names[], NativeLong expiration_date);
	/**
	 * Original signature : <code>int cupsSetServerCredentials(const char*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:319</i><br>
	 * @deprecated use the safer methods {@link #cupsSetServerCredentials(java.lang.String, java.lang.String, int)} and {@link #cupsSetServerCredentials(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	@Deprecated 
	int cupsSetServerCredentials(Pointer path, Pointer common_name, int auto_create);
	/**
	 * Original signature : <code>int cupsSetServerCredentials(const char*, const char*, int)</code><br>
	 * <i>native declaration : /home/adam/git/CupsClientService/jni/cups-2.0.2/cups/cups.h:319</i>
	 */
	int cupsSetServerCredentials(String path, String common_name, int auto_create);
	public static class ipp_t extends PointerType {
		public ipp_t(Pointer address) {
			super(address);
		}
		public ipp_t() {
			super();
		}
	};
	public static class sockaddr_un extends PointerType {
		public sockaddr_un(Pointer address) {
			super(address);
		}
		public sockaddr_un() {
			super();
		}
	};
	public static class cups_array_t extends PointerType {
		public cups_array_t(Pointer address) {
			super(address);
		}
		public cups_array_t() {
			super();
		}
	};
	public static class ipp_attribute_t extends PointerType {
		public ipp_attribute_t(Pointer address) {
			super(address);
		}
		public ipp_attribute_t() {
			super();
		}
	};
	public static class sockaddr_in6 extends PointerType {
		public sockaddr_in6(Pointer address) {
			super(address);
		}
		public sockaddr_in6() {
			super();
		}
	};
	public static class sockaddr extends PointerType {
		public sockaddr(Pointer address) {
			super(address);
		}
		public sockaddr() {
			super();
		}
	};
	public static class cups_file_t extends PointerType {
		public cups_file_t(Pointer address) {
			super(address);
		}
		public cups_file_t() {
			super();
		}
	};
	public static class ipp_iocb_t extends PointerType {
		public ipp_iocb_t(Pointer address) {
			super(address);
		}
		public ipp_iocb_t() {
			super();
		}
	};
	public static class http_t extends PointerType {
		public http_t(Pointer address) {
			super(address);
		}
		public http_t() {
			super();
		}
	};
	public static class cups_dinfo_t extends PointerType {
		public cups_dinfo_t(Pointer address) {
			super(address);
		}
		public cups_dinfo_t() {
			super();
		}
	};
	public static class sockaddr_in extends PointerType {
		public sockaddr_in(Pointer address) {
			super(address);
		}
		public sockaddr_in() {
			super();
		}
	};
	public static class hostent extends PointerType {
		public hostent(Pointer address) {
			super(address);
		}
		public hostent() {
			super();
		}
	};
}
